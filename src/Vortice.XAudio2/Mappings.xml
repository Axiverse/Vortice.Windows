<?xml version="1.0" encoding="utf-8"?>
<config id="vortice-xaudio2" xmlns="urn:SharpGen.Config">
  <assembly>Vortice.XAudio2</assembly>
  <namespace>Vortice.XAudio2</namespace>
  <depends>Vortice.Runtime.COM</depends>
  <depends>Vortice.Multimedia</depends>

  <sdk name="WindowsSdk" version="10.0.18362.0" />
  <sdk name="StdLib" />
  <include-dir override="true">$(THIS_CONFIG_PATH)/../native/include</include-dir>

  <include file="xaudio2.h" attach="true" />

  <extension>
    <define struct="System.Drawing.Point" sizeof="8" />
    <define struct="System.Drawing.PointF" sizeof="8" />
    <define struct="System.Drawing.Size" sizeof="8" />
    <define struct="System.Drawing.SizeF" sizeof="8" />
    <define struct="System.Drawing.Rectangle" sizeof="16" />
    <define struct="System.Drawing.RectangleF" sizeof="16" />
    <define struct="System.Numerics.Vector2" sizeof="8" />
    <define struct="System.Numerics.Vector3" sizeof="12" />
    <define struct="System.Numerics.Vector4" sizeof="16" />
    <define struct="System.Numerics.Matrix3x2" sizeof="24" />
    <define struct="System.Numerics.Matrix4x4" sizeof="64" />

    <create-cpp enum="XAUDIO2_VOICE_SEND_FLAGS" macro="XAUDIO2_SEND_(USEFILTER)" />
    <create-cpp enum="XAUDIO2_VOICE_FLAGS" macro="XAUDIO2_VOICE_.*" />
    <create-cpp enum="XAUDIO2_FLAGS" macro="XAUDIO2_DEBUG_ENGINE" />
    <create-cpp enum="XAUDIO2_PLAY_FLAGS" macro="XAUDIO2_PLAY_.*" />
    <create-cpp enum="XAUDIO2_LOG_TYPE" macro="XAUDIO2_LOG_.*" />
    <create-cpp enum="XAUDIO2_BUFFER_FLAGS" macro="XAUDIO2_END_OF_STREAM" />
    <create-cpp enum="XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER" macro="Processor[0-9]+|XAUDIO2_ANY_PROCESSOR|XAUDIO2_DEFAULT_PROCESSOR" />
    <const from-guid="CLSID_XAudio2.*" class="Vortice.XAudio2.IXAudio2" type="System.Guid">new System.Guid("$1")</const>
    <const from-guid="IID_IXAudio2" class="Vortice.XAudio2.IXAudio2" type="System.Guid">new System.Guid("$1")</const>

    <const from-macro="XAUDIO2_MAX_BUFFER_BYTES" type="int" cpp-type="int" name="MaximumBufferBytes" class="Vortice.XAudio2.IXAudio2" visibility="public const">unchecked((int)$1)</const>
    <const from-macro="XAUDIO2_MAX_QUEUED_BUFFERS" type="int" cpp-type="int" name="MaximumQueuedBuffers" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MAX_AUDIO_CHANNELS" type="int" cpp-type="int" name="MaximumAudioChannels" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MIN_SAMPLE_RATE" type="int" cpp-type="int" name="MinimumSampleRate" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MAX_SAMPLE_RATE" type="int" cpp-type="int" name="MaximumSampleRate" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MAX_VOLUME_LEVEL" type="float" cpp-type="float" name="MaximumVolumeLevel" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MIN_FREQ_RATIO" type="float" cpp-type="float" name="MinimumFrequencyRatio" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MAX_FREQ_RATIO" type="float" cpp-type="float" name="MaximumFrequencyRatio" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_DEFAULT_FREQ_RATIO" type="float" cpp-type="float" name="DefaultFrequencyRatio" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MAX_FILTER_ONEOVERQ" type="float" cpp-type="float" name="MaximumFilterOneOverQ" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MAX_FILTER_FREQUENCY" type="float" cpp-type="float" name="MaximumFilterFrequency" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_MAX_LOOP_COUNT" type="int" cpp-type="int" name="MaximumLoopCount" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_COMMIT_NOW" type="int" cpp-type="int" name="CommitNow" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_COMMIT_ALL" type="int" cpp-type="int" name="CommitAll" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_NO_LOOP_REGION" type="int" cpp-type="int" name="NoLoopRegion" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_LOOP_INFINITE" type="int" cpp-type="int" name="LoopInfinite" class="Vortice.IXAudio2.AudioBuffer" visibility="public const" />
    <const from-macro="XAUDIO2_DEFAULT_CHANNELS" type="int" cpp-type="int" name="DefaultChannels" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_DEFAULT_SAMPLERATE" type="int" cpp-type="int" name="DefaultSampleRate" class="Vortice.XAudio2.IXAudio2" visibility="public const" />
    <const from-macro="XAUDIO2_VOICE_NOSAMPLESPLAYED" type="int" cpp-type="int" name="NoSamplesPlayed" class="Vortice.XAudio2.IXAudio2SourceVoice" visibility="private const" />

    <create class="ResultCode" visibility="public"/>
    <const from-macro="XAUDIO2_E_(.*)" type="SharpGen.Runtime.ResultDescriptor" cpp-type="int" name="$1" class="Vortice.XAudio2.ResultCode" visibility="public static readonly">new SharpGen.Runtime.ResultDescriptor($1, "$3", "$0", "$2")</const>
  </extension>

  <bindings>
    <bind from="UINT32" to="System.Int32" />
  </bindings>

  <mapping>
    <!-- Enums -->
    <map enum="XAUDIO2_(.*)" name-tmp="$1" />
    <map enum="XAUDIO2_LOG_TYPE" flags="true" />
    <map enum="XAUDIO2_FLAGS" name="XAudio2Flags" />
    <map enum="XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER" name="ProcessorSpecifier"/>
    <map enum-item="XAUDIO2_ANY_PROCESSOR" name="AnyProcessor" />
    <map enum-item="XAUDIO2_DEFAULT_PROCESSOR" name="DefaultProcessor" />
    <map enum-item="XAUDIO2_VOICE_NOPITCH" name="NoPitch"/>
    <map enum-item="XAUDIO2_VOICE_NOSRC" name="NoSampleRateConversion"/>
    <map enum-item="XAUDIO2_VOICE_USEFILTER" name="UseFilter"/>
    <map enum-item="XAUDIO2_VOICE_MUSIC" name="Music"/>
    <map enum-item="XAUDIO2_SEND_(USEFILTER)" name="UseFilter"/>

    <!-- Structs -->
    <map struct="XAUDIO2_(.*)" name-tmp="$1" />
    <map struct="XAUDIO2_.*" pack="4" />
    <map struct="XAUDIO2FX_(.*)" name-tmp="$1" />

    <!-- XAUDIO2_BUFFER -->
    <map struct="XAUDIO2_BUFFER" name="AudioBuffer" />
    <map field="XAUDIO2_BUFFER::Flags" type="XAUDIO2_BUFFER_FLAGS" />
    <map field="XAUDIO2_BUFFER::pContext" name="Context" />
    <map struct="XAUDIO2_BUFFER" native="true" struct-to-class="true" marshal="false" new="false" />
    <map field="XAUDIO2_BUFFER::pAudioData" name="AudioDataPointer" />

    <!-- XAUDIO2_BUFFER_WMA -->
    <map struct="XAUDIO2_BUFFER_WMA" visibility="internal"/>
    <map field="XAUDIO2_BUFFER_WMA::pDecodedPacketCumulativeBytes" name="DecodedPacketCumulativeBytesPointer" />

    <!-- XAUDIO2_EFFECT_CHAIN -->
    <map struct="XAUDIO2_EFFECT_CHAIN" visibility="internal" />
    <map field="XAUDIO2_EFFECT_CHAIN::pEffectDescriptors" name="EffectDescriptorPointer" />
    <map field="XAUDIO2_EFFECT_CHAIN::pEffectDescriptors" visibility="internal" />

    <map field="XAUDIO2_VOICE_STATE::pCurrentBufferContext" name="Context" />

    <!-- IXAudio2 -->
    <map method="IXAudio2::.*" custom-vtbl="true"/>
    <map method="IXAudio2::Initialize" visibility="internal" />
    <map method="IXAudio2::GetDeviceDetails" visibility="internal" />
    <map method="IXAudio2::Create.*" visibility="internal" />
    <map param="IXAudio2::CreateMasteringVoice::ppMasteringVoice" attribute="out" return="true" />
    <map param="IXAudio2::CreateSourceVoice::ppSourceVoice" attribute="out" return="true" />
    <map param="IXAudio2::CreateSourceVoice::Flags" type="XAUDIO2_VOICE_FLAGS" />
    <map param="IXAudio2::CreateSourceVoice::pSourceFormat" type="void" />
    <map param="IXAudio2::CreateSubmixVoice::ppSubmixVoice" attribute="out" return="true" />

    <map method="IXAudio2::(Unr|R)egisterForCallbacks" visibility="internal" />
    <map interface="IXAudio2EngineCallback" visibility="internal" />
    <map interface="IXAudio2.*Callback" callback="true" callback-dual="false" />

    <!-- IXAudio2Voice -->
    <map method="IXAudio2Voice::SetOutputVoices" visibility="internal" />
    <map method="IXAudio2Voice::GetEffectParameters" visibility="internal" />
    <map method="IXAudio2Voice::SetEffectParameters" visibility="internal" />
    <map method="IXAudio2Voice::GetEffectState" name="IsEffectEnabled"/>
    <map method="IXAudio2Voice::SetEffectChain" visibility="internal" property="false" />
    <map method="IXAudio2Voice::GetVoiceDetails" property="false"/>
    
    <!-- IXAudio2MasteringVoice -->
    <map method="IXAudio2MasteringVoice::GetChannelMask" property="false"/>
    
    <!-- IXAudio2SourceVoice -->
    <map method="IXAudio2SourceVoice::SetSourceSampleRate" property="false"/>
    <map method="IXAudio2SourceVoice::Start" visibility="internal" />
    <map param="IXAudio2SourceVoice::Stop::Flags" type="XAUDIO2_PLAY_FLAGS" />
    <map method="IXAudio2SourceVoice::SubmitSourceBuffer" visibility="internal" />
    <map method="IXAudio2SourceVoice::GetState" visibility="internal" />
    <map param="IXAudio2SourceVoice::GetState::pVoiceState" return="true" />
    <map method="IXAudio2SourceVoice::GetFrequencyRatio" visibility="internal" />
    
    <remove function="XAudio2CreateWithVersionInfo"/>
  </mapping>
</config>
