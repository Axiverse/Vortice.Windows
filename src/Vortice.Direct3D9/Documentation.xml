<?xml version="1.0" encoding="utf-8"?>
<comments>
  <comment id="IDirect3DDevice9::SetScissorRect">
    <summary>
      <para>Sets the scissor rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setscissorrect" /></para>
      <param name="rect">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure that defines the rendering area within the render target if scissor test is enabled. This parameter may not be <b>NULL</b>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DAuthenticatedChannel9::GetCertificate">
    <summary>
      <para>Gets the driver's certificate chain.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dauthenticatedchannel9-getcertificate" /></para>
      <param name="certifacteSize">The size of the <i>ppCertificate</i> array, in bytes. To get the size of the certificate chain, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3dauthenticatedchannel9-getcertificatesize">IDirect3DAuthenticatedChannel9::GetCertificateSize</a>.</param>
      <param name="certificate">A pointer to a byte array that receives the driver's X.509 certificate chain. The caller must allocate the array.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetTexture">
    <summary>
      <para>Assigns a texture to a stage for a device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-settexture" /></para>
      <param name="stage">Zero based sampler number.  Textures are bound to samplers; samplers define sampling state such as the filtering mode and the address wrapping mode. Textures are referenced differently by the programmable and the fixed function pipeline:
    


<ul>
<li>Programmable shaders reference textures using the sampler number. The number of samplers available to a programmable shader is dependent on the shader version. For vertex shaders, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx9-graphics-reference-asm-vs-registers-sampler">Sampler (Direct3D 9 asm-vs)</a>. For pixel shaders see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx9-graphics-reference-asm-ps-registers-sampler">Sampler (Direct3D 9 asm-ps)</a>.</li>
<li>The fixed function pipeline on the other hand, references textures by texture stage number. The maximum number of samplers is determined from two caps: MaxSimultaneousTextures and MaxTextureBlendStages of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d9caps/ns-d3d9caps-d3dcaps9">D3DCAPS9</a> structure.</li>
</ul>
There are two other special cases for stage/sampler numbers.

<ul>
<li>A special number called D3DDMAPSAMPLER is used for <a href="https://docs.microsoft.com/windows/desktop/direct3d9/displacement-mapping">Displacement Mapping (Direct3D 9)</a>.</li>
<li>A programmable vertex shader uses a special number defined by a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dvertextexturesampler">D3DVERTEXTEXTURESAMPLER</a> when accessing <a href="https://docs.microsoft.com/windows/desktop/direct3d9/vertex-textures-in-vs-3-0">Vertex Textures in vs_3_0 (DirectX HLSL)</a>.</li>
</ul></param>
      <param name="texture">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dbasetexture9">IDirect3DBaseTexture9</a> interface, representing the texture being set.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetFVF">
    <summary>
      <para>Gets the fixed vertex function declaration.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getfvf" /></para>
      <param name="fVF">A DWORD pointer to the fixed function vertex type. For more information, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dfvf">D3DFVF</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetLight">
    <summary>
      <para>Retrieves a set of lighting properties that this device uses.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getlight" /></para>
      <param name="index">Zero-based index of the lighting property set to retrieve. This method will fail if a lighting property has not been set for this index by calling the <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nf-d3d9helper-idirect3ddevice9-setlight">IDirect3DDevice9::SetLight</a> method.</param>
      <param name="unnamedParam2">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlight9">D3DLIGHT9</a> structure that is filled with the retrieved lighting-parameter set.</param>
    </summary>
  </comment>
  <comment id="IDirect3DStateBlock9::Apply">
    <summary>
      <para>Apply the state block to the current device state.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dstateblock9-apply" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::DrawPrimitive">
    <summary>
      <para>Renders a sequence of nonindexed, geometric primitives of the specified type from the current set of data input streams.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-drawprimitive" /></para>
      <param name="primitiveType">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dprimitivetype">D3DPRIMITIVETYPE</a> enumerated type, describing the type of primitive to render.</param>
      <param name="startVertex">Index of the first vertex to load. Beginning at StartVertex the correct number of vertices will be read out of the vertex buffer.</param>
      <param name="primitiveCount">Number of primitives to render. The maximum number of primitives allowed is determined by checking the MaxPrimitiveCount member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d9caps/ns-d3d9caps-d3dcaps9">D3DCAPS9</a> structure. PrimitiveCount is the number of primitives as determined by the primitive type. If it is a line list, each primitive has two vertices. If it is a triangle list, each primitive has three vertices.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9::GetAdapterDisplayMode">
    <summary>
      <para>Retrieves the current display mode of the adapter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3d9-getadapterdisplaymode" /></para>
      <param name="adapter">Ordinal number that denotes the display adapter to query. D3DADAPTER_DEFAULT is always the primary display adapter.</param>
      <param name="mode">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplaymode">D3DDISPLAYMODE</a> structure, to be filled with information describing the current adapter's mode.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetCursorProperties">
    <summary>
      <para>Sets properties for the cursor.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setcursorproperties" /></para>
      <param name="XHotSpot">X-coordinate offset (in pixels) that marks the center of the cursor. The offset is relative to the upper-left corner of the cursor. When the cursor is given a new position, the image is drawn at an offset from this new position determined by subtracting the hot spot coordinates from the position.</param>
      <param name="YHotSpot">Y-coordinate offset (in pixels) that marks the center of the cursor. The offset is relative to the upper-left corner of the cursor. When the cursor is given a new position, the image is drawn at an offset from this new position determined by subtracting the hot spot coordinates from the position.</param>
      <param name="cursorBitmap">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface. This parameter must point to an 8888 ARGB surface (format D3DFMT_A8R8G8B8). The contents of this surface will be copied and potentially format-converted into an internal buffer from which the cursor is displayed. The dimensions of this surface must be less than the dimensions of the display mode, and must be a power of two in each direction, although not necessarily the same power of two. The alpha channel must be either 0.0 or 1.0.</param>
    </summary>
  </comment>
  <comment id="IDirect3DCryptoSession9::GetCertificate">
    <summary>
      <para>Gets the driver's certificate chain.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dcryptosession9-getcertificate" /></para>
      <param name="certifacteSize">The size of the <i>ppCertificate</i> array, in bytes. To get the size of the certificate chain, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3dcryptosession9-getcertificatesize">IDirect3DCryptoSession9::GetCertificateSize</a>.</param>
      <param name="certificate">A pointer to a byte array that receives the driver's certificate chain. The caller must allocate the array.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::ColorFill">
    <summary>
      <para>Allows an application to fill a rectangular area of a D3DPOOL_DEFAULT surface with a specified color.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-colorfill" /></para>
      <param name="surface">Pointer to the surface to be filled.</param>
      <param name="rect">Pointer to the source rectangle. Using <b>NULL</b> means that the entire surface will be filled.</param>
      <param name="color">Color used for filling.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetPixelShaderConstantF">
    <summary>
      <para>Sets a floating-point shader constant.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setpixelshaderconstantf" /></para>
      <param name="startRegister">Register number that will contain the first constant value.</param>
      <param name="constantData">Pointer to an array of constants.</param>
      <param name="vector4fCount">Number of four float vectors in the array of constants.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::CreateDepthStencilSurface">
    <summary>
      <para>Creates a depth-stencil resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-createdepthstencilsurface" /></para>
      <param name="width">Width of the depth-stencil surface, in pixels.</param>
      <param name="height">Height of the depth-stencil surface, in pixels.</param>
      <param name="format">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type, describing the format of the depth-stencil surface. This value must be one of the enumerated depth-stencil formats for this device.</param>
      <param name="multiSample">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dmultisample-type">D3DMULTISAMPLE_TYPE</a> enumerated type, describing the multisampling buffer type. This value must be one of the allowed multisample types. When this surface is passed to <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9-setdepthstencilsurface">IDirect3DDevice9::SetDepthStencilSurface</a>, its multisample type must be the same as that of the render target set by <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nf-d3d9helper-idirect3ddevice9-setrendertarget">IDirect3DDevice9::SetRenderTarget</a>.</param>
      <param name="multisampleQuality">Quality level. The valid range is between zero and one less than the level returned by pQualityLevels used by  <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3d9-checkdevicemultisampletype">IDirect3D9::CheckDeviceMultiSampleType</a>. Passing a larger value returns the error D3DERR_INVALIDCALL. The MultisampleQuality values of paired render targets, depth stencil surfaces, and the MultiSample type must all match.</param>
      <param name="discard">Set this flag to <b>TRUE</b> to enable z-buffer discarding, and <b>FALSE</b> otherwise.				
If this flag is set, the contents of the depth stencil buffer will be invalid after calling either <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9-present">IDirect3DDevice9::Present</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9-setdepthstencilsurface">IDirect3DDevice9::SetDepthStencilSurface</a> with a different depth surface.

This flag has the same behavior as the constant,  D3DPRESENTFLAG_DISCARD_DEPTHSTENCIL, in <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresentflag">D3DPRESENTFLAG</a>.</param>
      <param name="surface">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface, representing the created depth-stencil surface resource.</param>
      <param name="sharedHandle">Reserved. Set this parameter to <b>NULL</b>. This parameter can be used in Direct3D 9 for Windows Vista to <a href="https://docs.microsoft.com/windows/desktop/direct3d9/dx9lh">share resources</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetVertexShaderConstantI">
    <summary>
      <para>Gets an integer vertex shader constant.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getvertexshaderconstanti" /></para>
      <param name="startRegister">Register number that will contain the first constant value.</param>
      <param name="constantData">Pointer to an array of constants.</param>
      <param name="vector4iCount">Number of four integer vectors in the array of constants.</param>
    </summary>
  </comment>
  <comment id="IDirect3DResource9::SetPrivateData">
    <summary>
      <para>Associates data with the resource that is intended for use by the application, not by Direct3D. Data is passed by value, and multiple sets of data can be associated with a single resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dresource9-setprivatedata" /></para>
      <param name="refguid">Reference to the globally unique identifier that identifies the private data to set.</param>
      <param name="data">Pointer to a buffer that contains the data to be associated with the resource.</param>
      <param name="sizeOfData">Size of the buffer at pData, in bytes.</param>
      <param name="flags">Value that describes the type of data being passed, or indicates to the application that the data should be invalidated when the resource changes. 



<table>
<tr>
<th>Item</th>
<th>Description</th>
</tr>
<tr>
<td width="40%">
<a id="_none_"></a><a id="_NONE_"></a>(none)

</td>
<td width="60%">
If no flags are specified, Direct3D allocates memory to hold the data within the buffer and copies the data into the new buffer. The buffer allocated by Direct3D is automatically freed, as appropriate.

</td>
</tr>
<tr>
<td width="40%">
<a id="D3DSPD_IUNKNOWN"></a><a id="d3dspd_iunknown"></a>D3DSPD_IUNKNOWN

</td>
<td width="60%">
The data at pData is a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a> interface. 
SizeOfData must be set to the size of a pointer to IUnknown, that is, sizeof(IUnknown*). Direct3D automatically callsIUnknown through pData when the private data is destroyed. Private data will be destroyed by a subsequent call to <b>IDirect3DResource9::SetPrivateData</b> with the same GUID, a subsequent call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nf-d3d9helper-idirect3dresource9-freeprivatedata">IDirect3DResource9::FreePrivateData</a>, or when the <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3d9">IDirect3D9</a> object is released. For more information, see Remarks.

</td>
</tr>
</table></param>
    </summary>
  </comment>
  <comment id="IDirect3D9Ex::GetAdapterLUID">
    <summary>
      <para>This method returns a unique identifier for the adapter that is specific to the adapter hardware. Applications can use this identifier to define robust mappings across various APIs (Direct3D 9, DXGI).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3d9ex-getadapterluid" /></para>
      <param name="adapter">Ordinal number denoting the display adapter from which to retrieve the LUID.</param>
      <param name="lUID">A unique identifier for the given adapter.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::ProcessVertices">
    <summary>
      <para>Applies the vertex processing defined by the vertex shader to the set of input data streams, generating a single stream of interleaved vertex data to the destination vertex buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-processvertices" /></para>
      <param name="srcStartIndex">Index of first vertex to load.</param>
      <param name="destIndex">Index of first vertex in the destination vertex buffer into which the results are placed.</param>
      <param name="vertexCount">Number of vertices to process.</param>
      <param name="destBuffer">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dvertexbuffer9">IDirect3DVertexBuffer9</a> interface, the destination vertex buffer representing the stream of interleaved vertex data.</param>
      <param name="vertexDecl">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dvertexdeclaration9">IDirect3DVertexDeclaration9</a> interface that represents the output vertex data declaration. When vertex shader 3.0 or above is set as the current vertex shader, the output vertex declaration must be present.</param>
      <param name="flags">Processing options. Set this parameter to 0 for default processing. Set to D3DPV_DONOTCOPYDATA to prevent the system from copying vertex data not affected by the vertex operation into the destination buffer. The D3DPV_DONOTCOPYDATA value may be combined with one or more <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlock">D3DLOCK</a> values appropriate for the destination buffer.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDeviceManager9::TestDevice">
    <summary>
      <para>Tests whether a Direct3D device handle is valid.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dxva2api/nf-dxva2api-idirect3ddevicemanager9-testdevice" /></para>
      <param name="hDevice">Handle to a Direct3D device. To get a device handle, call <a href="https://docs.microsoft.com/windows/desktop/api/dxva2api/nf-dxva2api-idirect3ddevicemanager9-opendevicehandle">IDirect3DDeviceManager9::OpenDeviceHandle</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9::CheckDepthStencilMatch">
    <summary>
      <para>Determines whether a depth-stencil format is compatible with a render-target format in a particular display mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3d9-checkdepthstencilmatch" /></para>
      <param name="adapter">Ordinal number denoting the display adapter to query. D3DADAPTER_DEFAULT is always the primary display adapter.</param>
      <param name="deviceType">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddevtype">D3DDEVTYPE</a> enumerated type, identifying the device type.</param>
      <param name="adapterFormat">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type, identifying the format of the display mode into which the adapter will be placed.</param>
      <param name="renderTargetFormat">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type, identifying the format of the render-target surface to be tested.</param>
      <param name="depthStencilFormat">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type, identifying the format of the depth-stencil surface to be tested.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9::GetAdapterCount">
    <summary>
      <para>Returns the number of adapters on the system.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3d9-getadaptercount" /></para>
    </summary>
  </comment>
  <comment id="IDirect3D9Ex::CreateDeviceEx">
    <summary>
      <para>Creates a device to represent the display adapter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3d9ex-createdeviceex" /></para>
      <param name="adapter">Ordinal number that denotes the display adapter. <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dadapter-default">D3DADAPTER_DEFAULT</a> is always the primary display adapter.</param>
      <param name="deviceType">Specifies the type of device. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddevtype">D3DDEVTYPE</a>. If the desired device type is not available, the method will fail.</param>
      <param name="hFocusWindow">The focus window alerts Direct3D when an application switches from foreground mode to background mode. For full-screen mode, the window specified must be a top-level window. For windowed mode, this parameter may be <b>NULL</b> only if the hDeviceWindow member of pPresentationParameters is set to a valid, non-<b>NULL</b> value.</param>
      <param name="behaviorFlags">Combination of one or more options (see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcreate">D3DCREATE</a>) that control device creation.</param>
      <param name="presentationParameters">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent-parameters">D3DPRESENT_PARAMETERS</a> structure, describing the presentation parameters for the device to be created. If <i>BehaviorFlags</i> specifies <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcreate">D3DCREATE_ADAPTERGROUP_DEVICE</a>, this parameter is an array. Regardless of the number of heads that exist, only one depth/stencil surface is automatically created.

This parameter is both an input and an output parameter. Calling this method may change several members including:

<ul>
<li>If BackBufferCount, BackBufferWidth, and BackBufferHeight are 0 before the method is called, they will be changed when the method returns.</li>
<li>If BackBufferFormat equals <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFMT_UNKNOWN</a> before the method is called, it will be changed when the method returns.</li>
</ul></param>
      <param name="fullscreenDisplayMode">The display mode for when the device is set to fullscreen. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplaymodeex">D3DDISPLAYMODEEX</a>. If <i>BehaviorFlags</i> specifies <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcreate">D3DCREATE_ADAPTERGROUP_DEVICE</a>, this parameter is an array. This parameter must be <b>NULL</b> for windowed mode.</param>
      <param name="returnedDeviceInterface">Address of a pointer to the returned <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nn-d3d9-idirect3ddevice9ex">IDirect3DDevice9Ex</a>, which represents the created device.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetSoftwareVertexProcessing">
    <summary>
      <para>Use this method to switch between software and hardware vertex processing.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setsoftwarevertexprocessing" /></para>
      <param name="software"><b>TRUE</b> to specify software vertex processing; <b>FALSE</b> to specify hardware vertex processing.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetNPatchMode">
    <summary>
      <para>Gets the N-patch mode segments.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getnpatchmode" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DVertexDeclaration9">
    <summary>
      <para>Applications use the methods of the IDirect3DVertexDeclaration9 interface to encapsulate the vertex shader declaration.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dvertexdeclaration9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DCryptoSession9::EncryptionBlt">
    <summary>
      <para>Reads encrypted data from a protected surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dcryptosession9-encryptionblt" /></para>
      <param name="srcSurface">Pointer to the protected surface.</param>
      <param name="dstSurface">Pointer to a surface that receives the encrypted data.</param>
      <param name="dstSurfaceSize">The size of the surface memory that <i>pDstSurface</i> points to, in bytes. The size must be aligned to the value of <b>BlockAlignmentSize</b> in the driver capabilities structure; see Remarks.</param>
      <param name="iV">Pointer to a buffer that receives the initialization vector (IV). The caller allocates this buffer, but the driver generates the IV.

If the encryption type is <b>D3DCRYPTOTYPE_AES128_CTR</b> (128-bit AES-CTR), <i>pIV</i> points to a <a href="https://docs.microsoft.com/windows/desktop/medfound/d3daes-ctr-iv">D3DAES_CTR_IV</a> structure. When the driver generates the first IV, it initializes the structure to a random number. For each subsequent IV, the driver simply increments the <b>IV</b> member of the structure, ensuring that the value always increases. This procedure enables the application to validate that the same IV is never used more than once with the same key pair.

For other encryption types, a different structure might be used, or the encryption might not use an IV.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::CreateVertexDeclaration">
    <summary>
      <para>Create a vertex shader declaration from the device and the vertex elements.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-createvertexdeclaration" /></para>
      <param name="vertexElements">An array of <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dvertexelement9">D3DVERTEXELEMENT9</a> vertex elements.</param>
      <param name="decl">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dvertexdeclaration9">IDirect3DVertexDeclaration9</a> pointer that returns the created vertex shader declaration.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVertexBuffer9::Unlock">
    <summary>
      <para>Unlocks vertex data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvertexbuffer9-unlock" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DTexture9::LockRect">
    <summary>
      <para>Locks a rectangle on a texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dtexture9-lockrect" /></para>
      <param name="level">Specifies the level of the texture resource to lock.</param>
      <param name="lockedRect">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlocked-rect">D3DLOCKED_RECT</a> structure, describing the locked region.</param>
      <param name="rect">Pointer to a rectangle to lock. Specified by a pointer to a RECT structure. Specifying <b>NULL</b> for this parameter expands the dirty region to cover the entire texture.</param>
      <param name="flags">Combination of zero or more locking flags that describe the type of lock to perform. For this method, the valid flags are: 
    


<ul>
<li>D3DLOCK_DISCARD</li>
<li>D3DLOCK_NO_DIRTY_UPDATE</li>
<li>D3DLOCK_NOSYSLOCK</li>
<li>D3DLOCK_READONLY</li>
</ul>
You may not specify a subrect when using D3DLOCK_DISCARD. For a description of the flags, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlock">D3DLOCK</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex">
    <summary>
      <para>Applications use the methods of the IDirect3DDevice9Ex interface to render primitives, create resources, work with system-level variables, adjust gamma ramp levels, work with palettes, and create shaders.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nn-d3d9-idirect3ddevice9ex" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::GetMaximumFrameLatency">
    <summary>
      <para>Retrieves the number of frames of data that the system is allowed to queue.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-getmaximumframelatency" /></para>
      <param name="maxLatency">Returns the number of frames that can be queued for render. The value is typically 3, but can range from 1 to 20.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetScissorRect">
    <summary>
      <para>Gets the scissor rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getscissorrect" /></para>
      <param name="rect">Returns a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure that defines the rendering area within the render target if scissor test is enabled.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetVertexShaderConstantF">
    <summary>
      <para>Sets a floating-point vertex shader constant.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setvertexshaderconstantf" /></para>
      <param name="startRegister">Register number that will contain the first constant value.</param>
      <param name="constantData">Pointer to an array of constants.</param>
      <param name="vector4fCount">Number of four float vectors in the array of constants.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetFVF">
    <summary>
      <para>Sets the current vertex stream declaration.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setfvf" /></para>
      <param name="FVF">DWORD containing the fixed function vertex type. For more information, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dfvf">D3DFVF</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::TestCooperativeLevel">
    <summary>
      <para>Reports the current cooperative-level status of the Direct3D device for a windowed or full-screen application.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-testcooperativelevel" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DStateBlock9::Capture">
    <summary>
      <para>Capture the current value of states that are included in a stateblock.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dstateblock9-capture" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DSwapChain9::Present">
    <summary>
      <para>Presents the contents of the next buffer in the sequence of back buffers owned by the swap chain.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dswapchain9-present" /></para>
      <param name="sourceRect">Pointer to the source rectangle (see <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a>). Use <b>NULL</b> to present the entire surface. This value must be <b>NULL</b> unless the swap chain was created with D3DSWAPEFFECT_COPY. If the rectangle exceeds the source surface, the rectangle is clipped to the source surface.</param>
      <param name="destRect">Pointer to the destination rectangle in client coordinates (see <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a>). This value must be <b>NULL</b> unless the swap chain was created with D3DSWAPEFFECT_COPY. Use <b>NULL</b> to fill the entire client area. If the rectangle exceeds the destination client area, the rectangle is clipped to the destination client area.</param>
      <param name="hDestWindowOverride">Destination window whose client area is taken as the target for this presentation. If this value is <b>NULL</b>, the runtime uses the <b>hDeviceWindow</b> member of <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent-parameters">D3DPRESENT_PARAMETERS</a> for the presentation.</param>
      <param name="dirtyRegion">This value must be <b>NULL</b> unless the swap chain was created with <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dswapeffect">D3DSWAPEFFECT_COPY</a>. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/flipping-surfaces">Flipping Surfaces (Direct3D 9)</a>.
    
 If this value is non-<b>NULL</b>, the contained region is expressed in back buffer coordinates. The rectangles within the region are the minimal set of pixels that need to be updated. This method takes these rectangles into account when optimizing the presentation by copying only the pixels within the region, or some suitably expanded set of rectangles. This is an aid to optimization only, and the application should not rely on the region being copied exactly. The implementation may choose to copy the whole source rectangle.</param>
      <param name="dwFlags">Allows the application to request that the method return immediately when the driver reports that it cannot schedule a presentation. Valid values are 0, or any combination of <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent">D3DPRESENT_DONOTWAIT</a> or <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent">D3DPRESENT_LINEAR_CONTENT</a>.
    


<ul>
<li>If dwFlags = 0, this method behaves as it did prior to Direct3D 9. Present will spin until the hardware is free, without returning an error.</li>
<li>If dwFlags = <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent">D3DPRESENT_DONOTWAIT</a>, and the hardware is busy processing or waiting for a vertical sync interval, the method will return D3DERR_WASSTILLDRAWING.</li>
<li>If dwFlags = <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent">D3DPRESENT_LINEAR_CONTENT</a>, gamma correction is performed from linear space to sRGB for windowed swap chains. This flag will take effect only when the driver exposes <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcaps3">D3DCAPS3_LINEAR_TO_SRGB_PRESENTATION</a> (see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/gamma">Gamma (Direct3D 9)</a>). Appliations should specify this flag if the backbuffer format is 16-bit floating point in order to match windowed mode present to fullscreen gamma behavior.</li>
</ul></param>
    </summary>
  </comment>
  <comment id="IDirect3DVertexShader9::GetFunction">
    <summary>
      <para>Gets a pointer to the shader data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvertexshader9-getfunction" /></para>
      <param name="unnamedParam1">Pointer to a buffer that contains the shader data. The application needs to allocate enough room for this.</param>
      <param name="sizeOfData">Size of the data, in bytes. To get the buffer size that is needed to retrieve the data, set pData = <b>NULL</b> when calling GetFunction. Then call GetFunction with the returned size, to get the buffer data.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::BeginStateBlock">
    <summary>
      <para>Signals Direct3D to begin recording a device-state block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-beginstateblock" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Video">
    <summary>
      <para>Enables an application to use content protection and encryption services implemented by a graphics driver.To get a pointer to this interface, call QueryInterface on a D3D9Ex device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nn-d3d9-idirect3ddevice9video" /></para>
    </summary>
  </comment>
  <comment id="IDirect3D9::RegisterSoftwareDevice">
    <summary>
      <para>Registers a pluggable software device. Software devices provide software rasterization enabling applications to access a variety of software rasterizers.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3d9-registersoftwaredevice" /></para>
      <param name="initializeFunction">Pointer to the initialization function for the software device to be registered.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::CreateRenderTarget">
    <summary>
      <para>Creates a render-target surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-createrendertarget" /></para>
      <param name="width">Width of the render-target surface, in pixels.</param>
      <param name="height">Height of the render-target surface, in pixels.</param>
      <param name="format">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type, describing the format of the render target.</param>
      <param name="multiSample">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dmultisample-type">D3DMULTISAMPLE_TYPE</a> enumerated type, which describes the multisampling buffer type. This parameter specifies the antialiasing type for this render target. When this surface is passed to <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nf-d3d9helper-idirect3ddevice9-setrendertarget">IDirect3DDevice9::SetRenderTarget</a>, its multisample type must be the same as that of the depth-stencil set by <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9-setdepthstencilsurface">IDirect3DDevice9::SetDepthStencilSurface</a>.</param>
      <param name="multisampleQuality">Quality level. The valid range is between zero and one less than the level returned by pQualityLevels used by  <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3d9-checkdevicemultisampletype">IDirect3D9::CheckDeviceMultiSampleType</a>. Passing a larger value returns the error, D3DERR_INVALIDCALL. The MultisampleQuality values of paired render targets, depth stencil surfaces, and the multisample type must all match.</param>
      <param name="lockable">Render targets are not lockable unless the application specifies <b>TRUE</b> for Lockable.

Note that lockable render targets reduce performance on some graphics hardware. The readback performance (moving data from video memory to system memory) depends on the type of hardware used (AGP vs. PCI Express) and is usually far lower than upload performance (moving data from system to video memory). If you need read access to render targets, use <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9-getrendertargetdata">GetRenderTargetData</a> instead of lockable render targets.</param>
      <param name="surface">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface.</param>
      <param name="sharedHandle">Reserved. Set this parameter to <b>NULL</b>. This parameter can be used in Direct3D 9 for Windows Vista to <a href="https://docs.microsoft.com/windows/desktop/direct3d9/dx9lh">share resources</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DResource9::GetType">
    <summary>
      <para>Returns the type of the resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dresource9-gettype" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::EndScene">
    <summary>
      <para>Ends a scene that was begun by calling IDirect3DDevice9::BeginScene.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-endscene" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::DrawIndexedPrimitiveUP">
    <summary>
      <para>Renders the specified geometric primitive with data specified by a user memory pointer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-drawindexedprimitiveup" /></para>
      <param name="primitiveType">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dprimitivetype">D3DPRIMITIVETYPE</a> enumerated type, describing the type of primitive to render.</param>
      <param name="minVertexIndex">Minimum vertex index. This is a zero-based index.</param>
      <param name="numVertices"> Number of vertices used during this call. The first vertex is located at index: MinVertexIndex.</param>
      <param name="primitiveCount">Number of primitives to render. The maximum number of primitives allowed is determined by checking the MaxPrimitiveCount member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d9caps/ns-d3d9caps-d3dcaps9">D3DCAPS9</a> structure (the number of indices is a function of the primitive count and the primitive type).</param>
      <param name="indexData">User memory pointer to the index data.</param>
      <param name="indexDataFormat">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type, describing the format of the index data. The valid settings are either: 


<ul>
<li>
<a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFMT_INDEX16</a>
</li>
<li>
<a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFMT_INDEX32</a>
</li>
</ul></param>
      <param name="vertexStreamZeroData">User memory pointer to the vertex data. The vertex data must be in stream 0.</param>
      <param name="vertexStreamZeroStride">The number of bytes of data for each vertex. This value may not be 0.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::CreateAdditionalSwapChain">
    <summary>
      <para>Creates an additional swap chain for rendering multiple views.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-createadditionalswapchain" /></para>
      <param name="presentationParameters">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent-parameters">D3DPRESENT_PARAMETERS</a> structure, containing the presentation parameters for the new swap chain. This value cannot be <b>NULL</b>.

Calling this method changes the value of members of the D3DPRESENT_PARAMETERS structure.

<ul>
<li>If BackBufferCount == 0, calling CreateAdditionalSwapChain will increase it to 1.</li>
<li>If the application is in windowed mode, and if either the BackBufferWidth or the BackBufferHeight == 0, they will be set to the client area width and height of the hwnd.</li>
</ul></param>
      <param name="swapChain">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dswapchain9">IDirect3DSwapChain9</a> interface, representing the additional swap chain.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDeviceManager9::LockDevice">
    <summary>
      <para>Gives the caller exclusive access to the Direct3D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dxva2api/nf-dxva2api-idirect3ddevicemanager9-lockdevice" /></para>
      <param name="hDevice">A handle to the Direct3D device. To get the device handle, call <a href="https://docs.microsoft.com/windows/desktop/api/dxva2api/nf-dxva2api-idirect3ddevicemanager9-opendevicehandle">IDirect3DDeviceManager9::OpenDeviceHandle</a>.</param>
      <param name="device">Receives a pointer to the device's <b>IDirect3DDevice9</b> interface.</param>
      <param name="fBlock">Specifies whether to wait for the device lock. If the device is already locked and this parameter is <b>TRUE</b>, the method blocks until the device is unlocked. Otherwise, if the device is locked and this parmater is <b>FALSE</b>, the method returns immediately with the error code <b>DXVA2_E_VIDEO_DEVICE_LOCKED</b>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DPixelShader9::GetFunction">
    <summary>
      <para>Gets a pointer to the shader data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dpixelshader9-getfunction" /></para>
      <param name="unnamedParam1">Pointer to a buffer that contains the shader data. The application needs to allocate enough room for this.</param>
      <param name="sizeOfData">Size of the data, in bytes. To get the buffer size that is needed to retrieve the data, set pData = <b>NULL</b> when calling GetFunction. Then call GetFunction with the returned size, to get the buffer data.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetPaletteEntries">
    <summary>
      <para>Sets palette entries.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setpaletteentries" /></para>
      <param name="paletteNumber">An ordinal value identifying the particular palette upon which the operation is to be performed.</param>
      <param name="entries">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/ns-wingdi-paletteentry">PALETTEENTRY</a> structure, representing the palette entries to set. The number of <b>PALETTEENTRY</b> structures pointed to by pEntries is assumed to be 256. See Remarks.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetCurrentTexturePalette">
    <summary>
      <para>Sets the current texture palette.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setcurrenttexturepalette" /></para>
      <param name="paletteNumber">Value that specifies the texture palette to set as the current texture palette.</param>
    </summary>
  </comment>
  <comment id="IDirect3DAuthenticatedChannel9::Configure">
    <summary>
      <para>Sends a configuration command to the authenticated channel.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dauthenticatedchannel9-configure" /></para>
      <param name="inputSize">The size of the <i>pInput</i> array, in bytes.</param>
      <param name="input">A pointer to a byte array that contains input data for the command. This buffer always starts with a <a href="https://docs.microsoft.com/windows/desktop/medfound/d3dauthenticatedchannel-configure-input">D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT</a> structure. The <b>ConfigureType</b> member of the structure specifies the command and defines the meaning of the rest of the buffer.</param>
      <param name="output">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/medfound/d3dauthenticatedchannel-configure-output">D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT</a> structure that receives the response to the command.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetNumberOfSwapChains">
    <summary>
      <para>Gets the number of implicit swap chains.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getnumberofswapchains" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetDepthStencilSurface">
    <summary>
      <para>Sets the depth stencil surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setdepthstencilsurface" /></para>
      <param name="newZStencil">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface representing the depth stencil surface. Setting this to <b>NULL</b> disables the depth stencil operation.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVolumeTexture9">
    <summary>
      <para>Applications use the methods of the IDirect3DVolumeTexture9 interface to manipulate a volume texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dvolumetexture9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DBaseTexture9::SetLOD">
    <summary>
      <para>Sets the most detailed level-of-detail for a managed texture.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dbasetexture9-setlod" /></para>
      <param name="LODNew">Most detailed level-of-detail value to set for the mipmap chain.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetDialogBoxMode">
    <summary>
      <para>This method allows the use of GDI dialog boxes in full-screen mode applications.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setdialogboxmode" /></para>
      <param name="enableDialogs"><b>TRUE</b> to enable GDI dialog boxes, and <b>FALSE</b> to disable them.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::UpdateTexture">
    <summary>
      <para>Updates the dirty portions of a texture.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-updatetexture" /></para>
      <param name="sourceTexture">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dbasetexture9">IDirect3DBaseTexture9</a> interface, representing the source texture. The source texture must be in system memory (D3DPOOL_SYSTEMMEM).</param>
      <param name="destinationTexture">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dbasetexture9">IDirect3DBaseTexture9</a> interface, representing the destination texture. The destination texture must be in the D3DPOOL_DEFAULT memory pool.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::Present">
    <summary>
      <para>Presents the contents of the next buffer in the sequence of back buffers owned by the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-present" /></para>
      <param name="sourceRect">Pointer to a value that must be <b>NULL</b> unless the swap chain was created with D3DSWAPEFFECT_COPY. pSourceRect is a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure containing the source rectangle. If <b>NULL</b>, the entire source surface is presented. If the rectangle exceeds the source surface, the rectangle is clipped to the source surface.</param>
      <param name="destRect">Pointer to a value that must be <b>NULL</b> unless the swap chain was created with D3DSWAPEFFECT_COPY. pDestRect is a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure containing the destination rectangle, in window client coordinates. If <b>NULL</b>, the entire client area is filled. If the rectangle exceeds the destination client area, the rectangle is clipped to the destination client area.</param>
      <param name="hDestWindowOverride">Pointer to a destination window whose client area is taken as the target for this presentation. If this value is <b>NULL</b>, the runtime uses the <b>hDeviceWindow</b> member of <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent-parameters">D3DPRESENT_PARAMETERS</a> for the presentation.</param>
      <param name="dirtyRegion">Value must be <b>NULL</b> unless the swap chain was created with D3DSWAPEFFECT_COPY. For more information about swap chains, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/flipping-surfaces">Flipping Surfaces (Direct3D 9)</a> and <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dswapeffect">D3DSWAPEFFECT</a>. If this value is non-<b>NULL</b>, the contained region is expressed in back buffer coordinates. The rectangles within the region are the minimal set of pixels that need to be updated. This method takes these rectangles into account when optimizing the presentation by copying only the pixels within the region, or some suitably expanded set of rectangles. This is an aid to optimization only, and the application should not rely on the region being copied exactly. The implementation can choose to copy the whole source rectangle.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::SetMaximumFrameLatency">
    <summary>
      <para>Set the number of frames that the system is allowed to queue for rendering.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-setmaximumframelatency" /></para>
      <param name="maxLatency">The maximum number of back buffer frames that a driver can queue. The value is typically 3, but can range from 1 to 20. A value of 0 will reset latency to the default. For multi-head devices, <i>MaxLatency</i> is specified per-head.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSwapChain9::GetDisplayMode">
    <summary>
      <para>Retrieves the display mode's spatial resolution, color resolution, and refresh frequency.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dswapchain9-getdisplaymode" /></para>
      <param name="mode">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplaymode">D3DDISPLAYMODE</a> structure containing data about the display mode of the adapter. As opposed to the display mode of the device, which may not be active if the device does not own full-screen mode.</param>
    </summary>
  </comment>
  <comment id="IDirect3DResource9::GetPriority">
    <summary>
      <para>Retrieves the priority for this resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dresource9-getpriority" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::PresentEx">
    <summary>
      <para>Swap the swapchain's next buffer with the front buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-presentex" /></para>
      <param name="sourceRect">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure indicating region on the source surface to copy in window client coordinates. Only applies when the swapchain was created with the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dswapeffect">D3DSWAPEFFECT_COPY</a> flag. If <b>NULL</b>, the entire source surface is presented. If the rectangle exceeds the source surface, it is clipped to the source surface.</param>
      <param name="destRect">Pointer to <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure indicating the target region on the destination surface in window client coordinates. Only applies when the swapchain was created with the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dswapeffect">D3DSWAPEFFECT_COPY</a> flag. If <b>NULL</b>, the entire client area is filled. If the rectangle exceeds the destination client area, it is clipped to the destination client area.</param>
      <param name="hDestWindowOverride">Pointer to a destination window whose client area is taken as the target for this presentation. If this value is <b>NULL</b>, the runtime uses the <b>hDeviceWindow</b> member of <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent-parameters">D3DPRESENT_PARAMETERS</a> for the presentation.

<div class="alert"><b>Note</b>  If you create a swap chain with D3DSWAPEFFECT_FLIPEX, you must pass <b>NULL</b> to <i>hDestWindowOverride</i></div>
<div> </div></param>
      <param name="dirtyRegion">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/ns-wingdi-rgndata">RGNDATA</a> structure indicating the smallest set of pixels that need to be transferred. This value must be <b>NULL</b> unless the swapchain was created with the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dswapeffect">D3DSWAPEFFECT_COPY</a> flag. For more information about swapchains, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/flipping-surfaces">Flipping Surfaces (Direct3D 9)</a>.

If this value is non-<b>NULL</b>, the contained region is expressed in back buffer coordinates. The method takes these rectangles into account when optimizing the presentation by copying only the pixels within the region, or some suitably expanded set of rectangles. This is an aid to optimization only, and the application should not rely on the region being copied exactly. The implementation can choose to copy the whole source rectangle.</param>
      <param name="dwFlags">Allows the application to request that the method return immediately when the driver reports that it cannot schedule a presentation. Valid values are 0, or any combination of <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent">D3DPRESENT</a> flags.



<ul>
<li>If dwFlags = 0, this method behaves as it did prior to Direct3D 9. Present will spin until the hardware is free, without returning an error.</li>
<li>If dwFlags = <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent">D3DPRESENT_DONOTFLIP</a> the display driver is called with the front buffer as both the source and target surface. The driver responds by scheduling a frame synch, but not changing the displayed surface. This flag is only available in full-screen mode or when using D3DSWAPEFFECT_FLIPEX in windowed mode.</li>
<li>If dwFlags = <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent">D3DPRESENT_DONOTWAIT</a>, and the hardware is busy processing or waiting for a vertical sync interval, the method will return D3DERR_WASSTILLDRAWING.</li>
<li>If dwFlags = <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent">D3DPRESENT_FORCEIMMEDIATE</a>, D3DPRESENT_INTERVAL_IMMEDIATE is enforced on this Present call. This flag can only be specified when using D3DSWAPEFFECT_FLIPEX. This behavior is the same for windowed and full-screen modes.</li>
<li>If dwFlags = <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent">D3DPRESENT_LINEAR_CONTENT</a>, gamma correction is performed from linear space to sRGB for windowed swap chains. This flag will take effect only when the driver exposes <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcaps3">D3DCAPS3_LINEAR_TO_SRGB_PRESENTATION</a> (see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/gamma">Gamma (Direct3D 9)</a>).</li>
</ul></param>
    </summary>
  </comment>
  <comment id="IDirect3DVolumeTexture9::AddDirtyBox">
    <summary>
      <para>Adds a dirty region to a volume texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvolumetexture9-adddirtybox" /></para>
      <param name="dirtyBox">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dbox">D3DBOX</a> structure, specifying the dirty region to add. Specifying <b>NULL</b> expands the dirty region to cover the entire volume texture.</param>
    </summary>
  </comment>
  <comment id="IDirect3DTexture9::GetLevelDesc">
    <summary>
      <para>Retrieves a level description of a texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dtexture9-getleveldesc" /></para>
      <param name="level">Identifies a level of the texture resource. This method returns a surface description for the level specified by this parameter.</param>
      <param name="desc">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dsurface-desc">D3DSURFACE_DESC</a> structure, describing the returned level.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetTextureStageState">
    <summary>
      <para>Retrieves a state value for an assigned texture.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-gettexturestagestate" /></para>
      <param name="stage">Stage identifier of the texture for which the state is retrieved. Stage identifiers are zero-based. Devices can have up to eight set textures, so the maximum value allowed for Stage is 7.</param>
      <param name="type">Texture state to retrieve. This parameter can be any member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dtexturestagestatetype">D3DTEXTURESTAGESTATETYPE</a> enumerated type.</param>
      <param name="value">Pointer a variable to fill with the retrieved state value. The meaning of the retrieved value is determined by the Type parameter.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetRenderState">
    <summary>
      <para>Sets a single device render-state parameter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setrenderstate" /></para>
      <param name="state">Device state variable that is being modified. This parameter can be any member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3drenderstatetype">D3DRENDERSTATETYPE</a> enumerated type.</param>
      <param name="value">New value for the device render state to be set. The meaning of this parameter is dependent on the value specified for <i>State</i>. For example, if <i>State</i> were D3DRS_SHADEMODE, the second parameter would be one member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dshademode">D3DSHADEMODE</a> enumerated type.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::WaitForVBlank">
    <summary>
      <para>Suspend execution of the calling thread until the next vertical blank signal.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-waitforvblank" /></para>
      <param name="iSwapChain">Swap chain index. This is an optional, zero-based index used to specify a swap chain on a multihead card.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSwapChain9Ex::GetDisplayModeEx">
    <summary>
      <para>Retrieves the display mode's spatial resolution, color resolution, refresh frequency, and rotation settings.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dswapchain9ex-getdisplaymodeex" /></para>
      <param name="mode">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplaymodeex">D3DDISPLAYMODEEX</a> structure containing data about the display mode of the adapter. As opposed to the display mode of the device, which may not be active if the device does not own full-screen mode.</param>
      <param name="rotation">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplayrotation">D3DDISPLAYROTATION</a> indicating the type of screen rotation the application will do. The value returned through this pointer is important when the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresentflag">D3DPRESENTFLAG_NOAUTOROTATE</a> flag is used; otherwise, it can be set to <b>NULL</b>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSwapChain9Ex::GetLastPresentCount">
    <summary>
      <para>Returns the number of times the swapchain has been processed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dswapchain9ex-getlastpresentcount" /></para>
      <param name="lastPresentCount">Pointer to a UINT to be filled with the number of times the <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9ex-presentex">IDirect3DDevice9Ex::PresentEx</a> method has been called. The count will also be incremented by calling some other APIs such as <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9-setdialogboxmode">IDirect3DDevice9::SetDialogBoxMode</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::TestCooperativeLevel">
    <summary>
      <para>Reports the current cooperative-level status of the Direct3D device for a windowed or full-screen application.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-testcooperativelevel" /></para>
    </summary>
  </comment>
  <comment id="IDirect3D9::CheckDeviceFormatConversion">
    <summary>
      <para>Tests the device to see if it supports conversion from one display format to another.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3d9-checkdeviceformatconversion" /></para>
      <param name="adapter">Display adapter ordinal number. D3DADAPTER_DEFAULT is always the primary display adapter. This method returns D3DERR_INVALIDCALL when this value equals or exceeds the number of display adapters in the system.</param>
      <param name="deviceType">Device type. Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddevtype">D3DDEVTYPE</a> enumerated type.</param>
      <param name="sourceFormat">Source adapter format. Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type.</param>
      <param name="targetFormat">Target adapter format. Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetDisplayMode">
    <summary>
      <para>Retrieves the display mode's spatial resolution, color resolution, and refresh frequency.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getdisplaymode" /></para>
      <param name="iSwapChain">An unsigned integer specifying the swap chain.</param>
      <param name="mode">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplaymode">D3DDISPLAYMODE</a> structure containing data about the display mode of the adapter. As opposed to the display mode of the device, which may not be active if the device does not own full-screen mode.</param>
    </summary>
  </comment>
  <comment id="IDirect3DBaseTexture9::GenerateMipSubLevels">
    <summary>
      <para>Generate mipmap sublevels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dbasetexture9-generatemipsublevels" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDeviceManager9::OpenDeviceHandle">
    <summary>
      <para>Gets a handle to the Direct3D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dxva2api/nf-dxva2api-idirect3ddevicemanager9-opendevicehandle" /></para>
      <param name="phDevice">Receives the device handle.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::CreateDepthStencilSurfaceEx">
    <summary>
      <para>Creates a depth-stencil surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-createdepthstencilsurfaceex" /></para>
      <param name="width">Width of the depth-stencil surface, in pixels.</param>
      <param name="height">Height of the depth-stencil surface, in pixels.</param>
      <param name="format">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type, describing the format of the depth-stencil surface. This value must be one of the enumerated depth-stencil formats for this device.</param>
      <param name="multiSample">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dmultisample-type">D3DMULTISAMPLE_TYPE</a> enumerated type, describing the multisampling buffer type. This value must be one of the allowed multisample types. When this surface is passed to <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9-setdepthstencilsurface">IDirect3DDevice9::SetDepthStencilSurface</a>, its multisample type must be the same as that of the render target set by <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nf-d3d9helper-idirect3ddevice9-setrendertarget">IDirect3DDevice9::SetRenderTarget</a>.</param>
      <param name="multisampleQuality">Quality level. The valid range is between zero and one less than the level returned by pQualityLevels used by  <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3d9-checkdevicemultisampletype">IDirect3D9::CheckDeviceMultiSampleType</a>. Passing a larger value returns the error D3DERR_INVALIDCALL. The MultisampleQuality values of paired render targets, depth stencil surfaces, and the MultiSample type must all match.</param>
      <param name="discard">Set this flag to <b>TRUE</b> to enable z-buffer discarding, and <b>FALSE</b> otherwise.				
If this flag is set, the contents of the depth stencil buffer will be invalid after calling either <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9-present">IDirect3DDevice9::Present</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9-setdepthstencilsurface">IDirect3DDevice9::SetDepthStencilSurface</a> with a different depth surface.

This flag has the same behavior as the constant,  D3DPRESENTFLAG_DISCARD_DEPTHSTENCIL, in <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresentflag">D3DPRESENTFLAG</a>.</param>
      <param name="surface">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface, representing the created depth-stencil surface resource.</param>
      <param name="sharedHandle">Reserved. Set this parameter to <b>NULL</b>. This parameter can be used in Direct3D 9 for Windows Vista to <a href="https://docs.microsoft.com/windows/desktop/direct3d9/dx9lh">share resources</a>.</param>
      <param name="usage">Combination of one or more <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dusage">D3DUSAGE</a> constants which can be OR'd together. Value of 0 indicates no usage.</param>
    </summary>
  </comment>
  <comment id="IDirect3DBaseTexture9::SetAutoGenFilterType">
    <summary>
      <para>Set the filter type that is used for automatically generated mipmap sublevels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dbasetexture9-setautogenfiltertype" /></para>
      <param name="filterType">Filter type. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dtexturefiltertype">D3DTEXTUREFILTERTYPE</a>. This method will fail if the filter type is invalid or not supported.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9::CheckDeviceFormat">
    <summary>
      <para>Determines whether a surface format is available as a specified resource type and can be used as a texture, depth-stencil buffer, or render target, or any combination of the three, on a device representing this adapter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3d9-checkdeviceformat" /></para>
      <param name="adapter">Ordinal number denoting the display adapter to query. <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dadapter-default">D3DADAPTER_DEFAULT</a> is always the primary display adapter. This method returns D3DERR_INVALIDCALL when this value equals or exceeds the number of display adapters in the system.</param>
      <param name="deviceType">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddevtype">D3DDEVTYPE</a> enumerated type, identifying the device type.</param>
      <param name="adapterFormat">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type, identifying the format of the display mode into which the adapter will be placed.</param>
      <param name="usage">Requested usage options for the surface. Usage options are any combination of <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dusage">D3DUSAGE</a> and <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dusage-query">D3DUSAGE_QUERY</a> constants (only a subset of the D3DUSAGE constants are valid for <b>CheckDeviceFormat</b>; see the table on the D3DUSAGE page).</param>
      <param name="RType">Resource type requested for use with the queried format. Member of <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dresourcetype">D3DRESOURCETYPE</a>.</param>
      <param name="checkFormat">Format of the surfaces which may be used, as defined by Usage. Member of <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9::CheckDeviceType">
    <summary>
      <para>Verifies whether a hardware accelerated device type can be used on this adapter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3d9-checkdevicetype" /></para>
      <param name="iAdapter">Ordinal number denoting the display adapter to enumerate. D3DADAPTER_DEFAULT is always the primary display adapter. This method returns D3DERR_INVALIDCALL when this value equals or exceeds the number of display adapters in the system.</param>
      <param name="devType">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddevtype">D3DDEVTYPE</a> enumerated type, indicating the device type to check.</param>
      <param name="displayFormat">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type, indicating the format of the adapter display mode for which the device type is to be checked. For example, some devices will operate only in 16-bits-per-pixel modes.</param>
      <param name="backBufferFormat">Back buffer format. For more information about formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a>. This value must be one of the render-target formats. You can use <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3d9-getadapterdisplaymode">GetAdapterDisplayMode</a> to obtain the current format.
    
 For windowed applications, the back buffer format does not need to match the display mode format if the hardware supports color conversion. The set of possible back buffer formats is constrained, but the runtime will allow any valid back buffer format to be presented to any desktop format. There is the additional requirement that the device be operable in the desktop because devices typically do not operate in 8 bits per pixel modes.
    
 Full-screen applications cannot do color conversion.
    
 D3DFMT_UNKNOWN is allowed for windowed mode.</param>
      <param name="windowed">Value indicating whether the device type will be used in full-screen or windowed mode. If set to <b>TRUE</b>, the query is performed for windowed applications; otherwise, this value should be set <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Video::GetContentProtectionCaps">
    <summary>
      <para>Queries the display driver for its content protection capabilities.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9video-getcontentprotectioncaps" /></para>
      <param name="cryptoType">A pointer to a GUID that specifies the type of encryption to use. The following GUIDs are defined.


**D3DCRYPTOTYPE_AES128_CTR**

128-bit Advanced Encryption Standard CTR mode (AES-CTR) block cipher.

**D3DCRYPTOTYPE_PROPRIETARY**

Proprietary encryption algorithm.</param>
      <param name="decodeProfile">A pointer to a GUID that specifies the DirectX Video Acceleration 2 (DXVA-2) decoding profile. For a list of possible values, see <a href="https://docs.microsoft.com/windows/desktop/api/dxva2api/nf-dxva2api-idirectxvideodecoderservice-getdecoderdeviceguids">IDirectXVideoDecoderService::GetDecoderDeviceGuids</a>. If DXVA-2 decoding will not be used, set this parameter to <b>NULL</b>.</param>
      <param name="caps">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d9caps/ns-d3d9caps-d3dcontentprotectioncaps">D3DCONTENTPROTECTIONCAPS</a> structure. The method fills in this structure with the driver's content protection capabilities.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSwapChain9::GetDevice">
    <summary>
      <para>Retrieves the device associated with the swap chain.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dswapchain9-getdevice" /></para>
      <param name="device">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3ddevice9">IDirect3DDevice9</a> interface to fill with the device pointer, if the query succeeds.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::CreateIndexBuffer">
    <summary>
      <para>Creates an index buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-createindexbuffer" /></para>
      <param name="length">Size of the index buffer, in bytes.</param>
      <param name="usage">Usage can be 0, which indicates no usage value. However, if usage is desired, use a combination of one or more <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dusage">D3DUSAGE</a> constants. It is good practice to match the usage parameter in CreateIndexBuffer with the behavior flags in <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3d9-createdevice">IDirect3D9::CreateDevice</a>. For more information, see Remarks.</param>
      <param name="format">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type, describing the format of the index buffer. For more information, see Remarks. The valid settings are the following: 



<table>
<tr>
<th>Item</th>
<th>Description</th>
</tr>
<tr>
<td width="40%">
<a id="D3DFMT_INDEX16"></a><a id="d3dfmt_index16"></a>D3DFMT_INDEX16

</td>
<td width="60%">
Indices are 16 bits each.

</td>
</tr>
<tr>
<td width="40%">
<a id="D3DFMT_INDEX32"></a><a id="d3dfmt_index32"></a>D3DFMT_INDEX32

</td>
<td width="60%">
Indices are 32 bits each.

</td>
</tr>
</table></param>
      <param name="pool">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpool">D3DPOOL</a> enumerated type, describing a valid memory class into which to place the resource.</param>
      <param name="indexBuffer">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dindexbuffer9">IDirect3DIndexBuffer9</a> interface, representing the created index buffer resource.</param>
      <param name="sharedHandle">This parameter can be used in Direct3D 9 for Windows Vista to <a href="https://docs.microsoft.com/windows/desktop/direct3d9/dx9lh">share resources</a>; set it to <b>NULL</b> to not share a resource. This parameter is not used in Direct3D 9 for operating systems earlier than Windows Vista; set it to <b>NULL</b>.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9::GetAdapterIdentifier">
    <summary>
      <para>Describes the physical display adapters present in the system when the IDirect3D9 interface was instantiated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3d9-getadapteridentifier" /></para>
      <param name="adapter">Ordinal number that denotes the display adapter. D3DADAPTER_DEFAULT is always the primary display adapter. The minimum value for this parameter is 0, and the maximum value for this parameter is one less than the value returned by <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3d9-getadaptercount">GetAdapterCount</a>.</param>
      <param name="flags">Flags sets the <b>WHQLLevel</b> member of <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dadapter-identifier9">D3DADAPTER_IDENTIFIER9</a>. Flags can be set to either 0 or D3DENUM_WHQL_LEVEL. If D3DENUM_WHQL_LEVEL is specified, this call can connect to the Internet to download new Microsoft Windows Hardware Quality Labs (WHQL) certificates.

Differences between Direct3D 9 and Direct3D 9Ex:

D3DENUM_WHQL_LEVEL is deprecated for Direct3D9Ex running on Windows Vista, Windows Server 2008, Windows 7, and Windows Server 2008 R2 (or more current operating system). Any of these operating systems return 1 in the <b>WHQLLevel</b> member of <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dadapter-identifier9">D3DADAPTER_IDENTIFIER9</a> without checking the status of the driver.</param>
      <param name="identifier">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dadapter-identifier9">D3DADAPTER_IDENTIFIER9</a> structure to be filled with information describing this adapter. If <i>Adapter</i> is greater than or equal to the number of adapters in the system, this structure will be zeroed.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSurface9::GetContainer">
    <summary>
      <para>Provides access to the parent cube texture or texture (mipmap) object, if this surface is a child level of a cube texture or a mipmap. This method can also provide access to the parent swap chain if the surface is a back-buffer child.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dsurface9-getcontainer" /></para>
      <param name="riid">Reference identifier of the container being requested.</param>
      <param name="container">Address of a pointer to fill with the container pointer if the query succeeds. See Remarks.</param>
    </summary>
  </comment>
  <comment id="IDirect3DCryptoSession9::GetSurfacePitch">
    <summary>
      <para>Gets the stride of a protected surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dcryptosession9-getsurfacepitch" /></para>
      <param name="srcSurface">Pointer to the protected surface.</param>
      <param name="surfacePitch">Receives the stride, in bytes.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::ValidateDevice">
    <summary>
      <para>Reports the device's ability to render the current texture-blending operations and arguments in a single pass.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-validatedevice" /></para>
      <param name="numPasses">Pointer to a DWORD value to fill with the number of rendering passes needed to complete the desired effect through multipass rendering.</param>
    </summary>
  </comment>
  <comment id="IDirect3DResource9::FreePrivateData">
    <summary>
      <para>Frees the specified private data associated with this resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dresource9-freeprivatedata" /></para>
      <param name="refguid">Reference to the globally unique identifier that identifies the private data to free.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetViewport">
    <summary>
      <para>Retrieves the viewport parameters currently set for the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getviewport" /></para>
      <param name="viewport">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dviewport9">D3DVIEWPORT9</a> structure, representing the returned viewport parameters.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetTextureStageState">
    <summary>
      <para>Sets the state value for the currently assigned texture.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-settexturestagestate" /></para>
      <param name="stage">Stage identifier of the texture for which the state value is set. Stage identifiers are zero-based. Devices can have up to eight set textures, so the maximum value allowed for Stage is 7.</param>
      <param name="type">Texture state to set. This parameter can be any member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dtexturestagestatetype">D3DTEXTURESTAGESTATETYPE</a> enumerated type.</param>
      <param name="value">State value to set. The meaning of this value is determined by the Type parameter.</param>
    </summary>
  </comment>
  <comment id="IDirect3DPixelShader9">
    <summary>
      <para>Applications use the methods of the IDirect3DPixelShader9 interface to encapsulate the functionality of a pixel shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dpixelshader9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DVolume9::SetPrivateData">
    <summary>
      <para>Associates data with the volume that is intended for use by the application, not by Direct3D.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvolume9-setprivatedata" /></para>
      <param name="refguid">Reference to the globally unique identifier that identifies the private data to set.</param>
      <param name="data">Pointer to a buffer that contains the data to associate with the volume.</param>
      <param name="sizeOfData">Size of the buffer at pData in bytes.</param>
      <param name="flags">Value that describes the type of data being passed, or indicates to the application that the data should be invalidated when the resource changes. 



<table>
<tr>
<th>Item</th>
<th>Description</th>
</tr>
<tr>
<td width="40%">
<a id="_none_"></a><a id="_NONE_"></a>(none)

</td>
<td width="60%">
If no flags are specified, Direct3D allocates memory to hold the data within the buffer and copies the data into the new buffer. The buffer allocated by Direct3D is automatically freed, as appropriate.

</td>
</tr>
<tr>
<td width="40%">
<a id="D3DSPD_IUNKNOWN"></a><a id="d3dspd_iunknown"></a>D3DSPD_IUNKNOWN

</td>
<td width="60%">
The data at pData is a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a> interface. SizeOfData must be set to the size of a pointer to an <b>IUnknown</b> interface, sizeof(IUnknown*). Direct3D automatically calls <b>IUnknown</b> through pData and IUnknown when the private data is destroyed. Private data will be destroyed by a subsequent call to <b>IDirect3DVolume9::SetPrivateData</b> with the same GUID, a subsequent call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nf-d3d9helper-idirect3dvolume9-freeprivatedata">IDirect3DVolume9::FreePrivateData</a>, or when the <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3d9">IDirect3D9</a> object is released. For more information, see Remarks.

</td>
</tr>
</table></param>
    </summary>
  </comment>
  <comment id="IDirect3D9::CreateDevice">
    <summary>
      <para>Creates a device to represent the display adapter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3d9-createdevice" /></para>
      <param name="adapter">Ordinal number that denotes the display adapter. <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dadapter-default">D3DADAPTER_DEFAULT</a> is always the primary display adapter.</param>
      <param name="deviceType">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddevtype">D3DDEVTYPE</a> enumerated type that denotes the desired device type. If the desired device type is not available, the method will fail.</param>
      <param name="hFocusWindow">The focus window alerts Direct3D when an application switches from foreground mode to background mode. See Remarks. 	
    


<ul>
<li>For full-screen mode, the window specified must be a top-level window.</li>
<li>For windowed mode, this parameter may be <b>NULL</b> only if the hDeviceWindow member of <i>pPresentationParameters</i> is set to a valid, non-<b>NULL</b> value.</li>
</ul></param>
      <param name="behaviorFlags">Combination of one or more options that control device creation. For more information, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcreate">D3DCREATE</a>.</param>
      <param name="presentationParameters">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent-parameters">D3DPRESENT_PARAMETERS</a> structure, describing the presentation parameters for the device to be created. If BehaviorFlags specifies <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcreate">D3DCREATE_ADAPTERGROUP_DEVICE</a>, pPresentationParameters is an array. Regardless of the number of heads that exist, only one depth/stencil surface is automatically created.

For Windows 2000 and Windows XP, the full-screen device display refresh rate is set in the following order: 

<ol>
<li>User-specified nonzero ForcedRefreshRate registry key, if supported by the device.</li>
<li>Application-specified nonzero refresh rate value in the presentation parameter.</li>
<li>Refresh rate of the latest desktop, if supported by the device.</li>
<li>75 hertz if supported by the device.</li>
<li>60 hertz if supported by the device.</li>
<li>Device default.</li>
</ol>
An unsupported refresh rate will default to the closest supported refresh rate below it.  For example, if the application specifies 63 hertz, 60 hertz will be used. There are no supported refresh rates below 57 hertz.

pPresentationParameters is both an input and an output parameter. Calling this method may change several members including:

<ul>
<li>If BackBufferCount, BackBufferWidth, and BackBufferHeight  are 0 before the method is called, they will be changed when the method returns.</li>
<li>If BackBufferFormat equals <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFMT_UNKNOWN</a> before the method is called, it will be changed when the method returns.</li>
</ul></param>
      <param name="returnedDeviceInterface">Address of a pointer to the returned <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3ddevice9">IDirect3DDevice9</a> interface, which represents the created device.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVertexBuffer9::Lock">
    <summary>
      <para>Locks a range of vertex data and obtains a pointer to the vertex buffer memory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvertexbuffer9-lock" /></para>
      <param name="offsetToLock">Offset into the vertex data to lock, in bytes. To lock the entire vertex buffer, specify 0 for both parameters, SizeToLock and OffsetToLock.</param>
      <param name="sizeToLock">Size of the vertex data to lock, in bytes. To lock the entire vertex buffer, specify 0 for both parameters, SizeToLock and OffsetToLock.</param>
      <param name="ppbData">VOID* pointer to a memory buffer containing the returned vertex data.</param>
      <param name="flags">Combination of zero or more locking flags that describe the type of lock to perform. For this method, the valid flags are: 
    


<ul>
<li>D3DLOCK_DISCARD</li>
<li>D3DLOCK_NO_DIRTY_UPDATE</li>
<li>D3DLOCK_NOSYSLOCK</li>
<li>D3DLOCK_READONLY</li>
<li>D3DLOCK_NOOVERWRITE</li>
</ul>
For a description of the flags, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlock">D3DLOCK</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVolume9::LockBox">
    <summary>
      <para>Locks a box on a volume resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvolume9-lockbox" /></para>
      <param name="lockedVolume">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlocked-box">D3DLOCKED_BOX</a> structure, describing the locked region.</param>
      <param name="box">Pointer to a box to lock. Specified by a pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dbox">D3DBOX</a> structure. Specifying <b>NULL</b> for this parameter locks the entire volume.</param>
      <param name="flags">Combination of zero or more locking flags that describe the type of lock to perform. For this method, the valid flags are: 
    


<ul>
<li>D3DLOCK_DISCARD</li>
<li>D3DLOCK_NO_DIRTY_UPDATE</li>
<li>D3DLOCK_NOSYSLOCK</li>
<li>D3DLOCK_READONLY</li>
</ul>
For a description of the flags, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlock">D3DLOCK</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DCryptoSession9">
    <summary>
      <para>Represents a cryptographic session.To get a pointer to this interface, call IDirect3DDevice9Video::CreateCryptoSession.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nn-d3d9-idirect3dcryptosession9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DQuery9::Issue">
    <summary>
      <para>Issue a query.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dquery9-issue" /></para>
      <param name="dwIssueFlags">Query flags specify the type of state change for the query. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dissue-begin">D3DISSUE_BEGIN</a> and <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dissue-end">D3DISSUE_END</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DCryptoSession9::StartSessionKeyRefresh">
    <summary>
      <para>Gets a random number that can be used to refresh the session key.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dcryptosession9-startsessionkeyrefresh" /></para>
      <param name="randomNumber">A pointer to a byte array that receives a random number.</param>
      <param name="randomNumberSize">The size of the <i>pRandomNumber</i> array, in bytes. The size should match the size of the session key.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVolume9::GetDevice">
    <summary>
      <para>Retrieves the device associated with a volume.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvolume9-getdevice" /></para>
      <param name="device">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3ddevice9">IDirect3DDevice9</a> interface to fill with the device pointer, if the query succeeds.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetGammaRamp">
    <summary>
      <para>Sets the gamma correction ramp for the implicit swap chain. This method will affect the entire screen (not just the active window if you are running in windowed mode).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setgammaramp" /></para>
      <param name="iSwapChain">Unsigned integer specifying the swap chain.</param>
      <param name="flags" />
      <param name="ramp">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dgammaramp">D3DGAMMARAMP</a> structure, representing the gamma correction ramp to be set for the implicit swap chain.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::LightEnable">
    <summary>
      <para>Enables or disables a set of lighting parameters within a device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-lightenable" /></para>
      <param name="index">Zero-based index of the set of lighting parameters that are the target of this method.</param>
      <param name="enable">Value that indicates if the set of lighting parameters are being enabled or disabled. Set this parameter to <b>TRUE</b> to enable lighting with the parameters at the specified index, or <b>FALSE</b> to disable it.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVertexShader9::GetDevice">
    <summary>
      <para>Gets the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvertexshader9-getdevice" /></para>
      <param name="device">Pointer to the IDirect3DDevice9 interface that is returned.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetAvailableTextureMem">
    <summary>
      <para>Returns an estimate of the amount of available texture memory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getavailabletexturemem" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::CreateTexture">
    <summary>
      <para>Creates a texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-createtexture" /></para>
      <param name="width">Width of the top-level of the texture, in pixels. The pixel dimensions of subsequent levels will be the truncated value of half of the previous level's 
        pixel dimension (independently). Each dimension clamps at a size of 1 pixel. Thus, if the division by 2 results in 0, 1 will be taken instead.</param>
      <param name="height">Height of the top-level of the texture, in pixels. The pixel dimensions of subsequent levels will be the truncated value of half of the previous level's 
        pixel dimension (independently). Each dimension clamps at a size of 1 pixel. Thus, if the division by 2 results in 0, 1 will be taken instead.</param>
      <param name="levels">Number of levels in the texture. If this is zero, Direct3D will generate all texture sublevels down to 1 by 1 pixels for hardware that supports 
        mipmapped textures. Call <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3dbasetexture9-getlevelcount">IDirect3DBaseTexture9::GetLevelCount</a> to see the number of levels generated.</param>
      <param name="usage">Usage can be 0, which indicates no usage value. However, if usage is desired, use a combination of one or more <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dusage">D3DUSAGE</a> constants. It is 
        good practice to match the usage parameter with the behavior flags in <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3d9-createdevice">IDirect3D9::CreateDevice</a>.</param>
      <param name="format">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type, describing the format of all levels in the texture.</param>
      <param name="pool">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpool">D3DPOOL</a> enumerated type, describing the memory class into which the texture should be placed.</param>
      <param name="texture">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dtexture9">IDirect3DTexture9</a> interface, representing the created texture resource.</param>
      <param name="sharedHandle">Reserved. Set this parameter to <b>NULL</b>. This parameter can be used in Direct3D 9 for Windows Vista to 
        <a href="https://docs.microsoft.com/windows/desktop/direct3d9/dx9lh">share resources</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9ExOverlayExtension::CheckDeviceOverlayType">
    <summary>
      <para>Queries the overlay hardware capabilities of a Direct3D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3d9exoverlayextension-checkdeviceoverlaytype" /></para>
      <param name="adapter">An ordinal number that denotes the display adapter. <b>D3DADAPTER_DEFAULT</b> is always the primary display adapter.</param>
      <param name="devType">Specifies the Direct3D device type as a member of the <b>D3DDEVTYPE</b> enumerated type.</param>
      <param name="overlayWidth">The width of the overlay to create, in pixels.</param>
      <param name="overlayHeight">The height of the overlay to create, in pixels.</param>
      <param name="overlayFormat">The surface format of the overlay.</param>
      <param name="displayMode">A pointer to a <b>D3DDISPLAYMODEEX</b> structure that specifies the display mode that will be used. If this parameter is <b>NULL</b>, the current display mode is assumed.</param>
      <param name="displayRotation">Specifies the display rotation mode as a member of the <b>D3DDISPLAYROTATION</b> enumerated type.</param>
      <param name="overlayCaps">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d9caps/ns-d3d9caps-d3doverlaycaps">D3DOVERLAYCAPS</a> structure. If the driver supports the overlay settings specified in the input parameters, the method fills this structure with the capabilities of the overlay hardware.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetMaterial">
    <summary>
      <para>Sets the material properties for the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setmaterial" /></para>
      <param name="material">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dmaterial9">D3DMATERIAL9</a> structure, describing the material properties to set.</param>
    </summary>
  </comment>
  <comment id="IDirect3DCubeTexture9::LockRect">
    <summary>
      <para>Locks a rectangle on a cube texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dcubetexture9-lockrect" /></para>
      <param name="faceType">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcubemap-faces">D3DCUBEMAP_FACES</a> enumerated type, identifying a cube map face.</param>
      <param name="level">Specifies a level of a mipmapped cube texture.</param>
      <param name="lockedRect">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlocked-rect">D3DLOCKED_RECT</a> structure, describing the region to lock.</param>
      <param name="rect">Pointer to a rectangle to lock. Specified by a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure. Specifying <b>NULL</b> for this parameter expands the dirty region to cover the entire cube texture.</param>
      <param name="flags">Combination of zero or more locking flags that describe the type of lock to perform. For this method, the valid flags are: 



<ul>
<li>D3DLOCK_DISCARD</li>
<li>D3DLOCK_NO_DIRTY_UPDATE</li>
<li>D3DLOCK_NOSYSLOCK</li>
<li>D3DLOCK_READONLY</li>
</ul>
You may not specify a subrect when using D3DLOCK_DISCARD. For a description of the flags, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlock">D3DLOCK</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDeviceManager9::GetVideoService">
    <summary>
      <para>Gets a DirectX Video Acceleration (DXVA) service interface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dxva2api/nf-dxva2api-idirect3ddevicemanager9-getvideoservice" /></para>
      <param name="hDevice">A handle to a Direct3D device. To get a device handle, call <a href="https://docs.microsoft.com/windows/desktop/api/dxva2api/nf-dxva2api-idirect3ddevicemanager9-opendevicehandle">IDirect3DDeviceManager9::OpenDeviceHandle</a>.</param>
      <param name="riid">The interface identifier (IID) of the requested interface. The Direct3D device might support the following DXVA service interfaces:
          

<ul>
<li>
<a href="https://docs.microsoft.com/windows/desktop/api/dxva2api/nn-dxva2api-idirectxvideodecoderservice">IDirectXVideoDecoderService</a>
</li>
<li>
<a href="https://docs.microsoft.com/windows/desktop/api/dxva2api/nn-dxva2api-idirectxvideoprocessorservice">IDirectXVideoProcessorService</a>
</li>
</ul></param>
      <param name="service">Receives a pointer to the requested interface. The caller must release the interface.</param>
    </summary>
  </comment>
  <comment id="IDirect3DCubeTexture9::GetLevelDesc">
    <summary>
      <para>Retrieves a description of one face of the specified cube texture level.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dcubetexture9-getleveldesc" /></para>
      <param name="level">Specifies a level of a mipmapped cube texture.</param>
      <param name="desc">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dsurface-desc">D3DSURFACE_DESC</a> structure, describing one face of the specified cube texture level.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSurface9::ReleaseDC">
    <summary>
      <para>Release a device context handle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dsurface9-releasedc" /></para>
      <param name="hdc">Handle to a device context.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVolumeTexture9::GetVolumeLevel">
    <summary>
      <para>Retrieves the specified volume texture level.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvolumetexture9-getvolumelevel" /></para>
      <param name="level">Identifies a level of the volume texture resource. This method returns a volume for the level specified by this parameter.</param>
      <param name="volumeLevel">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dvolume9">IDirect3DVolume9</a> interface, representing the returned volume level.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Video::CreateAuthenticatedChannel">
    <summary>
      <para>Creates a channel to communicate with the Direct3D device or the graphics driver.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9video-createauthenticatedchannel" /></para>
      <param name="channelType">Specifies the type of channel, as a member of the <a href="https://docs.microsoft.com/windows/desktop/medfound/d3dauthenticatedchanneltype">D3DAUTHENTICATEDCHANNELTYPE</a> enumeration.</param>
      <param name="authenticatedChannel">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nn-d3d9-idirect3dauthenticatedchannel9">IDirect3DAuthenticatedChannel9</a> interface. The caller must release the interface.</param>
      <param name="channelHandle">Receives a pointer to a handle for the channel.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSurface9::GetDesc">
    <summary>
      <para>Retrieves a description of the surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dsurface9-getdesc" /></para>
      <param name="desc">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dsurface-desc">D3DSURFACE_DESC</a> structure, describing the surface.</param>
    </summary>
  </comment>
  <comment id="IDirect3DCubeTexture9::AddDirtyRect">
    <summary>
      <para>Adds a dirty region to a cube texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dcubetexture9-adddirtyrect" /></para>
      <param name="faceType">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcubemap-faces">D3DCUBEMAP_FACES</a> enumerated type, identifying the cube map face.</param>
      <param name="dirtyRect">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure, specifying the dirty region. Specifying <b>NULL</b> expands the dirty region to cover the entire cube texture.</param>
    </summary>
  </comment>
  <comment id="IDirect3DQuery9::GetData">
    <summary>
      <para>Polls a queried resource to get the query state or a query result. For more information about queries, see Queries (Direct3D 9).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dquery9-getdata" /></para>
      <param name="data">Pointer to a buffer containing the query data. The user is responsible for allocating this. <i>pData</i> may be <b>NULL</b> only if dwSize is 0.</param>
      <param name="dwSize">Number of bytes of data in <i>pData</i>. If you set dwSize to zero, you can use this method to poll the resource for the query status. See remarks.</param>
      <param name="dwGetDataFlags">Data flags specifying the query type. Valid values are either 0 or <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dgetdata-flush">D3DGETDATA_FLUSH</a>. Use 0 to avoid flushing batched queries to the driver and use D3DGETDATA_FLUSH to go ahead and flush them. For applications writing their own version of waiting, a query result is not realized until the driver receives a flush.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::SetConvolutionMonoKernel">
    <summary>
      <para>Prepare the texture sampler for monochrome convolution filtering on a single-color texture.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-setconvolutionmonokernel" /></para>
      <param name="width">The width of the filter kernel; ranging from 1 - <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dconvolutionmono">D3DCONVOLUTIONMONO_MAXWIDTH</a>. The default value is 1.</param>
      <param name="height">The height of the filter kernel; ranging from 1 - <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dconvolutionmono">D3DCONVOLUTIONMONO_MAXHEIGHT</a>. The default value is 1.</param>
      <param name="rows">An array of weights, one weight for each kernel sub-element in the width. This parameter must be <b>NULL</b>, which will set the weights equal to the default value.</param>
      <param name="columns">An array of weights, one weight for each kernel sub-element in the height. This parameter must be <b>NULL</b>, which will set the weights equal to the default value.</param>
    </summary>
  </comment>
  <comment id="IDirect3DQuery9">
    <summary>
      <para>Applications use the methods of the IDirect3DQuery9 interface to perform asynchronous queries on a driver.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dquery9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DResource9::PreLoad">
    <summary>
      <para>Preloads a managed resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dresource9-preload" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::SetGPUThreadPriority">
    <summary>
      <para>Set the priority on the GPU thread.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-setgputhreadpriority" /></para>
      <param name="priority">The thread priority, ranging from -7 to 7.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetPixelShader">
    <summary>
      <para>Retrieves the currently set pixel shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getpixelshader" /></para>
      <param name="shader">Pointer to a pixel shader interface.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDeviceManager9::ResetDevice">
    <summary>
      <para>Sets the Direct3D device or notifies the device manager that the Direct3D device was reset.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dxva2api/nf-dxva2api-idirect3ddevicemanager9-resetdevice" /></para>
      <param name="device">Pointer to the <b>IDirect3DDevice9</b> interface of the Direct3D device.</param>
      <param name="resetToken">Token received in the <i>pResetToken</i> parameter of the <a href="https://docs.microsoft.com/windows/desktop/api/dxva2api/nf-dxva2api-dxva2createdirect3ddevicemanager9">DXVA2CreateDirect3DDeviceManager9</a> function.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::CreateRenderTargetEx">
    <summary>
      <para>Creates a render-target surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-createrendertargetex" /></para>
      <param name="width">Width of the render-target surface, in pixels.</param>
      <param name="height">Height of the render-target surface, in pixels.</param>
      <param name="format">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type, describing the format of the render target.</param>
      <param name="multiSample">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dmultisample-type">D3DMULTISAMPLE_TYPE</a> enumerated type, which describes the multisampling buffer type. This parameter specifies the antialiasing type for this render target. When this surface is passed to <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nf-d3d9helper-idirect3ddevice9-setrendertarget">IDirect3DDevice9::SetRenderTarget</a>, its multisample type must be the same as that of the depth-stencil set by <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9-setdepthstencilsurface">IDirect3DDevice9::SetDepthStencilSurface</a>.</param>
      <param name="multisampleQuality">Quality level. The valid range is between zero and one less than the level returned by pQualityLevels used by  <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3d9-checkdevicemultisampletype">IDirect3D9::CheckDeviceMultiSampleType</a>. Passing a larger value returns the error, D3DERR_INVALIDCALL. The MultisampleQuality values of paired render targets, depth stencil surfaces, and the multisample type must all match.</param>
      <param name="lockable">Render targets are not lockable unless the application specifies <b>TRUE</b> for Lockable.

Note that lockable render targets reduce performance on some graphics hardware. The readback performance (moving data from video memory to system memory) depends on the type of hardware used (AGP vs. PCI Express) and is usually far lower than upload performance (moving data from system to video memory). If you need read access to render targets, use <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9-getrendertargetdata">GetRenderTargetData</a> instead of lockable render targets.</param>
      <param name="surface">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface.</param>
      <param name="sharedHandle">Reserved. Set this parameter to <b>NULL</b>. This parameter can be used in Direct3D 9 for Windows Vista to <a href="https://docs.microsoft.com/windows/desktop/direct3d9/dx9lh">share resources</a>.</param>
      <param name="usage">Combination of one or more <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dusage">D3DUSAGE</a> constants which can be OR'd together. Value of 0 indicates no usage.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSwapChain9::GetFrontBufferData">
    <summary>
      <para>Generates a copy of the swapchain's front buffer and places that copy in a system memory buffer provided by the application.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dswapchain9-getfrontbufferdata" /></para>
      <param name="destSurface">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface that will receive a copy of the swapchain's front buffer. The data is returned in successive rows with no intervening space, starting from the vertically highest row to the lowest.  For windowed mode, the size of the destination surface should be the size of the desktop. For full screen mode, the size of the destination surface should be the screen size.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::CheckResourceResidency">
    <summary>
      <para>Checks an array of resources to determine if it is likely that they will cause a large stall at Draw time because the system must make the resources GPU-accessible.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-checkresourceresidency" /></para>
      <param name="resourceArray">An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dresource9">IDirect3DResource9</a> pointers that indicate the resources to check.</param>
      <param name="numResources">A value indicating the number of resources passed into the <i>pResourceArray</i> parameter up to a maximum of 65535.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetRasterStatus">
    <summary>
      <para>Returns information describing the raster of the monitor on which the swap chain is presented.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getrasterstatus" /></para>
      <param name="iSwapChain">An unsigned integer specifying the swap chain.</param>
      <param name="rasterStatus">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3draster-status">D3DRASTER_STATUS</a> structure filled with information about the position or other status of the raster on the monitor driven by this adapter.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::BeginScene">
    <summary>
      <para>Begins a scene.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-beginscene" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Video::CreateCryptoSession">
    <summary>
      <para>Creates a cryptographic session to encrypt video content that is sent to the display driver.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9video-createcryptosession" /></para>
      <param name="cryptoType">Pointer to a GUID that specifies the type of encryption to use. The following GUIDs are defined.

**pDecodeProfile**

Type: **GUID** 

A pointer to a GUID that specifies the DirectX Video Acceleration 2 (DXVA-2) decoding profile. For a list of possible values, see IDirectXVideoDecoderService::GetDecoderDeviceGuids. If DXVA-2 decoding will not be used, set this parameter to NULL. 

**pCaps** 

Type: **D3DCONTENTPROTECTIONCAPS**

 A pointer to a D3DCONTENTPROTECTIONCAPS structure. The method fills in this structure with the driver's content protection capabilities.</param>
      <param name="decodeProfile">Pointer to a GUID that specifies the DirectX Video Acceleration 2 (DXVA-2) decoding profile. For a list of possible values, see <a href="https://docs.microsoft.com/windows/desktop/api/dxva2api/nf-dxva2api-idirectxvideodecoderservice-getdecoderdeviceguids">IDirectXVideoDecoderService::GetDecoderDeviceGuids</a>. If DXVA-2 decoding will not be used, set this parameter to <b>NULL</b>.</param>
      <param name="cryptoSession">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nn-d3d9-idirect3dcryptosession9">IDirect3DCryptoSession9</a> interface. The caller must release the interface.</param>
      <param name="cryptoHandle">Receives a handle for the session.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVolume9::GetContainer">
    <summary>
      <para>Provides access to the parent volume texture object, if this surface is a child level of a volume texture.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvolume9-getcontainer" /></para>
      <param name="riid">Reference identifier of the volume being requested.</param>
      <param name="container">Address of a pointer to fill with the container pointer, if the query succeeds.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetClipStatus">
    <summary>
      <para>Retrieves the clip status.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getclipstatus" /></para>
      <param name="clipStatus"> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dclipstatus9">D3DCLIPSTATUS9</a> structure that describes the clip status.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetMaterial">
    <summary>
      <para>Retrieves the current material properties for the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getmaterial" /></para>
      <param name="material">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dmaterial9">D3DMATERIAL9</a> structure to fill with the currently set material properties.</param>
    </summary>
  </comment>
  <comment id="IDirect3DAuthenticatedChannel9">
    <summary>
      <para>Provides a communication channel with the graphics driver or the Direct3D runtime.To get a pointer to this interface, call IDirect3DDevice9Video::CreateAuthenticatedChannel.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nn-d3d9-idirect3dauthenticatedchannel9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::EvictManagedResources">
    <summary>
      <para>Evicts all managed resources, including both Direct3D and driver-managed resources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-evictmanagedresources" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetPixelShaderConstantI">
    <summary>
      <para>Sets an integer shader constant.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setpixelshaderconstanti" /></para>
      <param name="startRegister">Register number that will contain the first constant value.</param>
      <param name="constantData">Pointer to an array of constants.</param>
      <param name="vector4iCount">Number of four integer vectors in the array of constants.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSurface9::LockRect">
    <summary>
      <para>Locks a rectangle on a surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dsurface9-lockrect" /></para>
      <param name="lockedRect">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlocked-rect">D3DLOCKED_RECT</a> structure that describes the locked region.</param>
      <param name="rect">Pointer to a rectangle to lock. Specified by a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure. Specifying <b>NULL</b> for this parameter expands the dirty region to cover the entire surface.</param>
      <param name="flags">Combination of zero or more locking flags that describe the type of lock to perform. For this method, the valid flags are: 
    


<ul>
<li>D3DLOCK_DISCARD</li>
<li>D3DLOCK_DONOTWAIT</li>
<li>D3DLOCK_NO_DIRTY_UPDATE</li>
<li>D3DLOCK_NOSYSLOCK</li>
<li>D3DLOCK_READONLY</li>
</ul>
You may not specify a subrect when using D3DLOCK_DISCARD. For a description of the flags, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlock">D3DLOCK</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::Clear">
    <summary>
      <para>Clears one or more surfaces such as a render target, multiple render targets, a stencil buffer, and a depth buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-clear" /></para>
      <param name="count">Number of rectangles in the array at pRects. Must be set to 0 if pRects is <b>NULL</b>. May not be 0 if pRects is a valid pointer.</param>
      <param name="rects">Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3drect">D3DRECT</a> structures that describe the rectangles to clear. Set a rectangle to the dimensions of the rendering target to clear the entire surface. Each rectangle uses screen coordinates that correspond to points on the render target. Coordinates are clipped to the bounds of the viewport rectangle. To indicate that the entire viewport rectangle is to be cleared, set this parameter to <b>NULL</b> and Count to 0.</param>
      <param name="flags">Combination of one or more <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dclear">D3DCLEAR</a> flags that specify the surface(s) that will be cleared.</param>
      <param name="color">Clear a render target to this ARGB color.</param>
      <param name="Z">Clear the depth buffer to this new z value which ranges from 0 to 1. See remarks.</param>
      <param name="stencil">Clear the stencil buffer to this new value which ranges from 0 to 2ⁿ-1 (n is the bit depth of the stencil buffer). See remarks.</param>
    </summary>
  </comment>
  <comment id="IDirect3DIndexBuffer9::GetDesc">
    <summary>
      <para>Retrieves a description of the index buffer resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dindexbuffer9-getdesc" /></para>
      <param name="desc">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dindexbuffer-desc">D3DINDEXBUFFER_DESC</a> structure, describing the returned index buffer.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::DrawIndexedPrimitive">
    <summary>
      <para>Based on indexing, renders the specified geometric primitive into an array of vertices.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-drawindexedprimitive" /></para>
      <param name="unnamedParam1">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dprimitivetype">D3DPRIMITIVETYPE</a> enumerated type, describing the type of primitive to render. D3DPT_POINTLIST is not supported with this method. See Remarks.</param>
      <param name="baseVertexIndex">Offset from the start of the vertex buffer to the first vertex. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/rendering-from-vertex-and-index-buffers">Scenario 4</a>.</param>
      <param name="minVertexIndex">Minimum vertex index for vertices used during this call. This is a zero based index relative to BaseVertexIndex.</param>
      <param name="numVertices">Number of vertices used during this call. The first vertex is located at index: BaseVertexIndex + MinIndex.</param>
      <param name="startIndex">Index of the first index to use when accesssing the vertex buffer. Beginning at StartIndex to index vertices from the vertex buffer.</param>
      <param name="primCount">Number of primitives to render. The number of vertices used is a function of the primitive count and the primitive type. The maximum number of primitives allowed is determined by checking the MaxPrimitiveCount member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d9caps/ns-d3d9caps-d3dcaps9">D3DCAPS9</a> structure.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9::GetAdapterMonitor">
    <summary>
      <para>Returns the handle of the monitor associated with the Direct3D object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3d9-getadaptermonitor" /></para>
      <param name="adapter">Ordinal number that denotes the display adapter. D3DADAPTER_DEFAULT is always the primary display adapter.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetPixelShaderConstantB">
    <summary>
      <para>Sets a Boolean shader constant.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setpixelshaderconstantb" /></para>
      <param name="startRegister">Register number that will contain the first constant value.</param>
      <param name="constantData">Pointer to an array of constants.</param>
      <param name="boolCount">Number of boolean values in the array of constants.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::DrawRectPatch">
    <summary>
      <para>Draws a rectangular patch using the currently set streams.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-drawrectpatch" /></para>
      <param name="handle">Handle to the rectangular patch to draw.</param>
      <param name="numSegs">Pointer to an array of four floating-point values that identify the number of segments each edge of the rectangle patch should be divided into when tessellated. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3drectpatch-info">D3DRECTPATCH_INFO</a>.</param>
      <param name="rectPatchInfo">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3drectpatch-info">D3DRECTPATCH_INFO</a> structure, describing the rectangular patch to draw.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetLightEnable">
    <summary>
      <para>Retrieves the activity status - enabled or disabled - for a set of lighting parameters within a device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getlightenable" /></para>
      <param name="index">Zero-based index of the set of lighting parameters that are the target of this method.</param>
      <param name="enable">Pointer to a variable to fill with the status of the specified lighting parameters. After the call, a nonzero value at this address indicates that the specified lighting parameters are enabled; a value of 0 indicates that they are disabled.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSwapChain9Ex">
    <summary>
      <para>Applications use the methods of the IDirect3DSwapChain9Ex interface to manipulate a swap chain.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nn-d3d9-idirect3dswapchain9ex" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DCryptoSession9::DecryptionBlt">
    <summary>
      <para>Writes encrypted data to a protected surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dcryptosession9-decryptionblt" /></para>
      <param name="srcSurface">A pointer to the surface that contains the source data.</param>
      <param name="dstSurface">A pointer to the protected surface where the encrypted data is written.</param>
      <param name="srcSurfaceSize">The size of the surface memory that <i>pSrcSurface</i> points to, in bytes. The size must be aligned to the value of <b>BlockAlignmentSize</b> in the driver capabilities structure; see Remarks.</param>
      <param name="encryptedBlockInfo">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/medfound/d3dencrypted-block-info">D3DENCRYPTED_BLOCK_INFO</a> structure, or <b>NULL</b>.

If the driver supports partially encrypted buffers,  <i>pEncryptedBlockInfo</i> indicates which portions of the buffer are encrypted.  If the entire surface is encrypted, set this parameter to <b>NULL</b>. 

To check whether the driver supports partially encrypted buffers, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9video-getcontentprotectioncaps">IDirect3DDevice9Video::GetContentProtectionCaps</a> and check for the <b>D3DCPCAPS_PARTIALDECRYPTION</b> capabilities flag. If the driver does not support partially encrypted buffers, set this parameter to <b>NULL</b>.</param>
      <param name="contentKey">A pointer to a buffer that contains a content encryption key, or <b>NULL</b>. To query whether the driver supports the use of content keys, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9video-getcontentprotectioncaps">IDirect3DDevice9Video::GetContentProtectionCaps</a> and check for the <b>D3DCPCAPS_CONTENTKEY</b> capabilities flag. 

If the driver supports content keys, use the content key to encrypt the surface. Encrypt the content key using the session key, and place the  resulting cipher text in <i>pContentKey</i>. If the driver does not support content keys, use the session key to encrypt the surface and set <i>pContentKey</i> to <b>NULL</b>.</param>
      <param name="iV">A pointer to a buffer that contains the initialization vector (IV). 

If the encryption type is <b>D3DCRYPTOTYPE_AES128_CTR</b>, the buffer is a <a href="https://docs.microsoft.com/windows/desktop/medfound/d3daes-ctr-iv">D3DAES_CTR_IV</a> structure. The caller allocates the structure and generates the IV. When you generate the first IV, initialize the structure to a random number. For each subsequent IV, simply increment the <b>IV</b> member of the structure, ensuring that the value always increases.  This procedure enables the driver to validate that the same IV is never used more than once with the same key pair.

For other encryption types, a different structure might be used, or the encryption might not use an IV.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetDeviceCaps">
    <summary>
      <para>Retrieves the capabilities of the rendering device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getdevicecaps" /></para>
      <param name="caps">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d9caps/ns-d3d9caps-d3dcaps9">D3DCAPS9</a> structure, describing the returned device.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9::EnumAdapterModes">
    <summary>
      <para>Queries the device to determine whether the specified adapter supports the requested format and display mode. This method could be used in a loop to enumerate all the available adapter modes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3d9-enumadaptermodes" /></para>
      <param name="adapter">Ordinal number denoting the display adapter to enumerate. <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dadapter-default">D3DADAPTER_DEFAULT</a> is always the primary display adapter. This method returns D3DERR_INVALIDCALL when this value equals or exceeds the number of display adapters in the system.</param>
      <param name="format">Allowable pixel formats. See Remarks.</param>
      <param name="mode">Represents the display-mode index which is an unsigned integer between zero and the value returned by <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3d9-getadaptermodecount">GetAdapterModeCount</a> minus one.</param>
      <param name="mode">A pointer to the available display mode of type <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplaymode">D3DDISPLAYMODE</a>. See Remarks.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVolumeTexture9::UnlockBox">
    <summary>
      <para>Unlocks a box on a volume texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvolumetexture9-unlockbox" /></para>
      <param name="level">Specifies the level of the volume texture resource to unlock.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetDepthStencilSurface">
    <summary>
      <para>Gets the depth-stencil surface owned by the Direct3DDevice object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getdepthstencilsurface" /></para>
      <param name="zStencilSurface">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface, representing the returned depth-stencil surface.</param>
    </summary>
  </comment>
  <comment id="IDirect3DCubeTexture9">
    <summary>
      <para>Applications use the methods of the IDirect3DCubeTexture9 interface to manipulate a cube texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dcubetexture9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DStateBlock9::GetDevice">
    <summary>
      <para>Gets the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dstateblock9-getdevice" /></para>
      <param name="device">Pointer to the IDirect3DDevice9 interface that is returned.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9::CheckDeviceMultiSampleType">
    <summary>
      <para>Determines if a multisampling technique is available on this device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3d9-checkdevicemultisampletype" /></para>
      <param name="adapter">Ordinal number denoting the display adapter to query. D3DADAPTER_DEFAULT is always the primary display adapter. This method returns <b>FALSE</b> when this value equals or exceeds the number of display adapters in the system. See Remarks.</param>
      <param name="deviceType">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddevtype">D3DDEVTYPE</a> enumerated type, identifying the device type.</param>
      <param name="surfaceFormat">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type that specifies the format of the surface to be multisampled. For more information, see Remarks.</param>
      <param name="windowed">bool value. Specify <b>TRUE</b> to inquire about windowed multisampling, and specify <b>FALSE</b> to inquire about full-screen multisampling.</param>
      <param name="multiSampleType">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dmultisample-type">D3DMULTISAMPLE_TYPE</a> enumerated type, identifying the multisampling technique to test.</param>
      <param name="qualityLevels"><b>pQualityLevels</b> returns the number of device-specific sampling variations available with the given sample type. For example, if the returned value is 3, then quality levels 0, 1 and 2 can be used when creating resources with the given sample count. The meanings of these quality levels are defined by the device manufacturer and cannot be queried through D3D. For example, for a particular device different quality levels at a fixed sample count might refer to different spatial layouts of the sample locations or different methods of resolving.  This can be <b>NULL</b> if it is not necessary to return the quality levels.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::CreateCubeTexture">
    <summary>
      <para>Creates a cube texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-createcubetexture" /></para>
      <param name="edgeLength">Size of the edges of all the top-level faces of the cube texture. The pixel dimensions of subsequent levels of each face will be the truncated value of half of the previous level's pixel dimension (independently). Each dimension clamps at a size of 1 pixel. Thus, if the division by 2 results in 0 (zero), 1 will be taken instead.</param>
      <param name="levels">Number of levels in each face of the cube texture. If this is zero, Direct3D will generate all cube texture sublevels down to 1x1 pixels for each face for hardware that supports mipmapped cube textures.  Call <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3dbasetexture9-getlevelcount">IDirect3DBaseTexture9::GetLevelCount</a> to see the number of levels generated.</param>
      <param name="usage">Usage can be 0, which indicates no usage value. However, if usage is desired, use a combination of one or more <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dusage">D3DUSAGE</a> constants. It is good practice to match the usage parameter in CreateCubeTexture with the behavior flags in <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3d9-createdevice">IDirect3D9::CreateDevice</a>. For more information, see Remarks.</param>
      <param name="format">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type, describing the format of all levels in all faces of the cube texture.</param>
      <param name="pool">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpool">D3DPOOL</a> enumerated type, describing the memory class into which the cube texture should be placed.</param>
      <param name="cubeTexture">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dcubetexture9">IDirect3DCubeTexture9</a> interface, representing the created cube texture resource.</param>
      <param name="sharedHandle">Reserved. Set this parameter to <b>NULL</b>. This parameter can be used in Direct3D 9 for Windows Vista to <a href="https://docs.microsoft.com/windows/desktop/direct3d9/dx9lh">share resources</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9Ex::EnumAdapterModesEx">
    <summary>
      <para>This method returns the actual display mode info based on the given mode index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3d9ex-enumadaptermodesex" /></para>
      <param name="adapter">Ordinal number denoting the display adapter to enumerate. D3DADAPTER_DEFAULT is always the primary display adapter. This method returns D3DERR_INVALIDCALL when this value equals or exceeds the number of display adapters in the system.</param>
      <param name="filter">See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplaymodefilter">D3DDISPLAYMODEFILTER</a>.</param>
      <param name="mode">Represents the display-mode index which is an unsigned integer between zero and the value returned by GetAdapterModeCount minus one.</param>
      <param name="mode">A pointer to the available display mode of type <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplaymodeex">D3DDISPLAYMODEEX</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetPixelShaderConstantB">
    <summary>
      <para>Gets a Boolean shader constant.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getpixelshaderconstantb" /></para>
      <param name="startRegister">Register number that will contain the first constant value.</param>
      <param name="constantData">Pointer to an array of constants.</param>
      <param name="boolCount">Number of Boolean values in the array of constants.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetViewport">
    <summary>
      <para>Sets the viewport parameters for the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setviewport" /></para>
      <param name="viewport">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dviewport9">D3DVIEWPORT9</a> structure, specifying the viewport parameters to set.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetStreamSource">
    <summary>
      <para>Binds a vertex buffer to a device data stream. For more information, see Setting the Stream Source (Direct3D 9).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setstreamsource" /></para>
      <param name="streamNumber">Specifies the data stream, in the range from 0 to the maximum number of streams -1.</param>
      <param name="streamData">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dvertexbuffer9">IDirect3DVertexBuffer9</a> interface, representing the vertex buffer to bind to the specified data stream.</param>
      <param name="offsetInBytes">Offset from the beginning of the stream to the beginning of the vertex data, in bytes. To find out if the device supports stream offsets, see the D3DDEVCAPS2_STREAMOFFSET constant in <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddevcaps2">D3DDEVCAPS2</a>.</param>
      <param name="stride">Stride of the component, in bytes. See Remarks.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetClipPlane">
    <summary>
      <para>Retrieves the coefficients of a user-defined clipping plane for the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getclipplane" /></para>
      <param name="index">Index of the clipping plane for which the plane equation coefficients are retrieved.</param>
      <param name="plane">Pointer to a four-element array of values that represent the coefficients of the clipping plane in the form of the general plane equation. See Remarks.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSwapChain9">
    <summary>
      <para>Applications use the methods of the IDirect3DSwapChain9 interface to manipulate a swap chain.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dswapchain9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetPixelShaderConstantI">
    <summary>
      <para>Gets an integer shader constant.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getpixelshaderconstanti" /></para>
      <param name="startRegister">Register number that will contain the first constant value.</param>
      <param name="constantData">Pointer to an array of constants.</param>
      <param name="vector4iCount">Number of four integer vectors in the array of constants.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::CreateOffscreenPlainSurface">
    <summary>
      <para>Create an off-screen surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-createoffscreenplainsurface" /></para>
      <param name="width">Width of the surface.</param>
      <param name="height">Height of the surface.</param>
      <param name="format">Format of the surface. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a>.</param>
      <param name="pool">Surface pool type. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpool">D3DPOOL</a>.</param>
      <param name="surface">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a>  interface created.</param>
      <param name="sharedHandle">Reserved. Set this parameter to <b>NULL</b>. This parameter can be used in Direct3D 9 for Windows Vista to <a href="https://docs.microsoft.com/windows/desktop/direct3d9/dx9lh">share resources</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSurface9::UnlockRect">
    <summary>
      <para>Unlocks a rectangle on a surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dsurface9-unlockrect" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetPixelShaderConstantF">
    <summary>
      <para>Gets a floating-point shader constant.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getpixelshaderconstantf" /></para>
      <param name="startRegister">Register number that will contain the first constant value.</param>
      <param name="constantData">Pointer to an array of constants.</param>
      <param name="vector4fCount">Number of four float vectors in the array of constants.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetCurrentTexturePalette">
    <summary>
      <para>Retrieves the current texture palette.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getcurrenttexturepalette" /></para>
      <param name="paletteNumber">Pointer to a returned value that identifies the current texture palette.</param>
    </summary>
  </comment>
  <comment id="IDirect3DBaseTexture9">
    <summary>
      <para>Applications use the methods of the IDirect3DBaseTexture9 interface to manipulate texture resources including cube and volume textures.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dbasetexture9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DBaseTexture9::GetLevelCount">
    <summary>
      <para>Returns the number of texture levels in a multilevel texture.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dbasetexture9-getlevelcount" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::DrawPrimitiveUP">
    <summary>
      <para>Renders data specified by a user memory pointer as a sequence of geometric primitives of the specified type.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-drawprimitiveup" /></para>
      <param name="primitiveType">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dprimitivetype">D3DPRIMITIVETYPE</a> enumerated type, describing the type of primitive to render.</param>
      <param name="primitiveCount">Number of primitives to render. The maximum number of primitives allowed is determined by checking the MaxPrimitiveCount member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d9caps/ns-d3d9caps-d3dcaps9">D3DCAPS9</a> structure.</param>
      <param name="vertexStreamZeroData">User memory pointer to the vertex data.</param>
      <param name="vertexStreamZeroStride">The number of bytes of data for each vertex. This value may not be 0.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetCursorPosition">
    <summary>
      <para>Sets the cursor position and update options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setcursorposition" /></para>
      <param name="X">The new X-position of the cursor in virtual desktop coordinates. See Remarks.</param>
      <param name="Y">The new Y-position of the cursor in virtual desktop coordinates. See Remarks.</param>
      <param name="flags">
Specifies the update options for the cursor. Currently, only one flag is defined.



<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id="D3DCURSOR_IMMEDIATE_UPDATE"></a><a id="d3dcursor_immediate_update"></a><dl>
<dt><b>D3DCURSOR_IMMEDIATE_UPDATE</b></dt>
</dl>
</td>
<td width="60%">
Update cursor at the refresh rate.

If this flag is specified, the system guarantees that the cursor will be updated at a minimum of half the display refresh rate, but never more frequently than the display refresh rate. Otherwise, the method delays cursor updates until the next <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9-present">IDirect3DDevice9::Present</a> call. Not setting this flag usually results in better performance than if the flag is set. However, applications should set this flag if the rate of calls to Present is low enough that users would notice a significant delay in cursor motion. This flag has no effect in a windowed-mode application. Some video cards implement hardware color cursors. This flag does not have an effect on these cards.

</td>
</tr>
</table></param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetBackBuffer">
    <summary>
      <para>Retrieves a back buffer from the device's swap chain.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getbackbuffer" /></para>
      <param name="iSwapChain">An unsigned integer specifying the swap chain.</param>
      <param name="iBackBuffer">Index of the back buffer object to return. Back buffers are numbered from 0 to the total number of back buffers minus one. A value of 0 returns the first back buffer, not the front buffer. The front buffer is not accessible through this method. Use <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3ddevice9-getfrontbufferdata">IDirect3DDevice9::GetFrontBufferData</a> to retrieve a copy of the front buffer.</param>
      <param name="type">Stereo view is not supported in Direct3D 9, so the only valid value for this parameter is D3DBACKBUFFER_TYPE_MONO.</param>
      <param name="backBuffer">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface, representing the returned back buffer surface.</param>
    </summary>
  </comment>
  <comment id="IDirect3DAuthenticatedChannel9::GetCertificateSize">
    <summary>
      <para>Gets the size of the driver's certificate chain.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dauthenticatedchannel9-getcertificatesize" /></para>
      <param name="certificateSize">Receives the size of the certificate chain, in bytes.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetLight">
    <summary>
      <para>Assigns a set of lighting properties for this device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setlight" /></para>
      <param name="index">Zero-based index of the set of lighting properties to set. If a set of lighting properties exists at this index, it is overwritten by the new properties specified in pLight.</param>
      <param name="unnamedParam2">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlight9">D3DLIGHT9</a> structure, containing the lighting parameters to set.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDeviceManager9::CloseDeviceHandle">
    <summary>
      <para>Closes a Direct3D device handle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dxva2api/nf-dxva2api-idirect3ddevicemanager9-closedevicehandle" /></para>
      <param name="hDevice">Handle to the Direct3D device.</param>
    </summary>
  </comment>
  <comment id="IDirect3DIndexBuffer9::Lock">
    <summary>
      <para>Locks a range of index data and obtains a pointer to the index buffer memory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dindexbuffer9-lock" /></para>
      <param name="offsetToLock">Offset into the index data to lock, in bytes. Lock the entire index buffer by specifying 0 for both parameters, SizeToLock and OffsetToLock.</param>
      <param name="sizeToLock">Size of the index data to lock, in bytes. Lock the entire index buffer by specifying 0 for both parameters, SizeToLock and OffsetToLock.</param>
      <param name="ppbData">VOID* pointer to a memory buffer containing the returned index data.</param>
      <param name="flags">Combination of zero or more locking flags that describe the type of lock to perform. For this method, the valid flags are: 
    


<ul>
<li>D3DLOCK_DISCARD</li>
<li>D3DLOCK_NO_DIRTY_UPDATE</li>
<li>D3DLOCK_NOSYSLOCK</li>
<li>D3DLOCK_READONLY</li>
<li>D3DLOCK_NOOVERWRITE</li>
</ul>
For a description of the flags, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlock">D3DLOCK</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVertexDeclaration9::GetDevice">
    <summary>
      <para>Gets the current device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvertexdeclaration9-getdevice" /></para>
      <param name="device">Pointer to the IDirect3DDevice9 interface that is returned.</param>
    </summary>
  </comment>
  <comment id="IDirect3DCryptoSession9::GetCertificateSize">
    <summary>
      <para>Gets the size of the driver's certificate chain.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dcryptosession9-getcertificatesize" /></para>
      <param name="certificateSize">Receives the size of the certificate chain, in bytes.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9Ex::GetAdapterDisplayModeEx">
    <summary>
      <para>Retrieves the current display mode and rotation settings of the adapter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3d9ex-getadapterdisplaymodeex" /></para>
      <param name="adapter">Ordinal number that denotes the display adapter to query. D3DADAPTER_DEFAULT is always the primary display adapter.</param>
      <param name="mode">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplaymodeex">D3DDISPLAYMODEEX</a> structure containing data about the display mode of the adapter. As opposed to the display mode of the device, which may not be active if the device does not own full-screen mode. Can be set to <b>NULL</b>.</param>
      <param name="rotation">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplayrotation">D3DDISPLAYROTATION</a> structure indicating the type of screen rotation the application will do. The value returned through this pointer is important when the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresentflag">D3DPRESENTFLAG_NOAUTOROTATE</a> flag is used; otherwise, it can be set to <b>NULL</b>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetVertexShaderConstantF">
    <summary>
      <para>Gets a floating-point vertex shader constant.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getvertexshaderconstantf" /></para>
      <param name="startRegister">Register number that will contain the first constant value.</param>
      <param name="constantData">Pointer to an array of constants.</param>
      <param name="vector4fCount">Number of four float vectors in the array of constants.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::DrawTriPatch">
    <summary>
      <para>Draws a triangular patch using the currently set streams.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-drawtripatch" /></para>
      <param name="handle">Handle to the triangular patch to draw.</param>
      <param name="numSegs">Pointer to an array of three floating-point values that identify the number of segments each edge of the triangle patch should be divided into when tessellated. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dtripatch-info">D3DTRIPATCH_INFO</a>.</param>
      <param name="triPatchInfo">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dtripatch-info">D3DTRIPATCH_INFO</a> structure, describing the triangular high-order patch to draw.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::StretchRect">
    <summary>
      <para>Copy the contents of the source rectangle to the destination rectangle. The source rectangle can be stretched and filtered by the copy. This function is often used to change the aspect ratio of a video stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-stretchrect" /></para>
      <param name="sourceSurface">Pointer to the source surface. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a>.</param>
      <param name="sourceRect">Pointer to the source rectangle. A <b>NULL</b> for this parameter causes the entire source surface to be used.</param>
      <param name="destSurface">Pointer to the destination surface. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a>.</param>
      <param name="destRect">Pointer to the destination rectangle. A <b>NULL</b> for this parameter causes the entire destination surface to be used.</param>
      <param name="filter">Filter type. Allowable values are D3DTEXF_NONE, D3DTEXF_POINT, or D3DTEXF_LINEAR. For more information, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dtexturefiltertype">D3DTEXTUREFILTERTYPE</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVolume9::GetPrivateData">
    <summary>
      <para>Copies the private data associated with the volume to a provided buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvolume9-getprivatedata" /></para>
      <param name="refguid">Reference to (C++) or address of (C) the globally unique identifier that identifies the private data to retrieve.</param>
      <param name="data">Pointer to a previously allocated buffer to fill with the requested private data if the call succeeds. The application calling this method is responsible for allocating and releasing this buffer. If this parameter is <b>NULL</b>, this method will return the buffer size in pSizeOfData.</param>
      <param name="sizeOfData">Pointer to the size of the buffer at 
    pData, in bytes. If this value is less than the actual size of the private data, such as 0, the method sets this parameter to the required buffer size, and the method returns D3DERR_MOREDATA.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetVertexShaderConstantB">
    <summary>
      <para>Gets a Boolean vertex shader constant.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getvertexshaderconstantb" /></para>
      <param name="startRegister">Register number that will contain the first constant value.</param>
      <param name="constantData">Pointer to an array of constants.</param>
      <param name="boolCount">Number of Boolean values in the array of constants.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::UpdateSurface">
    <summary>
      <para>Copies rectangular subsets of pixels from one surface to another.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-updatesurface" /></para>
      <param name="sourceSurface">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface, representing the source surface. This parameter must point to a different surface than pDestinationSurface.</param>
      <param name="sourceRect">Pointer to a rectangle on the source surface. Specifying <b>NULL</b> for this parameter causes the entire surface to be copied.</param>
      <param name="destinationSurface">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface, representing the destination surface.</param>
      <param name="destPoint">Pointer to the upper left corner of the destination rectangle. Specifying <b>NULL</b> for this parameter causes the entire surface to be copied.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVolumeTexture9::GetLevelDesc">
    <summary>
      <para>Retrieves a level description of a volume texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvolumetexture9-getleveldesc" /></para>
      <param name="level">Identifies a level of the volume texture resource. This method returns a volume description for the level specified by this parameter.</param>
      <param name="desc">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dvolume-desc">D3DVOLUME_DESC</a> structure, describing the returned volume texture level.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::GetDisplayModeEx">
    <summary>
      <para>Retrieves the display mode's spatial resolution, color resolution, refresh frequency, and rotation settings.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-getdisplaymodeex" /></para>
      <param name="iSwapChain">An unsigned integer specifying the swap chain.</param>
      <param name="mode">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplaymodeex">D3DDISPLAYMODEEX</a> structure containing data about the display mode of the adapter. As opposed to the display mode of the device, which may not be active if the device does not own full-screen mode. Can be set to <b>NULL</b>.</param>
      <param name="rotation">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplayrotation">D3DDISPLAYROTATION</a> indicating the type of screen rotation the application will do. The value returned through this pointer is important when the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresentflag">D3DPRESENTFLAG_NOAUTOROTATE</a> flag is used; otherwise, it can be set to <b>NULL</b>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DAuthenticatedChannel9::Query">
    <summary>
      <para>Sends a query to the authenticated channel.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dauthenticatedchannel9-query" /></para>
      <param name="inputSize">The size of the <i>pInput</i> array, in bytes.</param>
      <param name="input">A pointer to a byte array that contains input data for the query. This array always starts with a <a href="https://docs.microsoft.com/windows/desktop/medfound/d3dauthenticatedchannel-query-input">D3DAUTHENTICATEDCHANNEL_QUERY_INPUT</a> structure. The <b>QueryType</b> member of the structure specifies the query and defines the meaning of the rest of the array.</param>
      <param name="outputSize">The size of the <i>pOutput</i> array, in bytes.</param>
      <param name="output">A pointer to a byte array that receives the result of the query. This array always starts with a <a href="https://docs.microsoft.com/windows/desktop/medfound/d3dauthenticatedchannel-query-output">D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT</a> structure. The meaning of the rest of the array depends on the query.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::CreateQuery">
    <summary>
      <para>Creates a status query.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-createquery" /></para>
      <param name="type">Identifies the query type. For more information, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dquerytype">D3DQUERYTYPE</a>.</param>
      <param name="query">Returns a pointer to the query interface that manages the query object. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dquery9">IDirect3DQuery9</a>. 

This parameter can be set to <b>NULL</b> to see if a query is supported. If the query is not supported, the method returns D3DERR_NOTAVAILABLE.</param>
    </summary>
  </comment>
  <comment id="IDirect3DIndexBuffer9::Unlock">
    <summary>
      <para>Unlocks index data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dindexbuffer9-unlock" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetVertexShader">
    <summary>
      <para>Sets the vertex shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setvertexshader" /></para>
      <param name="shader">Vertex shader interface. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dvertexshader9">IDirect3DVertexShader9</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetRenderTarget">
    <summary>
      <para>Sets a new color buffer for the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setrendertarget" /></para>
      <param name="renderTargetIndex">Index of the render target. See Remarks.</param>
      <param name="renderTarget">Pointer to a new color buffer. If <b>NULL</b>, the color buffer for the corresponding RenderTargetIndex is disabled. Devices always must be associated with a color buffer.
 The new render-target surface must have at least D3DUSAGE_RENDERTARGET specified.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9">
    <summary>
      <para>Applications use the methods of the IDirect3DDevice9 interface to perform DrawPrimitive-based rendering, create resources, work with system-level variables, adjust gamma ramp levels, work with palettes, and create shaders.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3ddevice9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DTexture9::UnlockRect">
    <summary>
      <para>Unlocks a rectangle on a texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dtexture9-unlockrect" /></para>
      <param name="level">Specifies the level of the texture resource to unlock.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetTexture">
    <summary>
      <para>Retrieves a texture assigned to a stage for a device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-gettexture" /></para>
      <param name="stage">Stage identifier of the texture to retrieve. Stage identifiers are zero-based.</param>
      <param name="texture">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dbasetexture9">IDirect3DBaseTexture9</a> interface, representing the returned texture.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetRenderTarget">
    <summary>
      <para>Retrieves a render-target surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getrendertarget" /></para>
      <param name="renderTargetIndex">Index of the render target. See Remarks.</param>
      <param name="renderTarget">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface, representing the returned render-target surface for this device.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::EndStateBlock">
    <summary>
      <para>Signals Direct3D to stop recording a device-state block and retrieve a pointer to the state block interface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-endstateblock" /></para>
      <param name="sB">Pointer to a state block interface. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dstateblock9">IDirect3DStateBlock9</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DCubeTexture9::UnlockRect">
    <summary>
      <para>Unlocks a rectangle on a cube texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dcubetexture9-unlockrect" /></para>
      <param name="faceType">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcubemap-faces">D3DCUBEMAP_FACES</a> enumerated type, identifying a cube map face.</param>
      <param name="level">Specifies a level of a mipmapped cube texture.</param>
    </summary>
  </comment>
  <comment id="IDirect3DCryptoSession9::FinishSessionKeyRefresh">
    <summary>
      <para>Switches to a new session key.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dcryptosession9-finishsessionkeyrefresh" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DBaseTexture9::GetLOD">
    <summary>
      <para>Returns a value clamped to the maximum level-of-detail set for a managed texture (this method is not supported for an unmanaged texture).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dbasetexture9-getlod" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::ShowCursor">
    <summary>
      <para>Displays or hides the cursor.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-showcursor" /></para>
      <param name="show">If bShow is <b>TRUE</b>, the cursor is shown. If bShow is <b>FALSE</b>, the cursor is hidden.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSwapChain9::GetRasterStatus">
    <summary>
      <para>Returns information describing the raster of the monitor on which the swap chain is presented.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dswapchain9-getrasterstatus" /></para>
      <param name="rasterStatus">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3draster-status">D3DRASTER_STATUS</a> structure filled with information about the position or other status of the raster on the monitor driven by this adapter.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetIndices">
    <summary>
      <para>Sets index data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setindices" /></para>
      <param name="indexData">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dindexbuffer9">IDirect3DIndexBuffer9</a> interface, representing the index data to be set.</param>
    </summary>
  </comment>
  <comment id="IDirect3DPixelShader9::GetDevice">
    <summary>
      <para>Gets the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dpixelshader9-getdevice" /></para>
      <param name="device">Pointer to the IDirect3DDevice9 interface that is returned.</param>
    </summary>
  </comment>
  <comment id="IDirect3DCryptoSession9::GetEncryptionBltKey">
    <summary>
      <para>Gets the cryptographic key used to decrypt the data returned by the IDirect3DCryptoSession9::EncryptionBlt method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dcryptosession9-getencryptionbltkey" /></para>
      <param name="readbackKey">A pointer to a byte array that receives the key. The key is encrypted using the session key.</param>
      <param name="keySize">The size of the <i>pReadbackKey</i> array, in bytes. The size should match the size of the session key.</param>
    </summary>
  </comment>
  <comment id="IDirect3DTexture9">
    <summary>
      <para>Applications use the methods of the IDirect3DTexture9 interface to manipulate a texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dtexture9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DVolume9::UnlockBox">
    <summary>
      <para>Unlocks a box on a volume resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvolume9-unlockbox" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::MultiplyTransform">
    <summary>
      <para>Multiplies a device's world, view, or projection matrices by a specified matrix.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-multiplytransform" /></para>
      <param name="unnamedParam1">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dtransformstatetype">D3DTRANSFORMSTATETYPE</a> enumerated type, or the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dts-worldmatrix">D3DTS_WORLDMATRIX</a> macro that identifies which device matrix is to be modified. The most common setting, <b>D3DTS_WORLDMATRIX</b>(0), modifies the world matrix, but you can specify that the method modify the view or projection matrices, if needed.</param>
      <param name="unnamedParam2">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dmatrix">D3DMATRIX</a> structure that modifies the current transformation.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetSoftwareVertexProcessing">
    <summary>
      <para>Gets the vertex processing (hardware or software) mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getsoftwarevertexprocessing" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetTransform">
    <summary>
      <para>Retrieves a matrix describing a transformation state.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-gettransform" /></para>
      <param name="state">Device state variable that is being modified. This parameter can be any member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dtransformstatetype">D3DTRANSFORMSTATETYPE</a> enumerated type, or the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dts-worldmatrix">D3DTS_WORLDMATRIX</a> macro.</param>
      <param name="matrix">Pointer to a 
    <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dmatrix">D3DMATRIX</a> structure, describing the returned transformation state.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDeviceManager9">
    <summary>
      <para>Enables two threads to share the same Direct3D 9 device, and provides access to the DirectX Video Acceleration (DXVA) features of the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dxva2api/nn-dxva2api-idirect3ddevicemanager9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DResource9::GetPrivateData">
    <summary>
      <para>Copies the private data associated with the resource to a provided buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dresource9-getprivatedata" /></para>
      <param name="refguid">The globally unique identifier that identifies the private data to retrieve.</param>
      <param name="data">Pointer to a previously allocated buffer to fill with the requested private data if the call succeeds. The application calling this method is responsible for allocating and releasing this buffer. If this parameter is <b>NULL</b>, this method will return the buffer size in pSizeOfData.</param>
      <param name="sizeOfData">Pointer to the size of the buffer at pData, in bytes. If this value is less than the actual size of the private data (such as 0), the method sets this parameter to the required buffer size and the method returns D3DERR_MOREDATA.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::CreateVertexBuffer">
    <summary>
      <para>Creates a vertex buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-createvertexbuffer" /></para>
      <param name="length">Size of the vertex buffer, in bytes. For FVF vertex buffers, Length must be large enough to contain at least one vertex, but it need not be a multiple of the vertex size. Length is not validated for non-FVF buffers. See Remarks.</param>
      <param name="usage">Usage can be 0, which indicates no usage value. However, if usage is desired, use a combination of one or more <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dusage">D3DUSAGE</a> constants. It is good practice to match the usage parameter in CreateVertexBuffer with the behavior flags in <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3d9-createdevice">IDirect3D9::CreateDevice</a>. For more information, see Remarks.</param>
      <param name="FVF">Combination of <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dfvf">D3DFVF</a>, a usage specifier that describes the vertex format of the vertices in this buffer. If this parameter is set to a valid FVF code, the created vertex buffer is an FVF vertex buffer (see Remarks). Otherwise, if this parameter is set to zero, the vertex buffer is a non-FVF vertex buffer.</param>
      <param name="pool">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpool">D3DPOOL</a> enumerated type, describing a valid memory class into which to place the resource. Do not set to D3DPOOL_SCRATCH.</param>
      <param name="vertexBuffer">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dvertexbuffer9">IDirect3DVertexBuffer9</a> interface, representing the created vertex buffer resource.</param>
      <param name="sharedHandle">Reserved. Set this parameter to <b>NULL</b>. This parameter can be used in Direct3D 9 for Windows Vista to <a href="https://docs.microsoft.com/windows/desktop/direct3d9/dx9lh">share resources</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetVertexShaderConstantB">
    <summary>
      <para>Sets a Boolean vertex shader constant.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setvertexshaderconstantb" /></para>
      <param name="startRegister">Register number that will contain the first constant value.</param>
      <param name="constantData">Pointer to an array of constants.</param>
      <param name="boolCount">Number of boolean values in the array of constants.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVertexShader9">
    <summary>
      <para>Applications use the methods of the IDirect3DVertexShader9 interface to encapsulate the functionality of a vertex shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dvertexshader9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DSwapChain9::GetBackBuffer">
    <summary>
      <para>Retrieves a back buffer from the swap chain of the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dswapchain9-getbackbuffer" /></para>
      <param name="iBackBuffer">Index of the back buffer object to return. Back buffers are numbered from 0 to the total number of back buffers - 1. A value of 0 returns the first back buffer, not the front buffer. The front buffer is not accessible through this method. Use <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nf-d3d9helper-idirect3dswapchain9-getfrontbufferdata">IDirect3DSwapChain9::GetFrontBufferData</a> to retrieve a copy of the front buffer.</param>
      <param name="type">Stereo view is not supported in Direct3D 9, so the only valid value for this parameter is D3DBACKBUFFER_TYPE_MONO.</param>
      <param name="backBuffer">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface, representing the returned back buffer surface.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDeviceManager9::UnlockDevice">
    <summary>
      <para>Unlocks the Direct3D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dxva2api/nf-dxva2api-idirect3ddevicemanager9-unlockdevice" /></para>
      <param name="hDevice">Handle to the Direct3D device. To get the device handle, call <a href="https://docs.microsoft.com/windows/desktop/api/dxva2api/nf-dxva2api-idirect3ddevicemanager9-opendevicehandle">IDirect3DDeviceManager9::OpenDeviceHandle</a>.</param>
      <param name="fSaveState">If <b>TRUE</b>, the method saves the Direct3D device state in a state block. Internally, the method uses the Direct3D <b>IDirect3DStateBlock9</b> interface to save the device state. The next time you call <a href="https://docs.microsoft.com/windows/desktop/api/dxva2api/nf-dxva2api-idirect3ddevicemanager9-lockdevice">LockDevice</a> with the same device handle, the state block is restored.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetSwapChain">
    <summary>
      <para>Gets a pointer to a swap chain.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getswapchain" /></para>
      <param name="iSwapChain">The swap chain ordinal value.  For more information, see NumberOfAdaptersInGroup in <a href="https://docs.microsoft.com/windows/desktop/api/d3d9caps/ns-d3d9caps-d3dcaps9">D3DCAPS9</a>.</param>
      <param name="swapChain">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dswapchain9">IDirect3DSwapChain9</a> interface that will receive a copy of swap chain.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVertexBuffer9::GetDesc">
    <summary>
      <para>Retrieves a description of the vertex buffer resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvertexbuffer9-getdesc" /></para>
      <param name="desc">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dvertexbuffer-desc">D3DVERTEXBUFFER_DESC</a> structure, describing the returned vertex buffer.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::CreateStateBlock">
    <summary>
      <para>Creates a new state block that contains the values for all device states, vertex-related states, or pixel-related states.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-createstateblock" /></para>
      <param name="type">Type of state data that the method should capture. This parameter can be set to a value defined in the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dstateblocktype">D3DSTATEBLOCKTYPE</a> enumerated type.</param>
      <param name="sB">Pointer to a state block interface. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dstateblock9">IDirect3DStateBlock9</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetRenderTargetData">
    <summary>
      <para>Copies the render-target data from device memory to system memory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getrendertargetdata" /></para>
      <param name="renderTarget">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> object, representing a render target.</param>
      <param name="destSurface">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> object, representing a destination surface.</param>
    </summary>
  </comment>
  <comment id="IDirect3DStateBlock9">
    <summary>
      <para>Applications use the methods of the IDirect3DStateBlock9 interface to encapsulate render states.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dstateblock9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::CreateVertexShader">
    <summary>
      <para>Creates a vertex shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-createvertexshader" /></para>
      <param name="function">Pointer to an array of tokens that represents the vertex shader, including any embedded debug and symbol table information. 
    


<ul>
<li>Use a function such as <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dxcompileshader">D3DXCompileShader</a> to create the array from a HLSL shader.</li>
<li>Use a function like <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dxassembleshader">D3DXAssembleShader</a> to create the token array from an assembly language shader.</li>
<li>Use a function like <a href="https://docs.microsoft.com/windows/desktop/direct3d9/id3dxeffectcompiler--compileshader">ID3DXEffectCompiler::CompileShader</a> to create the array from an effect.</li>
</ul></param>
      <param name="shader">Pointer to the returned vertex shader interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dvertexshader9">IDirect3DVertexShader9</a>).</param>
    </summary>
  </comment>
  <comment id="IDirect3DVolume9">
    <summary>
      <para>Applications use the methods of the IDirect3DVolume9 interface to manipulate volume resources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dvolume9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DIndexBuffer9">
    <summary>
      <para>Applications use the methods of the IDirect3DIndexBuffer9 interface to manipulate an index buffer resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dindexbuffer9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DSurface9::GetDC">
    <summary>
      <para>Retrieves a device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dsurface9-getdc" /></para>
      <param name="phdc">Pointer to the device context for the surface.</param>
    </summary>
  </comment>
  <comment id="IDirect3DTexture9::GetSurfaceLevel">
    <summary>
      <para>Retrieves the specified texture surface level.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dtexture9-getsurfacelevel" /></para>
      <param name="level">Identifies a level of the texture resource. This method returns a surface for the level specified by this parameter. The top-level surface is denoted by 0.</param>
      <param name="surfaceLevel">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface, representing the returned surface.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9Ex">
    <summary>
      <para>Applications use the methods of the IDirect3D9Ex interface (which inherits from IDirect3D9) to create Microsoft Direct3D 9Ex objects and set up the environment.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nn-d3d9-idirect3d9ex" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DVolume9::GetDesc">
    <summary>
      <para>Retrieves a description of the volume.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvolume9-getdesc" /></para>
      <param name="desc">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dvolume-desc">D3DVOLUME_DESC</a> structure, describing the volume.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::ComposeRects">
    <summary>
      <para>Copy a text string to one surface using an alphabet of glyphs on another surface. Composition is done by the GPU using bitwise operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-composerects" /></para>
      <param name="src">A pointer to a source surface (prepared by <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a>) that supplies the alphabet glyphs. This surface must be created with the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dusage">D3DUSAGE_TEXTAPI</a> flag.</param>
      <param name="dst">A pointer to the destination surface (prepared by <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a>) that receives the glyph data. The surface must be part of a texture.</param>
      <param name="srcRectDescs">A pointer to a vertex buffer (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dvertexbuffer9">IDirect3DVertexBuffer9</a>) containing rectangles (see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcomposerectdesc">D3DCOMPOSERECTDESC</a>) that enclose the desired glyphs in the source surface.</param>
      <param name="numRects">The number of rectangles or glyphs that are used in the operation. The number applies to both the source and destination surfaces. The range is 0 to <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcomposerects-maxnumrects">D3DCOMPOSERECTS_MAXNUMRECTS</a>.</param>
      <param name="dstRectDescs">A pointer to a vertex buffer (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dvertexbuffer9">IDirect3DVertexBuffer9</a>) containing rectangles (see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcomposerectdestination">D3DCOMPOSERECTDESTINATION</a>) that describe the destination to which the indicated glyph from the source surface will be copied.</param>
      <param name="operation">Specifies how to combine the source and destination surfaces. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcomposerectsop">D3DCOMPOSERECTSOP</a>.</param>
      <param name="xoffset">A value added to the <i>x</i> coordinates of all destination rectangles. This value can be negative, which may cause the glyph to be rejected or clipped if the result is beyond the bounds of the surface.</param>
      <param name="yoffset">A value added to the <i>y</i> coordinates of all destination rectangles. This value can be negative, which may cause the glyph to be rejected or clipped if the result is beyond the bounds of the surface.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetNPatchMode">
    <summary>
      <para>Enable or disable N-patches.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setnpatchmode" /></para>
      <param name="nSegments">Specifies the number of subdivision segments. If the number of segments is less than 1.0, N-patches are disabled. The default value is 0.0.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetPixelShader">
    <summary>
      <para>Sets the current pixel shader to a previously created pixel shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setpixelshader" /></para>
      <param name="shader">Pixel shader interface.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetCreationParameters">
    <summary>
      <para>Retrieves the creation parameters of the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getcreationparameters" /></para>
      <param name="parameters">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddevice-creation-parameters">D3DDEVICE_CREATION_PARAMETERS</a> structure, describing the creation parameters of the device.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetStreamSourceFreq">
    <summary>
      <para>Gets the stream source frequency divider value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getstreamsourcefreq" /></para>
      <param name="streamNumber">Stream source number.</param>
      <param name="divider">Returns the frequency divider value.</param>
    </summary>
  </comment>
  <comment id="IDirect3DBaseTexture9::GetAutoGenFilterType">
    <summary>
      <para>Get the filter type that is used for automatically generated mipmap sublevels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dbasetexture9-getautogenfiltertype" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DQuery9::GetDataSize">
    <summary>
      <para>Gets the number of bytes in the query data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dquery9-getdatasize" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DTexture9::AddDirtyRect">
    <summary>
      <para>Adds a dirty region to a texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dtexture9-adddirtyrect" /></para>
      <param name="dirtyRect">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure, specifying the dirty region to add. Specifying <b>NULL</b> expands the dirty region to cover the entire texture.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9Ex::GetAdapterModeCountEx">
    <summary>
      <para>Returns the number of display modes available.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3d9ex-getadaptermodecountex" /></para>
      <param name="adapter">Ordinal number denoting the display adapter from which to retrieve the display mode count.</param>
      <param name="filter">Specifies the characteristics of the desired display mode. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplaymodefilter">D3DDISPLAYMODEFILTER</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DResource9::GetDevice">
    <summary>
      <para>Retrieves the device associated with a resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dresource9-getdevice" /></para>
      <param name="device">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3ddevice9">IDirect3DDevice9</a> interface to fill with the device pointer, if the query succeeds.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetVertexShader">
    <summary>
      <para>Retrieves the currently set vertex shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getvertexshader" /></para>
      <param name="shader">Pointer to a vertex shader interface.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSwapChain9::GetPresentParameters">
    <summary>
      <para>Retrieves the presentation parameters associated with a swap chain.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dswapchain9-getpresentparameters" /></para>
      <param name="presentationParameters">Pointer to the presentation parameters. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent-parameters">D3DPRESENT_PARAMETERS</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DCubeTexture9::GetCubeMapSurface">
    <summary>
      <para>Retrieves a cube texture map surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dcubetexture9-getcubemapsurface" /></para>
      <param name="faceType">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dcubemap-faces">D3DCUBEMAP_FACES</a> enumerated type, identifying a cube map face.</param>
      <param name="level">Specifies a level of a mipmapped cube texture.</param>
      <param name="cubeMapSurface">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface, representing the returned cube texture map surface.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetVertexShaderConstantI">
    <summary>
      <para>Sets an integer vertex shader constant.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setvertexshaderconstanti" /></para>
      <param name="startRegister">Register number that will contain the first constant value.</param>
      <param name="constantData">Pointer to an array of constants.</param>
      <param name="vector4iCount">Number of four integer vectors in the array of constants.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetStreamSource">
    <summary>
      <para>Retrieves a vertex buffer bound to the specified data stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getstreamsource" /></para>
      <param name="streamNumber">Specifies the data stream, in the range from 0 to the maximum number of streams minus one.</param>
      <param name="streamData">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dvertexbuffer9">IDirect3DVertexBuffer9</a> interface, representing the returned vertex buffer bound to the specified data stream.</param>
      <param name="offsetInBytes">Pointer containing the offset from the beginning of the stream to the beginning of the vertex data. The offset is measured in bytes. See Remarks.</param>
      <param name="stride">Pointer to a returned stride of the component, in bytes. See Remarks.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetVertexDeclaration">
    <summary>
      <para>Sets a Vertex Declaration (Direct3D 9).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setvertexdeclaration" /></para>
      <param name="decl">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dvertexdeclaration9">IDirect3DVertexDeclaration9</a> object, which contains the vertex declaration.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::CreateOffscreenPlainSurfaceEx">
    <summary>
      <para>Create an off-screen surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-createoffscreenplainsurfaceex" /></para>
      <param name="width">Width of the surface.</param>
      <param name="height">Height of the surface.</param>
      <param name="format">Format of the surface. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a>.</param>
      <param name="pool">Surface pool type. See <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpool">D3DPOOL</a>.</param>
      <param name="surface">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a>  interface created.</param>
      <param name="sharedHandle">Reserved. Set this parameter to <b>NULL</b>. This parameter can be used in Direct3D 9 for Windows Vista to <a href="https://docs.microsoft.com/windows/desktop/direct3d9/dx9lh">share resources</a>.</param>
      <param name="usage">Combination of one or more <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dusage">D3DUSAGE</a> constants which can be OR'd together. Value of 0 indicates no usage.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVertexDeclaration9::GetDeclaration">
    <summary>
      <para>Gets the vertex shader declaration.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvertexdeclaration9-getdeclaration" /></para>
      <param name="element">Array of vertex elements (see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dvertexelement9">D3DVERTEXELEMENT9</a>) that make up a vertex shader declaration. The application needs to allocate enough room for this. The vertex element array ends with the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddecl-end">D3DDECL_END</a> macro.</param>
      <param name="numElements">Number of elements in the array. The application needs to allocate enough room for this.</param>
    </summary>
  </comment>
  <comment id="IDirect3DSurface9">
    <summary>
      <para>Applications use the methods of the IDirect3DSurface9 interface to query and prepare surfaces.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dsurface9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::CheckDeviceState">
    <summary>
      <para>Reports the current cooperative-level status of the Direct3D device for a windowed or full-screen application.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-checkdevicestate" /></para>
      <param name="hDestinationWindow">The destination window handle to check for occlusion. When this parameter is <b>NULL</b>, S_PRESENT_OCCLUDED is returned when another device has fullscreen ownership. When the window handle is not <b>NULL</b>, window's client area is checked for occlusion. A window is occluded if any part of it is obscured by another application.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9::GetDeviceCaps">
    <summary>
      <para>Retrieves device-specific information about a device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3d9-getdevicecaps" /></para>
      <param name="adapter">Ordinal number that denotes the display adapter. D3DADAPTER_DEFAULT is always the primary display adapter.</param>
      <param name="deviceType">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddevtype">D3DDEVTYPE</a> enumerated type. Denotes the device type.</param>
      <param name="caps">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d9caps/ns-d3d9caps-d3dcaps9">D3DCAPS9</a> structure to be filled with information describing the capabilities of the device.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::GetGPUThreadPriority">
    <summary>
      <para>Get the priority of the GPU thread.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-getgputhreadpriority" /></para>
      <param name="priority">Current GPU priority. Valid values range from -7 to 7.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9Ex::ResetEx">
    <summary>
      <para>Resets the type, size, and format of the swap chain with all other surfaces persistent.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3ddevice9ex-resetex" /></para>
      <param name="presentationParameters">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent-parameters">D3DPRESENT_PARAMETERS</a> structure, describing the new presentation parameters. This value cannot be <b>NULL</b>. 
    


When switching to full-screen mode, Direct3D will try to find a desktop format that matches the back buffer format, so that back buffer and front buffer formats will be identical (to eliminate the need for color conversion).

When this method returns:

<ul>
<li>BackBufferCount, BackBufferWidth, and BackBufferHeight are set to zero.</li>
<li>BackBufferFormat is set to <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> for windowed mode only; a full-screen mode must specify a format.</li>
</ul></param>
      <param name="fullscreenDisplayMode">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3ddisplaymodeex">D3DDISPLAYMODEEX</a> structure that describes the properties of the desired display mode. This value must be provided for fullscreen applications, but can be <b>NULL</b> for windowed applications.</param>
    </summary>
  </comment>
  <comment id="IDirect3DResource9">
    <summary>
      <para>Applications use the methods of the IDirect3DResource9 interface to query and prepare resources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dresource9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3D9">
    <summary>
      <para>Applications use the methods of the IDirect3D9 interface to create Microsoft Direct3D objects and set up the environment. This interface includes methods for enumerating and retrieving capabilities of the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3d9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::CreateVolumeTexture">
    <summary>
      <para>Creates a volume texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-createvolumetexture" /></para>
      <param name="width">Width of the top-level of the volume texture, in pixels. This value must be a power of two if the D3DPTEXTURECAPS_VOLUMEMAP_POW2 member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d9caps/ns-d3d9caps-d3dcaps9">D3DCAPS9</a> is set. The pixel dimensions of subsequent levels will be the truncated value of half of the previous level's pixel dimension (independently). Each dimension clamps at a size of 1 pixel. Thus, if the division by two results in 0 (zero), 1 will be taken instead. The maximum dimension that a driver supports (for width, height, and depth) can be found in MaxVolumeExtent in <b>D3DCAPS9</b>.</param>
      <param name="height">Height of the top-level of the volume texture, in pixels. This value must be a power of two if the D3DPTEXTURECAPS_VOLUMEMAP_POW2 member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d9caps/ns-d3d9caps-d3dcaps9">D3DCAPS9</a> is set. The pixel dimensions of subsequent levels will be the truncated value of half of the previous level's pixel dimension (independently). Each dimension clamps at a size of 1 pixel. Thus, if the division by 2 results in 0 (zero), 1 will be taken instead. The maximum dimension that a driver supports (for width, height, and depth) can be found in MaxVolumeExtent in <b>D3DCAPS9</b>.</param>
      <param name="depth">Depth of the top-level of the volume texture, in pixels. This value must be a power of two if the D3DPTEXTURECAPS_VOLUMEMAP_POW2 member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d9caps/ns-d3d9caps-d3dcaps9">D3DCAPS9</a> is set. The pixel dimensions of subsequent levels will be the truncated value of half of the previous level's pixel dimension (independently). Each dimension clamps at a size of 1 pixel. Thus, if the division by 2 results in 0 (zero), 1 will be taken instead. The maximum dimension that a driver supports (for width, height, and depth) can be found in MaxVolumeExtent in <b>D3DCAPS9</b>.</param>
      <param name="levels">Number of levels in the texture. If this is zero, Direct3D will generate all texture sublevels down to 1x1 pixels for hardware that supports mipmapped volume textures. Call <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3dbasetexture9-getlevelcount">IDirect3DBaseTexture9::GetLevelCount</a> to see the number of levels generated.</param>
      <param name="usage">Usage can be 0, which indicates no usage value. If usage is desired, use D3DUSAGE_DYNAMIC or D3DUSAGE_SOFTWAREPROCESSING. For more information, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dusage">D3DUSAGE</a>.</param>
      <param name="format">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a> enumerated type, describing the format of all levels in the volume texture.</param>
      <param name="pool">Member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpool">D3DPOOL</a> enumerated type, describing the memory class into which the volume texture should be placed.</param>
      <param name="volumeTexture">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dvolumetexture9">IDirect3DVolumeTexture9</a> interface, representing the created volume texture resource.</param>
      <param name="sharedHandle">Reserved. Set this parameter to <b>NULL</b>. This parameter can be used in Direct3D 9 for Windows Vista to <a href="https://docs.microsoft.com/windows/desktop/direct3d9/dx9lh">share resources</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVolume9::FreePrivateData">
    <summary>
      <para>Frees the specified private data associated with this volume.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvolume9-freeprivatedata" /></para>
      <param name="refguid">Reference to the globally unique identifier that identifies the private data to free.</param>
    </summary>
  </comment>
  <comment id="IDirect3DQuery9::GetDevice">
    <summary>
      <para>Gets the device that is being queried.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dquery9-getdevice" /></para>
      <param name="device">Pointer to the device being queried. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3ddevice9">IDirect3DDevice9</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetStreamSourceFreq">
    <summary>
      <para>Sets the stream source frequency divider value. This may be used to draw several instances of geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setstreamsourcefreq" /></para>
      <param name="streamNumber">Stream source number.</param>
      <param name="divider">This parameter may have two different values. See remarks.</param>
    </summary>
  </comment>
  <comment id="IDirect3DResource9::SetPriority">
    <summary>
      <para>Assigns the priority of a resource for scheduling purposes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dresource9-setpriority" /></para>
      <param name="priorityNew">Priority to assign to a resource.
        


<table>
<tr>
<td>
Differences between Direct3D 9 and Direct3D 9 for Windows Vista

The priority can be any DWORD value; Direct3D 9 for Windows Vista also supports any of these pre-defined values <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3d9-resource-priority">D3D9_RESOURCE_PRIORITY</a>.

</td>
</tr>
</table></param>
    </summary>
  </comment>
  <comment id="IDirect3DAuthenticatedChannel9::NegotiateKeyExchange">
    <summary>
      <para>Establishes a session key for the authenticated channel.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dauthenticatedchannel9-negotiatekeyexchange" /></para>
      <param name="dataSize">The size of the data in the <i>pData</i> array, in bytes.</param>
      <param name="data">A pointer to a byte array that contains the encrypted session key. The buffer must contain 256 bytes of data, encrypted using RSA Encryption Scheme - Optimal Asymmetric Encryption Padding (RSAES-OAEP).</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetSamplerState">
    <summary>
      <para>Sets the sampler state value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setsamplerstate" /></para>
      <param name="sampler">The sampler stage index. For more info about sampler stage, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/vertex-textures-in-vs-3-0">Sampling Stage Registers in vs_3_0 (DirectX HLSL)</a>.</param>
      <param name="type">This parameter can be any member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dsamplerstatetype">D3DSAMPLERSTATETYPE</a> enumerated type.</param>
      <param name="value">State value to set. The meaning of this value is determined by the Type parameter.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetClipStatus">
    <summary>
      <para>Sets the clip status.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setclipstatus" /></para>
      <param name="clipStatus">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dclipstatus9">D3DCLIPSTATUS9</a> structure, describing the clip status settings to be set.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::Reset">
    <summary>
      <para>Resets the type, size, and format of the swap chain.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-reset" /></para>
      <param name="presentationParameters">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dpresent-parameters">D3DPRESENT_PARAMETERS</a> structure, describing the new presentation parameters. This value cannot be <b>NULL</b>. 
    


When switching to full-screen mode, Direct3D will try to find a desktop format that matches the back buffer format, so that back buffer and front buffer formats will be identical (to eliminate the need for color conversion).

When this method returns:

<ul>
<li>BackBufferCount, BackBufferWidth, and BackBufferHeight are set to zero.</li>
<li>BackBufferFormat is set to <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFMT_UNKNOWN</a> for windowed mode only; a full-screen mode must specify a format.</li>
</ul></param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetSamplerState">
    <summary>
      <para>Gets the sampler state value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getsamplerstate" /></para>
      <param name="sampler">The sampler stage index.</param>
      <param name="type">This parameter can be any member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dsamplerstatetype">D3DSAMPLERSTATETYPE</a> enumerated type.</param>
      <param name="value">State value to get. The meaning of this value is determined by the Type parameter.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVolumeTexture9::LockBox">
    <summary>
      <para>Locks a box on a volume texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dvolumetexture9-lockbox" /></para>
      <param name="level">Specifies the level of the volume texture resource to lock.</param>
      <param name="lockedVolume">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlocked-box">D3DLOCKED_BOX</a> structure, describing the locked region.</param>
      <param name="box">Pointer to the volume to lock. This parameter is specified by a pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dbox">D3DBOX</a> structure. Specifying <b>NULL</b> for this parameter locks the entire volume level.</param>
      <param name="flags">Combination of zero or more locking flags that describe the type of lock to perform. For this method, the valid flags are: 
    


<ul>
<li>D3DLOCK_DISCARD</li>
<li>D3DLOCK_NO_DIRTY_UPDATE</li>
<li>D3DLOCK_NOSYSLOCK</li>
<li>D3DLOCK_READONLY</li>
</ul>
For a description of the flags, see <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dlock">D3DLOCK</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3DVertexBuffer9">
    <summary>
      <para>Applications use the methods of the IDirect3DVertexBuffer9 interface to manipulate vertex buffer resources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nn-d3d9helper-idirect3dvertexbuffer9" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DQuery9::GetType">
    <summary>
      <para>Gets the query type.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3dquery9-gettype" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetVertexDeclaration">
    <summary>
      <para>Gets a vertex shader declaration.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getvertexdeclaration" /></para>
      <param name="decl">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dvertexdeclaration9">IDirect3DVertexDeclaration9</a> object that is returned.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::DeletePatch">
    <summary>
      <para>Frees a cached high-order patch.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-deletepatch" /></para>
      <param name="handle">Handle of the cached high-order patch to delete.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::CreatePixelShader">
    <summary>
      <para>Creates a pixel shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-createpixelshader" /></para>
      <param name="function">Pointer to the pixel shader function token array, specifying the blending operations. This value cannot be <b>NULL</b>.</param>
      <param name="shader">Pointer to the returned pixel shader interface. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dpixelshader9">IDirect3DPixelShader9</a>.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9::GetAdapterModeCount">
    <summary>
      <para>Returns the number of display modes available on this adapter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3d9-getadaptermodecount" /></para>
      <param name="adapter">Ordinal number that denotes the display adapter. D3DADAPTER_DEFAULT is always the primary display adapter.</param>
      <param name="format">Identifies the format of the surface type using <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dformat">D3DFORMAT</a>. Use <a href="https://docs.microsoft.com/windows/desktop/api/d3d9/nf-d3d9-idirect3d9-enumadaptermodes">EnumAdapterModes</a> to see the valid formats.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetPaletteEntries">
    <summary>
      <para>Retrieves palette entries.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getpaletteentries" /></para>
      <param name="paletteNumber">An ordinal value identifying the particular palette to retrieve.</param>
      <param name="entries">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/ns-wingdi-paletteentry">PALETTEENTRY</a> structure, representing the returned palette entries.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetFrontBufferData">
    <summary>
      <para>Generates a copy of the device's front buffer and places that copy in a system memory buffer provided by the application.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getfrontbufferdata" /></para>
      <param name="iSwapChain">An unsigned integer specifying the swap chain.</param>
      <param name="destSurface">Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dsurface9">IDirect3DSurface9</a> interface that will receive a copy of the contents of the front buffer. The data is returned in successive rows with no intervening space, starting from the vertically highest row on the device's output to the lowest.



For windowed mode, the size of the destination surface should be the size of the desktop. For full-screen mode, the size of the destination surface should be the screen size.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetDirect3D">
    <summary>
      <para>Returns an interface to the instance of the Direct3D object that created the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getdirect3d" /></para>
      <param name="d3D9">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3d9">IDirect3D9</a> interface, representing the interface of the Direct3D object that created the device.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetTransform">
    <summary>
      <para>Sets a single device transformation-related state.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-settransform" /></para>
      <param name="state">Device-state variable that is being modified. This parameter can be any member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dtransformstatetype">D3DTRANSFORMSTATETYPE</a> enumerated type, or the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dts-worldmatrix">D3DTS_WORLDMATRIX</a> macro.</param>
      <param name="matrix">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dmatrix">D3DMATRIX</a> structure that modifies the current transformation.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetRenderState">
    <summary>
      <para>Retrieves a render-state value for a device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getrenderstate" /></para>
      <param name="state">Device state variable that is being queried. This parameter can be any member of the <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3drenderstatetype">D3DRENDERSTATETYPE</a> enumerated type.</param>
      <param name="value">Pointer to a variable that receives the value of the queried render state variable when the method returns.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::SetClipPlane">
    <summary>
      <para>Sets the coefficients of a user-defined clipping plane for the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-setclipplane" /></para>
      <param name="index">Index of the clipping plane for which the plane equation coefficients are to be set.</param>
      <param name="plane">Pointer to an address of a four-element array of values that represent the clipping plane coefficients to be set, in the form of the general plane equation. See Remarks.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetGammaRamp">
    <summary>
      <para>Retrieves the gamma correction ramp for the swap chain.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getgammaramp" /></para>
      <param name="iSwapChain">An unsigned integer specifying the swap chain.</param>
      <param name="ramp">Pointer to an application-supplied <a href="https://docs.microsoft.com/windows/desktop/direct3d9/d3dgammaramp">D3DGAMMARAMP</a> structure to fill with the gamma correction ramp.</param>
    </summary>
  </comment>
  <comment id="IDirect3D9ExOverlayExtension">
    <summary>
      <para>Queries the overlay hardware capabilities of a Direct3D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nn-d3d9-idirect3d9exoverlayextension" /></para>
    </summary>
  </comment>
  <comment id="IDirect3DCryptoSession9::NegotiateKeyExchange">
    <summary>
      <para>Establishes the session key for the cryptographic session.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9/nf-d3d9-idirect3dcryptosession9-negotiatekeyexchange" /></para>
      <param name="dataSize">The size of the <i>pData</i> byte array, in bytes.</param>
      <param name="data">A pointer to a byte array that contains the encrypted session key.</param>
    </summary>
  </comment>
  <comment id="IDirect3DDevice9::GetIndices">
    <summary>
      <para>Retrieves index data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d3d9helper/nf-d3d9helper-idirect3ddevice9-getindices" /></para>
      <param name="indexData">Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d9helper/nn-d3d9helper-idirect3dindexbuffer9">IDirect3DIndexBuffer9</a> interface, representing the returned index data.</param>
    </summary>
  </comment>
</comments>