<?xml version="1.0" encoding="utf-8"?>
<comments>
  <comment id="ID2D1GdiMetafileSink">
    <summary>
      <para>A developer implemented interface that allows a metafile to be replayed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1gdimetafilesink" /></para>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::DrawGdiMetafile">
    <summary>
      <para>Draw a metafile to the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-drawgdimetafile" /></para>
      <param name="gdiMetafile">The metafile to draw.</param>
      <param name="targetOffset">The offset from the upper left corner of the render target.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgDocument::CreateStrokeDashArray">
    <summary>
      <para>Creates a dash array object which can be used to set the stroke-dasharray property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-createstrokedasharray" /></para>
      <param name="dashes">An array of dashes.</param>
      <param name="dashesCount">Size of the array in th dashes argument.</param>
      <param name="strokeDashArray">The created <a href="https://docs.microsoft.com/windows/desktop/api/d2d1svg/nn-d2d1svg-id2d1svgstrokedasharray">ID2D1SvgStrokeDashArray</a>.</param>
    </summary>
  </comment>
  <comment id="IWICPlanarBitmapSourceTransform::DoesSupportTransform">
    <summary>
      <para>Use this method to determine if a desired planar output is supported and allow the caller to choose an optimized code path if it is.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicplanarbitmapsourcetransform-doessupporttransform" /></para>
      <param name="puiWidth">On input, the desired width.  On output, the closest supported width to the desired width; this is the same size or larger than the desired width.</param>
      <param name="puiHeight">On input, the desired height.  On output, the closest supported height to the desired height; this is the same size or larger than the desired width.</param>
      <param name="dstTransform">The desired rotation or flip operation.  Multiple  <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmaptransformoptions">WICBitmapTransformOptions</a> can be combined in this flag parameter, see <b>WICBitmapTransformOptions</b>.</param>
      <param name="dstPlanarOptions">Used to specify additional configuration options for the transform.  See <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicplanaroptions">WICPlanarOptions</a> for more detail.



WIC JPEG Decoder:


<a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicplanaroptions">WICPlanarOptionsPreserveSubsampling</a> can be specified to retain the subsampling ratios when downscaling.  By default, the JPEG decoder attempts to preserve quality by downscaling only the Y plane in some cases, changing the image to 4:4:4 chroma subsampling.</param>
      <param name="pguidDstFormats">The requested pixel formats of the respective planes.</param>
      <param name="planeDescriptions">When *<i>pfIsSupported</i> == TRUE, the array of plane descriptions contains the size and format of each of the planes.



WIC JPEG Decoder: The Cb and Cr planes can be a different size from the values returned by <i>puiWidth</i> and <i>puiHeight</i> due to chroma subsampling.</param>
      <param name="cPlanes">The number of component planes requested.</param>
      <param name="pfIsSupported">Set to TRUE if the requested transforms are natively supported.</param>
    </summary>
  </comment>
  <comment id="WICDdsAlphaMode">
    <summary>
      <para>Specifies the the meaning of pixel color component values contained in the DDS image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicddsalphamode" /></para>
    </summary>
  </comment>
  <comment id="WICDdsAlphaMode::WICDdsAlphaModeUnknown">
    <summary>Alpha behavior is unspecified and must be determined by the reader.</summary>
  </comment>
  <comment id="WICDdsAlphaMode::WICDdsAlphaModeStraight">
    <summary>The alpha data is straight.</summary>
  </comment>
  <comment id="WICDdsAlphaMode::WICDdsAlphaModePremultiplied">
    <summary>The alpha data is premultiplied.</summary>
  </comment>
  <comment id="WICDdsAlphaMode::WICDdsAlphaModeOpaque">
    <summary>The alpha data is opaque (UNORM value of 1). This can be used by a compliant reader as a performance optimization. For example, blending operations can be converted to copies.</summary>
  </comment>
  <comment id="WICDdsAlphaMode::WICDdsAlphaModeCustom">
    <summary>The alpha channel contains custom data that is not alpha.</summary>
  </comment>
  <comment id="ID2D1StrokeStyle::GetDashOffset">
    <summary>
      <para>Retrieves a value that specifies how far in the dash sequence the stroke will start.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getdashoffset" /></para>
    </summary>
  </comment>
  <comment id="ID2D1BitmapBrush::GetExtendModeY">
    <summary>
      <para>Gets the method by which the brush vertically tiles those areas that extend past its bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-getextendmodey" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RadialGradientBrush::SetRadiusX">
    <summary>
      <para>Specifies the x-radius of the gradient ellipse, in the brush's coordinate space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-setradiusx" /></para>
      <param name="radiusX">The x-radius of the gradient ellipse. This value is in the brush's coordinate space.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapFrameEncode::GetMetadataQueryWriter">
    <summary>
      <para>Gets the metadata query writer for the encoder frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-getmetadataquerywriter" /></para>
      <param name="iMetadataQueryWriter">When this method returns, contains a pointer to metadata query writer for the encoder frame.</param>
    </summary>
  </comment>
  <comment id="WICBitmapTransformOptions">
    <summary>
      <para>Specifies the flip and rotation transforms.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmaptransformoptions" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapTransformOptions::WICBitmapTransformRotate0">
    <summary>A rotation of 0 degrees.</summary>
  </comment>
  <comment id="WICBitmapTransformOptions::WICBitmapTransformRotate90">
    <summary>A clockwise rotation of 90 degrees.</summary>
  </comment>
  <comment id="WICBitmapTransformOptions::WICBitmapTransformRotate180">
    <summary>A clockwise rotation of 180 degrees.</summary>
  </comment>
  <comment id="WICBitmapTransformOptions::WICBitmapTransformRotate270">
    <summary>A clockwise rotation of 270 degrees.</summary>
  </comment>
  <comment id="WICBitmapTransformOptions::WICBitmapTransformFlipHorizontal">
    <summary>A horizontal flip. Pixels are flipped around the vertical y-axis.</summary>
  </comment>
  <comment id="WICBitmapTransformOptions::WICBitmapTransformFlipVertical">
    <summary>A vertical flip. Pixels are flipped around the horizontal x-axis.</summary>
  </comment>
  <comment id="IWICComponentFactory::CreateMetadataReader">
    <summary>
      <para>Creates an IWICMetadataReader based on the given parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createmetadatareader" /></para>
      <param name="guidMetadataFormat">The GUID of the desired metadata format.</param>
      <param name="pguidVendor">Pointer to the GUID of the desired metadata reader vendor.</param>
      <param name="dwOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicpersistoptions">WICPersistOptions</a> and <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicmetadatacreationoptions">WICMetadataCreationOptions</a> options to use when creating the metadata reader.</param>
      <param name="iStream">Pointer to a stream in which to initialize the reader with. If <b>NULL</b>, the metadata reader will be empty.</param>
      <param name="iReader">A pointer that receives a pointer to the new metadata reader.</param>
    </summary>
  </comment>
  <comment id="IWICDdsFrameDecode::CopyBlocks">
    <summary>
      <para>Requests pixel data as it is natively stored within the DDS file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsframedecode-copyblocks" /></para>
      <param name="prcBoundsInBlocks">The rectangle to copy from the source. A NULL value specifies the entire texture.

If the texture uses a block-compressed <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>, all values of the rectangle are expressed in number of blocks, not pixels.</param>
      <param name="cbStride">The stride, in bytes, of the destination buffer. This represents the number of bytes from the buffer pointer to the next row of data. If the texture uses a block-compressed <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>, a "row of data" is defined as a row of blocks which contains multiple pixel scanlines.</param>
      <param name="cbBufferSize">The size, in bytes, of the destination buffer.</param>
      <param name="pbBuffer">A pointer to the destination buffer.</param>
    </summary>
  </comment>
  <comment id="ID2D1TransformGraph::ConnectToEffectInput">
    <summary>
      <para>Connects a transform node inside the graph to the corresponding effect input of the encapsulating effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-connecttoeffectinput" /></para>
      <param name="toEffectInputIndex">The effect input to which the transform node will be bound.</param>
      <param name="node">The node to which the connection will be made.</param>
      <param name="toNodeInputIndex">The node input that will be connected.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalysisSink1::SetGlyphOrientation">
    <summary>
      <para>The text analyzer calls back to this to report the actual orientation of each character for shaping and drawing.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextanalysissink1-setglyphorientation" /></para>
      <param name="textPosition">The starting position to report from.</param>
      <param name="textLength">Number of UTF-16 units of the reported range.</param>
      <param name="glyphOrientationAngle">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ne-dwrite_1-dwrite_glyph_orientation_angle">DWRITE_GLYPH_ORIENTATION_ANGLE</a>-typed value that specifies the angle of the glyphs within the text
    range (pass to <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/nf-dwrite_1-idwritetextanalyzer1-getglyphorientationtransform">IDWriteTextAnalyzer1::GetGlyphOrientationTransform</a> to get the world
    relative transform).</param>
      <param name="adjustedBidiLevel">The adjusted bidi level to be used by
    the client layout for reordering runs. This will differ from the
    resolved bidi level retrieved from the source for cases such as
    Arabic stacked top-to-bottom, where the glyphs are still shaped
    as RTL, but the runs are TTB along with any CJK or Latin.</param>
      <param name="isSideways">Whether the glyphs are rotated on their side,
    which is the default case for CJK and the case stacked Latin</param>
      <param name="isRightToLeft">Whether the script should be shaped as
    right-to-left. For Arabic stacked top-to-bottom, even when the
    adjusted bidi level is coerced to an even level, this will still
    be true.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontSet::FindFontFace">
    <summary>
      <para>Gets the index of the matching font face reference in the font set, with the same file, face index, and simulations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontset-findfontface" /></para>
      <param name="fontFace">Font face object that specifies the physical font.</param>
      <param name="listIndex">Receives the zero-based index of the matching font if the font was found, or UINT_MAX otherwise.</param>
      <param name="exists">Receives TRUE if the font exists or FALSE otherwise.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace1::GetUnicodeRanges">
    <summary>
      <para>Retrieves a list of character ranges supported by a font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefontface1-getunicoderanges" /></para>
      <param name="maxRangeCount">Maximum number of character ranges passed
    in from the client.</param>
      <param name="unicodeRanges">An array of <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ns-dwrite_1-dwrite_unicode_range">DWRITE_UNICODE_RANGE</a> structures that are filled with the character ranges.</param>
      <param name="actualRangeCount">A pointer to the actual number of character ranges,
    regardless of the maximum count.</param>
    </summary>
  </comment>
  <comment id="ID2D1DrawInfo::SetPixelShaderConstantBuffer">
    <summary>
      <para>Sets the constant buffer for this transform's pixel shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1drawinfo-setpixelshaderconstantbuffer" /></para>
      <param name="buffer">The data applied to the constant buffer.</param>
      <param name="bufferCount">The number of bytes of data in the constant buffer</param>
    </summary>
  </comment>
  <comment id="D2D1_SVG_VIEWBOX">
    <summary>
      <para>Represents an SVG viewBox.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ns-d2d1svg-d2d1_svg_viewbox" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_VIEWBOX::x">
    <summary>X coordinate of the view box.</summary>
  </comment>
  <comment id="D2D1_SVG_VIEWBOX::y">
    <summary>Y coordinate of the view box.</summary>
  </comment>
  <comment id="D2D1_SVG_VIEWBOX::width">
    <summary>Width of the view box.</summary>
  </comment>
  <comment id="D2D1_SVG_VIEWBOX::height">
    <summary>Height of the view box.</summary>
  </comment>
  <comment id="ID2D1Factory4::CreateDevice">
    <summary>
      <para>Creates an ID2D1Device3 object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory4-createdevice" /></para>
      <param name="dxgiDevice">The IDXGIDevice object used when creating the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device3">ID2D1Device3</a>.</param>
      <param name="d2dDevice3">The requested <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device3">ID2D1Device3</a> object.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device5::CreateDeviceContext">
    <summary>
      <para>Creates a new device context with no initially assigned target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device5-createdevicecontext" /></para>
      <param name="options">Options for creating the device context.</param>
      <param name="deviceContext5">The created device context.</param>
    </summary>
  </comment>
  <comment id="IWICJpegFrameEncode::GetQuantizationTable">
    <summary>
      <para>Retrieves a copy of the quantization table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframeencode-getquantizationtable" /></para>
      <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
      <param name="tableIndex">The index of the quantization table to retrieve.</param>
      <param name="quantizationTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer::AnalyzeBidi">
    <summary>
      <para>Analyzes a text range for script directionality, reading attributes from the source and reporting levels to the sink callback SetBidiLevel.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalyzer-analyzebidi" /></para>
      <param name="analysisSource">A pointer to a source object to analyze.</param>
      <param name="textPosition">The starting text position within the source object.</param>
      <param name="textLength">The text length to analyze.</param>
      <param name="analysisSink">A pointer to the sink callback object that receives the text analysis.</param>
    </summary>
  </comment>
  <comment id="IWICPlanarBitmapFrameEncode">
    <summary>
      <para>Allows planar component image pixels to be written to an encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicplanarbitmapframeencode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS">
    <summary>
      <para>Describes compute shader support, which is an option on D3D10 feature level.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_feature_data_d3d10_x_hardware_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS::computeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x">
    <summary>Shader model 4 compute shaders are supported.</summary>
  </comment>
  <comment id="IDWriteTextRenderer1::DrawInlineObject">
    <summary>
      <para>IDWriteTextLayout::Draw calls this application callback when it needs to draw an inline object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextrenderer1-drawinlineobject" /></para>
      <param name="clientDrawingContext">The application-defined drawing context passed to IDWriteTextLayout::<a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwriteinlineobject-draw">Draw</a>.</param>
      <param name="originX">X-coordinate at the top-left corner of the inline object.</param>
      <param name="originY">Y-coordinate at the top-left corner of the inline object.</param>
      <param name="orientationAngle">Orientation of the inline object.</param>
      <param name="inlineObject">The application-defined inline object set using <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritetextformat">IDWriteTextFormat</a>::<a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextlayout-setinlineobject">SetInlineObject</a>.</param>
      <param name="isSideways">A Boolean flag that indicates whether the object's baseline runs alongside the baseline axis of the line.</param>
      <param name="isRightToLeft">A Boolean flag that indicates whether the object is in a right-to-left context, hinting that the drawing may want to mirror the normal image.</param>
      <param name="clientDrawingEffect">Application-defined drawing effects for the glyphs to render. Usually this argument represents effects such as the foreground brush filling the interior of a line.</param>
    </summary>
  </comment>
  <comment id="ID2D1Resource::GetFactory">
    <summary>
      <para>Retrieves the factory associated with this resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1resource-getfactory" /></para>
      <param name="factory">When this method returns, contains a pointer to a pointer to the factory that created this resource. This parameter is passed uninitialized.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderInfo::SetInstructionCountHint">
    <summary>
      <para>Provides an estimated hint of shader execution cost to D2D.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1renderinfo-setinstructioncounthint" /></para>
      <param name="instructionCount">An approximate instruction count of the associated shader.</param>
    </summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_PROP">
    <summary>
      <para>Identifiers for properties of the Spot-specular lighting effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_spotspecular_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_LIGHT_POSITION">
    <summary>The light position of the point light source. The property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a> defined as (x, y, z). 
            The units are in device-independent pixels (DIPs) and are unbounded.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.

The default value is {0.0f, 0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_POINTS_AT">
    <summary>Where the spot light is focused. The property is exposed as a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a> with – (x, y, z). 
            The units are in DIPs and the values are unbounded.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.

The default value is {0.0f, 0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_FOCUS">
    <summary>The focus of the spot light. This property is unitless and is defined between 0 and 200.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_LIMITING_CONE_ANGLE">
    <summary>The cone angle that restricts the region where the light is projected. No light is projected outside the cone.
            The limiting cone angle is the angle between the spot light axis (the axis between the LightPosition and PointsAt properties) and the spot light cone.
            This property is defined in degrees and must be between 0 to 90 degrees.
            

The type is FLOAT.

The default value is 90.0f.</summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_SPECULAR_EXPONENT">
    <summary>The exponent for the specular term in the Phong lighting equation. A larger value corresponds to a more reflective surface. This value is unitless and must be between 1.0 and 128.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_SPECULAR_CONSTANT">
    <summary>The ratio of specular reflection to the incoming light. The value is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_SURFACE_SCALE">
    <summary>The scale factor in the Z direction for generating a height map. The value is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_COLOR">
    <summary>The color of the incoming light. This property is exposed as a Vector 3 – (R, G, B) and used to compute LR, LG, LB.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.

The default value is {1.0f, 1.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_KERNEL_UNIT_LENGTH">
    <summary>The size of an element in the Sobel kernel used to generate the surface normal in the X and Y direction. This property maps to the dx and dy values in the Sobel gradient.
            This property is a D2D1_VECTOR_2F (Kernel Unit Length X, Kernel Unit Length Y) and is defined in (DIPs/Kernel Unit).
            The effect uses bilinear interpolation to scale the bitmap to match size of kernel elements.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is {1.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_PROP::D2D1_SPOTSPECULAR_PROP_SCALE_MODE">
    <summary>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_spotspecular_scale_mode">D2D1_SPOTSPECULAR_SCALE_MODE</a>.

The default value is D2D1_SPOTSPECULAR_SCALE_MODE_LINEAR.</summary>
  </comment>
  <comment id="IDWriteFontDownloadQueue::IsEmpty">
    <summary>
      <para>Determines whether the download queue is empty. Note that the queue does not include requests that are already being downloaded. Calling BeginDownloadclears the queue.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontdownloadqueue-isempty" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontDownloadListener">
    <summary>
      <para>Application-defined callback interface that receives notifications from the font download queue (IDWriteFontDownloadQueue interface).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontdownloadlistener" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ImageBrush::SetExtendModeY">
    <summary>
      <para>Sets the extend mode on the y-axis.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-setextendmodey" /></para>
      <param name="extendModeY">The extend mode on the y-axis of the image.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::GetImageWorldBounds">
    <summary>
      <para>Gets the bounds of an image with the world transform of the context applied.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-getimageworldbounds" /></para>
      <param name="image">The image whose bounds will be calculated.</param>
      <param name="worldBounds">When this method returns, contains a pointer to the bounds of the image in device independent pixels (DIPs).</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::RemoveAttribute">
    <summary>
      <para>Removes the attribute from this element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-removeattribute" /></para>
      <param name="name">The name of the attribute to remove.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::GetFontFamilyNameLength">
    <summary>
      <para>Gets the length of the font family name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getfontfamilynamelength" /></para>
    </summary>
  </comment>
  <comment id="IDWriteColorGlyphRunEnumerator::MoveNext">
    <summary>
      <para>Move to the next glyph run in the enumerator.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritecolorglyphrunenumerator-movenext" /></para>
      <param name="hasRun">Returns <b>TRUE</b> if there is a next glyph run.</param>
    </summary>
  </comment>
  <comment id="ID2D1GradientMesh::GetPatches">
    <summary>
      <para>Returns a subset of the patches that make up this gradient mesh.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gradientmesh-getpatches" /></para>
      <param name="startIndex">Index of the first patch to return.</param>
      <param name="patches">A pointer to the array to be filled with the patch data.</param>
      <param name="patchesCount">The number of patches to be returned.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory3::GetFontDownloadQueue">
    <summary>
      <para>Gets the font download queue associated with this factory object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefactory3-getfontdownloadqueue" /></para>
      <param name="fontDownloadQueue">Receives a pointer to the font download queue interface.</param>
    </summary>
  </comment>
  <comment id="ID2D1RadialGradientBrush::GetCenter">
    <summary>
      <para>Retrieves the center of the gradient ellipse.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-getcenter" /></para>
    </summary>
  </comment>
  <comment id="ID2D1GradientStopCollection1::GetGradientStops1">
    <summary>
      <para>Copies the gradient stops from the collection into memory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gradientstopcollection1-getgradientstops1" /></para>
      <param name="gradientStops">When this method returns, contains a pointer to a one-dimensional array of <a href="https://docs.microsoft.com/windows/desktop/api/d2d1/ns-d2d1-d2d1_gradient_stop">D2D1_GRADIENT_STOP</a> structures.</param>
      <param name="gradientStopsCount">The number of gradient stops to copy.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device::GetMaximumTextureMemory">
    <summary>
      <para>Sets the maximum amount of texture memory Direct2D accumulates before it purges the image caches and cached texture allocations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1device-getmaximumtexturememory" /></para>
    </summary>
  </comment>
  <comment id="IDWriteRenderingParams1">
    <summary>
      <para>Represents text rendering settings for glyph rasterization and filtering.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nn-dwrite_1-idwriterenderingparams1" /></para>
    </summary>
  </comment>
  <comment id="WICMapGuidToShortName">
    <summary>
      <para>Obtains the short name associated with a given GUID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-wicmapguidtoshortname" /></para>
      <param name="guid">The GUID to retrieve the short name for.</param>
      <param name="cchName">The size of the <i>wzName</i> buffer.</param>
      <param name="wzName">A pointer that receives the short name associated with the GUID.</param>
      <param name="pcchActual">The actual size needed to retrieve the entire short name associated with the GUID.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgStrokeDashArray::RemoveDashesAtEnd">
    <summary>
      <para>Removes dashes from the end of the array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgstrokedasharray-removedashesatend" /></para>
      <param name="dashesCount">Specifies how many dashes to remove.</param>
    </summary>
  </comment>
  <comment id="WICJpegLuminanceProperties">
    <summary>
      <para>Specifies the JPEG luminance table property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicjpegluminanceproperties" /></para>
    </summary>
  </comment>
  <comment id="WICJpegLuminanceProperties::WICJpegLuminanceTable">
    <summary>[VT_UI2|VT_VECTOR] Indicates the metadata property is a luminance table.</summary>
  </comment>
  <comment id="ID2D1GdiInteropRenderTarget">
    <summary>
      <para>Provides access to an device context that can accept GDI drawing commands.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1gdiinteroprendertarget" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Effect::GetInputCount">
    <summary>
      <para>Gets the number of inputs to the effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1effect-getinputcount" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalysisSink::SetLineBreakpoints">
    <summary>
      <para>Sets line-break opportunities for each character, starting from the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalysissink-setlinebreakpoints" /></para>
      <param name="textPosition">The starting text position from which to report.</param>
      <param name="textLength">The number of UTF16 units of the reported range.</param>
      <param name="lineBreakpoints">A pointer to a structure that contains breaking conditions set for each character from the starting position to the end of the specified range.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device::CreateDeviceContext">
    <summary>
      <para>Creates a new device context from a Direct2D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1device-createdevicecontext" /></para>
      <param name="options">The options to be applied to the created device context.</param>
      <param name="deviceContext">When this method returns, contains the address of a pointer to the new device context.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetFontSize">
    <summary>
      <para>Gets the font em height of the text at the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getfontsize" /></para>
      <param name="currentPosition">The position of the text to inspect.</param>
      <param name="fontSize">When this method returns, contains the size of the font in ems  of the text at the specified position.</param>
      <param name="textRange">The range of text that has the same  formatting as the text at the position specified by <i>currentPosition</i>.  This means the run has the exact  formatting as the position specified, including but not limited to the font size.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontDownloadListener::DownloadCompleted">
    <summary>
      <para>The DownloadCompleted method is called back on an arbitrary thread when a download operation ends.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontdownloadlistener-downloadcompleted" /></para>
      <param name="downloadQueue">Pointer to the download queue interface on which     
          the BeginDownload method was called.</param>
      <param name="context">Optional context object that was passed to BeginDownload.    
          AddRef is called on the context object by BeginDownload and Release is called  
          after the DownloadCompleted method returns.</param>
      <param name="downloadResult">Result of the download operation.</param>
    </summary>
  </comment>
  <comment id="D2D1_RENDERING_PRIORITY">
    <summary>
      <para>The rendering priority affects the extent to which Direct2D will throttle its rendering workload.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/ne-d2d1_2-d2d1_rendering_priority" /></para>
    </summary>
  </comment>
  <comment id="D2D1_RENDERING_PRIORITY::D2D1_RENDERING_PRIORITY_NORMAL">
    <summary>No change in rendering workload priority.</summary>
  </comment>
  <comment id="D2D1_RENDERING_PRIORITY::D2D1_RENDERING_PRIORITY_LOW">
    <summary>The device and its associated device contexts are given a lower priority than others.</summary>
  </comment>
  <comment id="IWICBitmapFrameEncode::WriteSource">
    <summary>
      <para>Encodes a bitmap source.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-writesource" /></para>
      <param name="iBitmapSource">The bitmap source to encode.</param>
      <param name="prc">The size rectangle of the bitmap source.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontCollection1::GetFontSet">
    <summary>
      <para>Gets the underlying font set used by this collection.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontcollection1-getfontset" /></para>
      <param name="fontSet">Returns the font set used by the collection.</param>
    </summary>
  </comment>
  <comment id="WICWebpAnmfProperties">
    <summary>
      <para>Specifies the animation frame properties of a WebP image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicwebpanmfproperties" /></para>
    </summary>
  </comment>
  <comment id="WICWebpAnmfProperties::WICWebpAnmfFrameDuration">
    <summary>The time to wait before displaying the next frame, in milliseconds.</summary>
  </comment>
  <comment id="IWICBitmapDecoder::GetMetadataQueryReader">
    <summary>
      <para>Retrieves the metadata query reader from the decoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getmetadataqueryreader" /></para>
      <param name="iMetadataQueryReader">Receives a pointer to the decoder's <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataqueryreader">IWICMetadataQueryReader</a>.</param>
    </summary>
  </comment>
  <comment id="D2D1_DRAW_TEXT_OPTIONS">
    <summary>
      <para>Specifies whether text snapping is suppressed or clipping to the layout rectangle is enabled. This enumeration allows a bitwise combination of its member values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_draw_text_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DRAW_TEXT_OPTIONS::D2D1_DRAW_TEXT_OPTIONS_NO_SNAP">
    <summary>Text is not vertically snapped to pixel boundaries. This setting is recommended for text that is being animated.</summary>
  </comment>
  <comment id="D2D1_DRAW_TEXT_OPTIONS::D2D1_DRAW_TEXT_OPTIONS_CLIP">
    <summary>Text is clipped to the layout rectangle.</summary>
  </comment>
  <comment id="D2D1_DRAW_TEXT_OPTIONS::D2D1_DRAW_TEXT_OPTIONS_ENABLE_COLOR_FONT">
    <summary>In Windows 8.1 and later, text is rendered using color versions of glyphs, if defined by the font.</summary>
  </comment>
  <comment id="D2D1_DRAW_TEXT_OPTIONS::D2D1_DRAW_TEXT_OPTIONS_DISABLE_COLOR_BITMAP_SNAPPING">
    <summary>Bitmap origins of color glyph bitmaps are not snapped.</summary>
  </comment>
  <comment id="D2D1_DRAW_TEXT_OPTIONS::D2D1_DRAW_TEXT_OPTIONS_NONE">
    <summary>Text is vertically snapped to pixel boundaries and is not clipped to the layout rectangle.</summary>
  </comment>
  <comment id="ID2D1Ink::GetBounds">
    <summary>
      <para>Retrieve the bounds of the geometry, with an optional applied transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1ink-getbounds" /></para>
      <param name="inkStyle">The ink style to be used in determining the bounds of this ink object.</param>
      <param name="worldTransform">The world transform to be used in determining the bounds of this ink object.</param>
      <param name="bounds">When this method returns, contains the bounds of this ink object.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace">
    <summary>
      <para>This interface exposes various font data such as metrics, names, and glyph outlines. It contains font face type, appropriate file references, and face identification data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritefontface" /></para>
    </summary>
  </comment>
  <comment id="ID2D1GdiMetafile::GetBounds">
    <summary>
      <para>Gets the bounds of the metafile, in device-independent pixels (DIPs), as reported in the metafile’s header.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gdimetafile-getbounds" /></para>
      <param name="bounds">The bounds, in DIPs, of the metafile.</param>
    </summary>
  </comment>
  <comment id="D2D1_BITMAP_BRUSH_PROPERTIES">
    <summary>
      <para>Describes the extend modes and the interpolation mode of an ID2D1BitmapBrush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_bitmap_brush_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BITMAP_BRUSH_PROPERTIES::extendModeX">
    <summary>A value that describes how the brush horizontally tiles those areas that extend past its bitmap.</summary>
  </comment>
  <comment id="D2D1_BITMAP_BRUSH_PROPERTIES::extendModeY">
    <summary>A value that describes how the brush vertically tiles those areas that extend past its bitmap.</summary>
  </comment>
  <comment id="D2D1_BITMAP_BRUSH_PROPERTIES::interpolationMode">
    <summary>A value that specifies how the bitmap is interpolated when it is scaled or rotated.</summary>
  </comment>
  <comment id="IDWriteFontDownloadQueue::RemoveListener">
    <summary>
      <para>Unregisters a notification handler that was previously registered using AddListener.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontdownloadqueue-removelistener" /></para>
      <param name="token">Token value previously returned by <a href="https://docs.microsoft.com/windows/win32/api/dwrite_3/nf-dwrite_3-idwritefontdownloadqueue-addlistener">AddListener</a>.</param>
    </summary>
  </comment>
  <comment id="ID2D1GradientStopCollection1::GetBufferPrecision">
    <summary>
      <para>Gets the precision of the gradient buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gradientstopcollection1-getbufferprecision" /></para>
    </summary>
  </comment>
  <comment id="WICImageParameters">
    <summary>
      <para>This defines parameters that you can use to override the default parameters normally used when encoding an image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicimageparameters" /></para>
    </summary>
  </comment>
  <comment id="WICImageParameters::PixelFormat">
    <summary>The pixel format to which the image is processed before it is written to the encoder.</summary>
  </comment>
  <comment id="WICImageParameters::DpiX">
    <summary>The DPI in the x dimension.</summary>
  </comment>
  <comment id="WICImageParameters::DpiY">
    <summary>The DPI in the y dimension.</summary>
  </comment>
  <comment id="WICImageParameters::Top">
    <summary>The top corner in pixels of the image space to be encoded to the destination.</summary>
  </comment>
  <comment id="WICImageParameters::Left">
    <summary>The left corner in pixels of the image space to be encoded to the destination.</summary>
  </comment>
  <comment id="WICImageParameters::PixelWidth">
    <summary>The width in pixels of the part of the image to write.</summary>
  </comment>
  <comment id="WICImageParameters::PixelHeight">
    <summary>The height in pixels of the part of the image to write.</summary>
  </comment>
  <comment id="WICBitmapPlane">
    <summary>
      <para>Specifies the pixel format, buffer, stride and size of a component plane for a planar pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicbitmapplane" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapPlane::Format">
    <summary>Describes the pixel format of the plane.</summary>
  </comment>
  <comment id="WICBitmapPlane::pbBuffer">
    <summary>Pointer to the buffer that holds the plane’s pixel components.</summary>
  </comment>
  <comment id="WICBitmapPlane::cbStride">
    <summary>The stride of the buffer ponted to by <i>pbData</i>.  Stride indicates the total number of bytes to go from the beginning of one scanline to the beginning of the next scanline.</summary>
  </comment>
  <comment id="WICBitmapPlane::cbBufferSize">
    <summary>The total size of the buffer pointed to by <i>pbBuffer</i>.</summary>
  </comment>
  <comment id="ID2D1GdiInteropRenderTarget::ReleaseDC">
    <summary>
      <para>Indicates that drawing with the device context retrieved using the GetDC method is finished.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1gdiinteroprendertarget-releasedc" /></para>
      <param name="update">The modified region of the device context, or <b>NULL</b> to specify the entire render target.</param>
    </summary>
  </comment>
  <comment id="D2D1_CAP_STYLE">
    <summary>
      <para>Describes the shape at the end of a line or segment.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_cap_style" /></para>
    </summary>
  </comment>
  <comment id="D2D1_CAP_STYLE::D2D1_CAP_STYLE_FLAT">
    <summary>A cap that does not extend past the last point of the line. Comparable to cap used for objects other than lines.</summary>
  </comment>
  <comment id="D2D1_CAP_STYLE::D2D1_CAP_STYLE_SQUARE">
    <summary>Half of a square that has a length equal to the line thickness.</summary>
  </comment>
  <comment id="D2D1_CAP_STYLE::D2D1_CAP_STYLE_ROUND">
    <summary>A semicircle that has a diameter equal to the line thickness.</summary>
  </comment>
  <comment id="D2D1_CAP_STYLE::D2D1_CAP_STYLE_TRIANGLE">
    <summary>An isosceles right triangle whose hypotenuse is equal in length to the thickness of the line.</summary>
  </comment>
  <comment id="IDWriteFontFace1::GetDesignGlyphAdvances">
    <summary>
      <para>Retrieves the advances in design units for a sequences of glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefontface1-getdesignglyphadvances" /></para>
      <param name="glyphCount">The number of glyphs to retrieve advances for.</param>
      <param name="glyphIndices">An array of glyph id's to retrieve advances for.</param>
      <param name="glyphAdvances">The returned advances in font design units for
    each glyph.</param>
      <param name="isSideways">Retrieve the glyph's vertical advance height
    rather than horizontal advance widths.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::SetRotation">
    <summary>
      <para>Sets the desired rotation angle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setrotation" /></para>
      <param name="rotation">The desired rotation angle.</param>
    </summary>
  </comment>
  <comment id="ID2D1GdiMetafile1::GetDpi">
    <summary>
      <para>Gets the DPI reported by the metafile.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gdimetafile1-getdpi" /></para>
      <param name="dpiX">Receives the horizontal DPI reported by the metafile.</param>
      <param name="dpiY">Receives the vertical DPI reported by the metafile.</param>
    </summary>
  </comment>
  <comment id="IWICImageEncoder::WriteFrame">
    <summary>
      <para>Encodes the image to the frame given by the IWICBitmapFrameEncode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimageencoder-writeframe" /></para>
      <param name="image">The Direct2D image that will be encoded.</param>
      <param name="frameEncode">The frame encoder to which the image is written.</param>
      <param name="imageParameters">Additional parameters to control encoding.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory1::CreateCustomRenderingParams">
    <summary>
      <para>Creates a rendering parameters object with the specified properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefactory1-createcustomrenderingparams" /></para>
      <param name="gamma">The gamma level to be set for the new rendering parameters object.</param>
      <param name="enhancedContrast">The enhanced contrast level to be set for the new rendering parameters object.</param>
      <param name="enhancedContrastGrayscale">The amount of contrast enhancement to use for grayscale antialiasing, zero or greater.</param>
      <param name="clearTypeLevel">The ClearType level to be set for the new rendering parameters object.</param>
      <param name="pixelGeometry">Represents the internal structure of a device pixel (that is, the physical arrangement of red, green, and blue color components) that is assumed for purposes of rendering text.</param>
      <param name="renderingMode">A value that represents the method (for example, ClearType natural quality) for rendering glyphs.</param>
      <param name="renderingParams">When this method returns, contains an address of a pointer to the newly created rendering parameters object.</param>
    </summary>
  </comment>
  <comment id="IDWriteFont::GetInformationalStrings">
    <summary>
      <para>Gets a localized strings collection containing the specified informational strings, indexed by locale name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefont-getinformationalstrings" /></para>
      <param name="informationalStringID">A value that identifies the  informational string to get. For example, <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_informational_string_id">DWRITE_INFORMATIONAL_STRING_DESCRIPTION</a> specifies a string that contains a description of the font.</param>
      <param name="informationalStrings">When this method returns, contains an address of a pointer to the newly created localized strings object.</param>
      <param name="exists">When this method returns, <b>TRUE</b> if the font contains the specified string ID; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="ID2D1LinearGradientBrush">
    <summary>
      <para>Paints an area with a linear gradient.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1lineargradientbrush" /></para>
    </summary>
  </comment>
  <comment id="ID2D1StrokeStyle::GetDashCap">
    <summary>
      <para>Gets a value that specifies how the ends of each dash are drawn.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getdashcap" /></para>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::QueryRawCapabilitiesInfo">
    <summary>
      <para>Retrieves information about which capabilities are supported for a raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-queryrawcapabilitiesinfo" /></para>
      <param name="info">A pointer that receives <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ns-wincodec-wicrawcapabilitiesinfo">WICRawCapabilitiesInfo</a> that provides the capabilities supported by the raw image.</param>
    </summary>
  </comment>
  <comment id="IDWriteNumberSubstitution">
    <summary>
      <para>Holds the appropriate digits and numeric punctuation for a specified locale.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritenumbersubstitution" /></para>
    </summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS1">
    <summary>
      <para>Contains the content bounds, mask information, opacity settings, and other options for a layer resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_layer_parameters1" /></para>
    </summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS1::contentBounds">
    <summary>The content bounds of the layer. Content outside these bounds is not guaranteed to render.</summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS1::geometricMask">
    <summary>The geometric mask specifies the area of the layer that is composited into the render target.</summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS1::maskAntialiasMode">
    <summary>A value that specifies the antialiasing mode for the geometricMask.</summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS1::maskTransform">
    <summary>A value that specifies the transform that is applied to the geometric mask when composing the layer.</summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS1::opacity">
    <summary>An opacity value that is applied uniformly to all resources in the layer when compositing to the target.</summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS1::opacityBrush">
    <summary>A brush that is used to modify the opacity of the layer. The brush 
is mapped to the layer, and the alpha channel of each mapped brush pixel is multiplied against the corresponding layer pixel.</summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS1::layerOptions">
    <summary>Additional options for the layer creation.</summary>
  </comment>
  <comment id="ID2D1SvgElement::AppendChild">
    <summary>
      <para>Appends an element to the list of children.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-appendchild" /></para>
      <param name="newChild">The element to append.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalysisSource::GetTextAtPosition">
    <summary>
      <para>Gets a block of text starting at the specified text position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalysissource-gettextatposition" /></para>
      <param name="textPosition">The first position of the piece to obtain. All
    positions are in <b>UTF16</b> code units, not whole characters, which
         matters when supplementary characters are used.</param>
      <param name="textString">When this method returns, contains an address of  the block of text as an array of characters to be retrieved from the text analysis.</param>
      <param name="textLength">When this method returns, contains the number of <b>UTF16</b> units of the retrieved chunk.
         The returned length is not the length of the block, but the length     remaining in the block, from the specified position until its end.
         For example, querying for a position that is 75 positions into a 100-position block would return 25.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataBlockReader">
    <summary>
      <para>Exposes methods that provide access to all of the codec's top level metadata blocks.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicmetadatablockreader" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::GetFontWeight">
    <summary>
      <para>Gets the font weight of the text.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getfontweight" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Factory::CreatePathGeometry">
    <summary>
      <para>Creates an empty ID2D1PathGeometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1factory-createpathgeometry" /></para>
      <param name="pathGeometry">When this method returns, contains the address to a pointer to the path geometry created by this method.</param>
    </summary>
  </comment>
  <comment id="ID2D1DrawTransform">
    <summary>
      <para>A specialized implementation of the Shantzis calculations to a transform implemented on the GPU.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1drawtransform" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::GetPixelFormat">
    <summary>
      <para>Retrieves the pixel format and alpha mode of the render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-getpixelformat" /></para>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::FillOpacityMask">
    <summary>
      <para>Fills an opacity mask on the command sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-fillopacitymask" /></para>
      <param name="opacityMask">The bitmap whose alpha channel will be sampled to define the opacity mask.</param>
      <param name="brush">The brush with which to fill the mask.</param>
      <param name="destinationRectangle">The destination rectangle in which to fill the mask. If not specified, this is the origin.</param>
      <param name="sourceRectangle">The source rectangle within the opacity mask. If not specified, this is the entire mask.</param>
    </summary>
  </comment>
  <comment id="ID2D1BitmapRenderTarget">
    <summary>
      <para>Renders to an intermediate texture created by the CreateCompatibleRenderTarget method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1bitmaprendertarget" /></para>
    </summary>
  </comment>
  <comment id="IDWriteRemoteFontFileStream::GetLocality">
    <summary>
      <para>Gets the current locality of the file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwriteremotefontfilestream-getlocality" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COMBINE_MODE">
    <summary>
      <para>Specifies the different methods by which two geometries can be combined.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_combine_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COMBINE_MODE::D2D1_COMBINE_MODE_UNION">
    <summary>The two regions are combined by taking the union of both. Given two geometries, <i>A</i> and <i>B</i>, the resulting geometry is geometry <i>A</i> + geometry <i>B</i>.</summary>
  </comment>
  <comment id="D2D1_COMBINE_MODE::D2D1_COMBINE_MODE_INTERSECT">
    <summary>The two regions are combined by taking their intersection. The new area consists of the overlapping region between the two geometries.</summary>
  </comment>
  <comment id="D2D1_COMBINE_MODE::D2D1_COMBINE_MODE_XOR">
    <summary>The two regions are combined by taking the area that exists in the first region but not the second and the area that exists in the second region but not the first. Given two geometries, <i>A</i> and <i>B</i>, the new region consists of (<i>A</i>-<i>B</i>) + (<i>B</i>-<i>A</i>).</summary>
  </comment>
  <comment id="D2D1_COMBINE_MODE::D2D1_COMBINE_MODE_EXCLUDE">
    <summary>The second region is excluded from the first. Given two geometries, <i>A</i> and <i>B</i>, the area of geometry <i>B</i> is removed from the area of geometry <i>A</i>, producing a region that is <i>A</i>-<i>B</i>.</summary>
  </comment>
  <comment id="ID2D1EffectContext::CreateBlendTransform">
    <summary>
      <para>This creates a blend transform that can be inserted into a transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createblendtransform" /></para>
      <param name="numInputs">The number of inputs to the blend transform.</param>
      <param name="blendDescription">Describes the blend transform that is to be created.</param>
      <param name="transform">The returned blend transform.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontDownloadQueue::BeginDownload">
    <summary>
      <para>Begins an asynchronous download operation. The download operation executes in the background until it completes or is cancelled by a CancelDownload call.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontdownloadqueue-begindownload" /></para>
      <param name="context">Optional context object that is passed back to the     
          download notification handler's DownloadCompleted method. If the context object  
          implements IDWriteFontDownloadListener, its DownloadCompleted will be called    
          when done.</param>
    </summary>
  </comment>
  <comment id="ID2D1Brush::GetOpacity">
    <summary>
      <para>Gets the degree of opacity of this brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1brush-getopacity" /></para>
    </summary>
  </comment>
  <comment id="D2D1_STROKE_TRANSFORM_TYPE">
    <summary>
      <para>Defines how the world transform, dots per inch (dpi), and stroke width affect the shape of the pen used to stroke a primitive.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_stroke_transform_type" /></para>
    </summary>
  </comment>
  <comment id="D2D1_STROKE_TRANSFORM_TYPE::D2D1_STROKE_TRANSFORM_TYPE_NORMAL">
    <summary>The stroke respects the currently set world transform, the dpi, and the stroke width.</summary>
  </comment>
  <comment id="D2D1_STROKE_TRANSFORM_TYPE::D2D1_STROKE_TRANSFORM_TYPE_FIXED">
    <summary>The stroke does not respect the world transform but it does respect the dpi and stroke width.</summary>
  </comment>
  <comment id="D2D1_STROKE_TRANSFORM_TYPE::D2D1_STROKE_TRANSFORM_TYPE_HAIRLINE">
    <summary>The stroke is forced to 1 pixel wide (in device space) and does not respect the world transform, the dpi, or the stroke width.</summary>
  </comment>
  <comment id="IWICDevelopRaw::SetDestinationColorContext">
    <summary>
      <para>Sets the destination color context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setdestinationcolorcontext" /></para>
      <param name="colorContext">The destination color context.</param>
    </summary>
  </comment>
  <comment id="WICJpegScanHeader">
    <summary>
      <para>Represents a JPEG frame header.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicjpegscanheader" /></para>
    </summary>
  </comment>
  <comment id="WICJpegScanHeader::cComponents">
    <summary>The number of components in the scan.</summary>
  </comment>
  <comment id="WICJpegScanHeader::RestartInterval">
    <summary>The interval of reset markers within the scan.</summary>
  </comment>
  <comment id="WICJpegScanHeader::ComponentSelectors">
    <summary>The component identifiers.</summary>
  </comment>
  <comment id="WICJpegScanHeader::HuffmanTableIndices">
    <summary>The format of the quantization table indices. Use one of the following constants, described in <a href="https://docs.microsoft.com/windows/desktop/wic/iwicjpegframedecode-constants">IWICJpegFrameDecode Constants</a>.

<ul>
<li>WIC_JPEG_HUFFMAN_BASELINE_ONE</li>
<li>WIC_JPEG_HUFFMAN_BASELINE_THREE </li>
</ul></summary>
  </comment>
  <comment id="WICJpegScanHeader::StartSpectralSelection">
    <summary>The start of the spectral selection.</summary>
  </comment>
  <comment id="WICJpegScanHeader::EndSpectralSelection">
    <summary>The end of the spectral selection.</summary>
  </comment>
  <comment id="WICJpegScanHeader::SuccessiveApproximationHigh">
    <summary>The successive approximation high.</summary>
  </comment>
  <comment id="WICJpegScanHeader::SuccessiveApproximationLow">
    <summary>The successive approximation low.</summary>
  </comment>
  <comment id="IDWriteTextLayout::GetLineMetrics">
    <summary>
      <para>Retrieves the information about each individual text line of the text string.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getlinemetrics" /></para>
      <param name="lineMetrics">When this method returns, contains a pointer to an array of structures containing various calculated length values of individual text lines.</param>
      <param name="maxLineCount">The maximum size of the <i>lineMetrics</i> array.</param>
      <param name="actualLineCount">When this method returns, contains the actual size of the <i>lineMetrics</i>array that is needed.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory::UnregisterFontCollectionLoader">
    <summary>
      <para>Unregisters a custom font collection loader that was previously registered using RegisterFontCollectionLoader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-unregisterfontcollectionloader" /></para>
      <param name="fontCollectionLoader">Pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefontcollectionloader">IDWriteFontCollectionLoader</a> object to be unregistered.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPaint::GetIdLength">
    <summary>
      <para>Gets the string length of the element id which acts as the paint server. This id is used if the paint type is D2D1_SVG_PAINT_TYPE_URI.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-getidlength" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontSet">
    <summary>
      <para>Represents a font set.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontset" /></para>
    </summary>
  </comment>
  <comment id="D2D1_MAPPED_RECT">
    <summary>
      <para>Describes mapped memory from the ID2D1Bitmap1::Map API.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_mapped_rect" /></para>
    </summary>
  </comment>
  <comment id="D2D1_MAPPED_RECT::pitch">
    <summary>The size in bytes of an individual scanline in the bitmap.</summary>
  </comment>
  <comment id="D2D1_MAPPED_RECT::bits">
    <summary>The data inside the bitmap.</summary>
  </comment>
  <comment id="IDWriteFontFallback::MapCharacters">
    <summary>
      <para>Determines an appropriate font to use to render the beginning range of text.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefontfallback-mapcharacters" /></para>
      <param name="analysisSource">The text source implementation holds the text and locale.</param>
      <param name="textPosition">Starting position to analyze.</param>
      <param name="textLength">Length of the text to analyze.</param>
      <param name="baseFontCollection">Default font collection to use.</param>
      <param name="baseFamilyName">Family name of the base font. If you pass null, no matching     will be done against the family.</param>
      <param name="baseWeight">The desired weight.</param>
      <param name="baseStyle">The desired style.</param>
      <param name="baseStretch">The desired stretch.</param>
      <param name="mappedLength">Length of text mapped to the mapped font. This will always be less than     or equal to the text length and greater than zero (if the text length is non-zero) so     the caller advances at least one character.</param>
      <param name="mappedFont">The font that should be used to render the first <i>mappedLength</i>     characters of the text. If it returns NULL, that means that no font can render the     text, and <i>mappedLength</i> is the number of characters to skip (rendered with a missing
         glyph).</param>
      <param name="scale">Scale factor to multiply the em size of the returned font by.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalysisSource1::GetVerticalGlyphOrientation">
    <summary>
      <para>Used by the text analyzer to obtain the desired glyph orientation and resolved bidi level.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextanalysissource1-getverticalglyphorientation" /></para>
      <param name="textPosition">The text position.</param>
      <param name="textLength">A pointer to the text length.</param>
      <param name="glyphOrientation">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ne-dwrite_1-dwrite_vertical_glyph_orientation">DWRITE_VERTICAL_GLYPH_ORIENTATION</a>-typed value that specifies the desired kind of glyph orientation for the text.</param>
      <param name="bidiLevel">A pointer to the resolved bidi level.</param>
    </summary>
  </comment>
  <comment id="D2D1_LOOKUPTABLE3D_PROP">
    <summary>
      <para>Identifiers for the properties of the 3D Lookup Table effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_lookuptable3d_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_LOOKUPTABLE3D_PROP::D2D1_LOOKUPTABLE3D_PROP_LUT">
    <summary>The D2D1_LOOKUPTABLE3D_PROP_LUT property is a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1lookuptable3d">ID2D1LookupTable3D</a> object.  The default value is null.</summary>
  </comment>
  <comment id="D2D1_LOOKUPTABLE3D_PROP::D2D1_LOOKUPTABLE3D_PROP_ALPHA_MODE">
    <summary>The D2D1_LOOKUPTABLE3D_PROP_ALPHA_MODE property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ne-dcommon-d2d1_alpha_mode">D2D1_ALPHA_MODE</a> value indicating the alpha mode of the input file.
          See the About Alpha Modes section of the <a href="https://docs.microsoft.com/windows/desktop/Direct2D/supported-pixel-formats-and-alpha-modes">Supported Pixel Formats and Alpha Modes</a> topic for additional information.</summary>
  </comment>
  <comment id="ID2D1DeviceContext::GetEffectRequiredInputRectangles">
    <summary>
      <para>Returns the input rectangles that are required to be supplied by the caller to produce the given output rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-geteffectrequiredinputrectangles" /></para>
      <param name="renderEffect">The image whose output is being rendered.</param>
      <param name="renderImageRectangle">The portion of the output image whose inputs are being inspected.</param>
      <param name="inputDescriptions">A list of the inputs whos rectangles are being queried.</param>
      <param name="requiredInputRects">The input rectangles returned to the caller.</param>
      <param name="inputCount">The number of inputs.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::GetWordWrapping">
    <summary>
      <para>Gets the word wrapping option.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getwordwrapping" /></para>
    </summary>
  </comment>
  <comment id="WICRawRenderMode">
    <summary>
      <para>Specifies the render intent of the next CopyPixels call.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicrawrendermode" /></para>
    </summary>
  </comment>
  <comment id="WICRawRenderMode::WICRawRenderModeDraft">
    <summary>Use speed priority mode.</summary>
  </comment>
  <comment id="WICRawRenderMode::WICRawRenderModeNormal">
    <summary>Use normal priority mode. Balance of speed and quality.</summary>
  </comment>
  <comment id="WICRawRenderMode::WICRawRenderModeBestQuality">
    <summary>Use best quality mode.</summary>
  </comment>
  <comment id="ID2D1SvgDocument">
    <summary>
      <para>Represents an SVG document.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nn-d2d1svg-id2d1svgdocument" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetFontCollection">
    <summary>
      <para>Gets the font collection associated with the text at the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getfontcollection" /></para>
      <param name="currentPosition">The position of the text to inspect.</param>
      <param name="fontCollection">Contains an address of a  pointer to the current font collection.</param>
      <param name="textRange">The range of text that has the same  formatting as the text at the position specified by <i>currentPosition</i>.  This means the run has the exact  formatting as the position specified, including but not limited to the underline.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext2::DrawInk">
    <summary>
      <para>Renders the given ink object using the given brush and ink style.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext2-drawink" /></para>
      <param name="ink">The ink object to be rendered.</param>
      <param name="brush">The brush with which to render the ink object.</param>
      <param name="inkStyle">The ink style to use when rendering the ink object.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalysisSink1">
    <summary>
      <para>The interface you implement to receive the output of the text analyzers.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nn-dwrite_1-idwritetextanalysissink1" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFaceReference::GetFontFaceIndex">
    <summary>
      <para>Obtains the zero-based index of the font face in its font file or files. If the font files contain a single face, the return value is zero.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfacereference-getfontfaceindex" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Factory1::RegisterEffectFromStream">
    <summary>
      <para>Registers an effect within the factory instance with the property XML specified as a stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-registereffectfromstream" /></para>
      <param name="classId">The identifier of the effect to be registered.</param>
      <param name="propertyXml">A list of the effect properties, types, and metadata.</param>
      <param name="bindings">An array of properties and methods.

This binds a property by name to a particular method implemented by the effect author to handle the property. 
              The name must be found in the corresponding <i>propertyXml</i>.</param>
      <param name="bindingsCount">The number of bindings in the binding array.</param>
      <param name="effectFactory">The static factory that is used to create the corresponding effect.</param>
    </summary>
  </comment>
  <comment id="IWICProgressiveLevelControl::SetCurrentLevel">
    <summary>
      <para>Specifies the level to retrieve on the next call to CopyPixels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicprogressivelevelcontrol-setcurrentlevel" /></para>
      <param name="nLevel">Specifies which level to return next. If greater than the total number of levels supported, an error will be returned.</param>
    </summary>
  </comment>
  <comment id="IWICPixelFormatInfo">
    <summary>
      <para>Exposes methods that provide information about a pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicpixelformatinfo" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Transform::MapOutputRectToInputRects">
    <summary>
      <para>Allows a transform to state how it would map a rectangle requested on its output to a set of sample rectangles on its input.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transform-mapoutputrecttoinputrects" /></para>
      <param name="outputRect">The output rectangle from which the inputs must be mapped.</param>
      <param name="inputRects">The corresponding set of inputs. The inputs will directly correspond to the transform inputs.</param>
      <param name="inputRectsCount">The number of inputs specified. <a href="https://docs.microsoft.com/windows/desktop/Direct2D/direct2d-portal">Direct2D</a> guarantees that this is equal to the number of inputs specified on the transform.</param>
    </summary>
  </comment>
  <comment id="ID2D1DCRenderTarget::BindDC">
    <summary>
      <para>Binds the render target to the device context to which it issues drawing commands.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1dcrendertarget-binddc" /></para>
      <param name="hDC">The device context to which the render target issues drawing commands.</param>
      <param name="subRect">The dimensions of the handle to a device context (HDC) to which the render target is bound.</param>
    </summary>
  </comment>
  <comment id="IDWriteRemoteFontFileStream">
    <summary>
      <para>Represents a font file stream, parts of which may be non-local.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwriteremotefontfilestream" /></para>
    </summary>
  </comment>
  <comment id="IWICMetadataReader::GetEnumerator">
    <summary>
      <para>Gets an enumerator of all the metadata items.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareader-getenumerator" /></para>
      <param name="iEnumMetadata">Pointer that receives a pointer to the metadata enumerator.</param>
    </summary>
  </comment>
  <comment id="IWICComponentInfo::GetAuthor">
    <summary>
      <para>Retrieves the name of component's author.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getauthor" /></para>
      <param name="cchAuthor">The size of the <i>wzAuthor</i> buffer.</param>
      <param name="wzAuthor">A pointer that receives the name of the component's author.
               The locale of the string depends on the value that the codec wrote to the registry at install time. For built-in components, these strings are always in English.</param>
      <param name="pcchActual">A pointer that receives the actual length of the component's authors name. The author name is optional; if an author name is not specified by the component, the length returned is 0.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapDecoder::GetColorContexts">
    <summary>
      <para>Retrieves the IWICColorContext objects of the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getcolorcontexts" /></para>
      <param name="cCount">The number of color contexts to retrieve.

This value must be the size of, or smaller than, the size available to <i>ppIColorContexts</i>.</param>
      <param name="iColorContexts">A pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>.</param>
      <param name="pcActualCount">A pointer that receives the number of color contexts contained in the image.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::CreateEffect">
    <summary>
      <para>Creates an effect for the specified class ID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-createeffect" /></para>
      <param name="effectId">The class ID of the effect to create. See <a href="https://docs.microsoft.com/windows/desktop/Direct2D/built-in-effects">Built-in Effects</a> for a list of effect IDs.</param>
      <param name="effect">When this method returns, contains the address of a pointer to a new effect.</param>
    </summary>
  </comment>
  <comment id="D2D1_VERTEX_BUFFER_PROPERTIES">
    <summary>
      <para>Defines the properties of a vertex buffer that are standard for all vertex shader definitions.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_vertex_buffer_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_VERTEX_BUFFER_PROPERTIES::inputCount">
    <summary>The number of inputs to the vertex shader.</summary>
  </comment>
  <comment id="D2D1_VERTEX_BUFFER_PROPERTIES::usage">
    <summary>Indicates how frequently the vertex buffer is likely to be updated.</summary>
  </comment>
  <comment id="D2D1_VERTEX_BUFFER_PROPERTIES::data">
    <summary>The initial contents of the vertex buffer.</summary>
  </comment>
  <comment id="D2D1_VERTEX_BUFFER_PROPERTIES::byteWidth">
    <summary>The size of the vertex buffer, in bytes.</summary>
  </comment>
  <comment id="ID2D1Effect::GetOutput">
    <summary>
      <para>Gets the output image from the effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1effect-getoutput" /></para>
      <param name="outputImage">When this method returns, contains the address of a pointer to the output image for the effect.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::CreateMesh">
    <summary>
      <para>Create a mesh that uses triangles to describe a shape.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-createmesh" /></para>
      <param name="mesh">When this method returns, contains a pointer to a pointer to the new mesh.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextRenderer1::DrawUnderline">
    <summary>
      <para>IDWriteTextLayout::Draw calls this function to instruct the client to draw an underline.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextrenderer1-drawunderline" /></para>
      <param name="clientDrawingContext">The application-defined drawing context passed to 
     IDWriteTextLayout::<a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwriteinlineobject-draw">Draw</a>.</param>
      <param name="baselineOriginX">The pixel location (X-coordinate) at the baseline origin of the run where underline applies.</param>
      <param name="baselineOriginY">The pixel location (Y-coordinate) at the baseline origin of the run where underline applies.</param>
      <param name="orientationAngle">Orientation of the underline.</param>
      <param name="underline">Pointer to  a structure containing underline logical information.</param>
      <param name="clientDrawingEffect"> Application-defined effect to apply to the underline. Usually this argument represents effects such as the foreground brush filling the interior of a line.</param>
    </summary>
  </comment>
  <comment id="ID2D1ImageBrush::SetImage">
    <summary>
      <para>Sets the image associated with the provided image brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-setimage" /></para>
      <param name="image">The image to be associated with the image brush.</param>
    </summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_PROP">
    <summary>
      <para>Identifiers for properties of the Bitmap source effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_bitmapsource_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_PROP::D2D1_BITMAPSOURCE_PROP_WIC_BITMAP_SOURCE">
    <summary>The IWICBitmapSource containing the image data to be loaded.
            

The type is IWICBitmapSource.

The default value is NULL.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_PROP::D2D1_BITMAPSOURCE_PROP_SCALE">
    <summary>The scale amount in the X and Y direction. The effect multiplies the width by the X value and the height by the Y value. 
          This property is a D2D1_VECTOR_2F defined as: (X scale, Y scale). The scale amounts are FLOAT, unitless, and must be positive or 0.
          

The type is D2D1_VECTOR_2F.

The default value is {1.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_PROP::D2D1_BITMAPSOURCE_PROP_INTERPOLATION_MODE">
    <summary>The interpolation mode used to scale the image.
          If the mode disables the mipmap, then BitmapSouce will cache the image at the resolution determined by the Scale and EnableDPICorrection properties.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_bitmapsource_interpolation_mode">D2D1_BITMAPSOURCE_INTERPOLATION_MODE</a>.

The default value is D2D1_BITMAPSOURCE_INTERPOLATION_MODE_LINEAR.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_PROP::D2D1_BITMAPSOURCE_PROP_ENABLE_DPI_CORRECTION">
    <summary>If you set this to TRUE, the effect will scale the input image to convert the DPI reported by IWICBitmapSource to the DPI of the device context. 
          The effect uses the interpolation mode you set with the InterpolationMode property. If you set this to FALSE, the effect uses a DPI of 96.0 for the output image.
          

The type is BOOL.

The default value is FALSE.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_PROP::D2D1_BITMAPSOURCE_PROP_ALPHA_MODE">
    <summary>The alpha mode of the output. This can be either premultiplied or straight.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_bitmapsource_alpha_mode">D2D1_BITMAPSOURCE_ALPHA_MODE</a>.

The default value is D2D1_BITMAPSOURCE_ALPHA_MODE_PREMULTIPLIED.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_PROP::D2D1_BITMAPSOURCE_PROP_ORIENTATION">
    <summary>A flip and/or rotation operation to be performed on the image.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_bitmapsource_orientation">D2D1_BITMAPSOURCE_ORIENTATION</a>.

The default value is D2D1_BITMAPSOURCE_ORIENTATION_DEFAULT.</summary>
  </comment>
  <comment id="IDWriteFontDownloadQueue::GetGenerationCount">
    <summary>
      <para>Gets the current generation number of the download queue, which is incremented every time after a download completes, whether failed or successful. This cookie value can be compared against cached data to determine if it is stale.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontdownloadqueue-getgenerationcount" /></para>
    </summary>
  </comment>
  <comment id="ID2D1EffectImpl">
    <summary>
      <para>Allows a custom effect's interface and behavior to be specified by the effect author.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1effectimpl" /></para>
    </summary>
  </comment>
  <comment id="D2D1_POINTDIFFUSE_PROP">
    <summary>
      <para>Identifiers for properties of the Point-diffuse lighting effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_pointdiffuse_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_POINTDIFFUSE_PROP::D2D1_POINTDIFFUSE_PROP_LIGHT_POSITION">
    <summary>The light position of the point light source. The property is a D2D1_VECTOR_3F defined as (x, y, z). The units are in device-independent pixels (DIPs) and are unbounded.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.

The default value is {0.0f, 0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_POINTDIFFUSE_PROP::D2D1_POINTDIFFUSE_PROP_DIFFUSE_CONSTANT">
    <summary>The ratio of diffuse reflection to amount of incoming light. This property must be between 0 and 10,000 and is unitless.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_POINTDIFFUSE_PROP::D2D1_POINTDIFFUSE_PROP_SURFACE_SCALE">
    <summary>The scale factor in the Z direction. The surface scale is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_POINTDIFFUSE_PROP::D2D1_POINTDIFFUSE_PROP_COLOR">
    <summary>The color of the incoming light. This property is exposed as a Vector 3 – (R, G, B) and used to compute LR, LG, LB.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.

The default value is {1.0f, 1.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_POINTDIFFUSE_PROP::D2D1_POINTDIFFUSE_PROP_KERNEL_UNIT_LENGTH">
    <summary>The size of an element in the Sobel kernel used to generate the surface normal in the X and Y direction. This property maps to the dx and dy values in the Sobel gradient. 
            This property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a> (Kernel Unit Length X, Kernel Unit Length Y) and is defined in (DIPs/Kernel Unit). 
            The effect uses bilinear interpolation to scale the bitmap to match size of kernel elements.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is {1.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_POINTDIFFUSE_PROP::D2D1_POINTDIFFUSE_PROP_SCALE_MODE">
    <summary>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_pointdiffuse_scale_mode">D2D1_POINTDIFFUSE_SCALE_MODE</a>.

The default value is D2D1_POINTDIFFUSE_SCALE_MODE_LINEAR.</summary>
  </comment>
  <comment id="ID2D1RenderTarget::GetTextAntialiasMode">
    <summary>
      <para>Gets the current antialiasing mode for text and glyph drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-gettextantialiasmode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BRUSH_PROPERTIES">
    <summary>
      <para>Describes the opacity and transformation of a brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_brush_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BRUSH_PROPERTIES::opacity">
    <summary>A value between 0.0f and 1.0f, inclusive, that specifies the degree of opacity of the brush.</summary>
  </comment>
  <comment id="D2D1_BRUSH_PROPERTIES::transform">
    <summary>The transformation that is applied to the brush.</summary>
  </comment>
  <comment id="WICPngIccpProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) iCCP chunk metadata properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpngiccpproperties" /></para>
    </summary>
  </comment>
  <comment id="WICPngIccpProperties::WICPngIccpProfileName">
    <summary>[VT_LPSTR] Indicates the International Color Consortium (ICC) profile name.</summary>
  </comment>
  <comment id="WICPngIccpProperties::WICPngIccpProfileData">
    <summary>[VT_VECTOR \| VT_UI1] Indicates the embedded ICC profile.</summary>
  </comment>
  <comment id="IDWriteTextAnalyzer1::ApplyCharacterSpacing">
    <summary>
      <para>Applies spacing between characters, properly adjusting glyph clusters and diacritics.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextanalyzer1-applycharacterspacing" /></para>
      <param name="leadingSpacing">The spacing before each character, in reading order.</param>
      <param name="trailingSpacing">The spacing after each character, in reading order.</param>
      <param name="minimumAdvanceWidth">The minimum advance of each character,
    to prevent characters from becoming too thin or zero-width. This
    must be zero or greater.</param>
      <param name="textLength">The length of the clustermap and original text.</param>
      <param name="glyphCount">The number of glyphs.</param>
      <param name="clusterMap">Mapping from character ranges to glyph ranges.</param>
      <param name="glyphAdvances">The advance width of each glyph.</param>
      <param name="glyphOffsets">The offset of the origin of each glyph.</param>
      <param name="glyphProperties">Properties of each glyph, from GetGlyphs.</param>
      <param name="modifiedGlyphAdvances">The new advance width of each glyph.</param>
      <param name="modifiedGlyphOffsets">The new offset of the origin of each glyph.</param>
    </summary>
  </comment>
  <comment id="D2D1_VERTEX_OPTIONS">
    <summary>
      <para>Describes flags that influence how the renderer interacts with a custom vertex shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_vertex_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_VERTEX_OPTIONS::D2D1_VERTEX_OPTIONS_NONE">
    <summary>The logical equivalent of having no flags set.</summary>
  </comment>
  <comment id="D2D1_VERTEX_OPTIONS::D2D1_VERTEX_OPTIONS_DO_NOT_CLEAR">
    <summary>If this flag is set, the renderer  assumes that the vertex shader will cover the entire region of interest with vertices and need not clear the destination render target. If this flag is not set, the renderer assumes that the vertices do not cover the entire region interest and must clear the render target to transparent black first.</summary>
  </comment>
  <comment id="D2D1_VERTEX_OPTIONS::D2D1_VERTEX_OPTIONS_USE_DEPTH_BUFFER">
    <summary>The renderer will use a depth buffer when rendering custom vertices. The depth buffer will be used for calculating occlusion information. This can result in the renderer output being draw-order dependent if it contains transparency.</summary>
  </comment>
  <comment id="D2D1_VERTEX_OPTIONS::D2D1_VERTEX_OPTIONS_ASSUME_NO_OVERLAP">
    <summary>Indicates that custom vertices do not overlap each other.</summary>
  </comment>
  <comment id="IWICMetadataQueryReader::GetLocation">
    <summary>
      <para>Retrieves the current path relative to the root metadata block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataqueryreader-getlocation" /></para>
      <param name="cchMaxLength">The length of the <i>wzNamespace</i> buffer.</param>
      <param name="wzNamespace">Pointer that receives the current namespace location.</param>
      <param name="pcchActualLength">The actual buffer length that was needed to retrieve the current namespace location.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateDecoder">
    <summary>
      <para>Creates a new instance of IWICBitmapDecoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createdecoder" /></para>
      <param name="guidContainerFormat">The GUID for the desired container format.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatBmp</dt>
</dl>
</td>
<td width="60%">
The BMP container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatPng</dt>
</dl>
</td>
<td width="60%">
The PNG container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatIco</dt>
</dl>
</td>
<td width="60%">
The ICO container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatJpeg</dt>
</dl>
</td>
<td width="60%">
The JPEG container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatTiff</dt>
</dl>
</td>
<td width="60%">
The TIFF container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatGif</dt>
</dl>
</td>
<td width="60%">
The GIF container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatWmp</dt>
</dl>
</td>
<td width="60%">
The HD Photo container format GUID.

</td>
</tr>
</table></param>
      <param name="pguidVendor">The GUID for the preferred encoder vendor. 

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>NULL</dt>
</dl>
</td>
<td width="60%">
No preferred codec vendor.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_VendorMicrosoft</dt>
</dl>
</td>
<td width="60%">
Prefer to use Microsoft encoder.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_VendorMicrosoftBuiltIn</dt>
</dl>
</td>
<td width="60%">
Prefer to use the native Microsoft encoder.

</td>
</tr>
</table></param>
      <param name="iDecoder">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoder">IWICBitmapDecoder</a>. You must initialize this <b>IWICBitmapDecoder</b> on a stream using the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapdecoder-initialize">Initialize</a> method later.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory7">
    <summary>
      <para>This interface represents a factory object from which all DirectWrite objects are created. **IDWriteFactory7** adds new facilities for working with system fonts.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefactory7" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RadialGradientBrush::SetGradientOriginOffset">
    <summary>
      <para>Specifies the offset of the gradient origin relative to the gradient ellipse's center.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-setgradientoriginoffset" /></para>
      <param name="gradientOriginOffset">The offset of the gradient origin from the center of the gradient ellipse.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPointCollection::RemovePointsAtEnd">
    <summary>
      <para>Removes points from the end of the array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpointcollection-removepointsatend" /></para>
      <param name="pointsCount">Specifies how many points to remove.</param>
    </summary>
  </comment>
  <comment id="ID2D1Factory2::CreateDevice">
    <summary>
      <para>Creates an ID2D1Device1 object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1factory2-createdevice" /></para>
      <param name="dxgiDevice">The <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgidevice">IDXGIDevice</a> object used when creating  the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_2/nn-d2d1_2-id2d1device1">ID2D1Device1</a>.</param>
      <param name="d2dDevice1">The requested <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_2/nn-d2d1_2-id2d1device1">ID2D1Device1</a> object.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::HasChildren">
    <summary>
      <para>Returns a boolean indicating whether this element has children.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-haschildren" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace1::GetRecommendedRenderingMode">
    <summary>
      <para>Determines the recommended rendering mode for the font, using the specified size and rendering parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefontface1-getrecommendedrenderingmode" /></para>
      <param name="fontEmSize">The logical size of the font in DIP units. A DIP ("device-independent pixel") equals 1/96 inch.</param>
      <param name="dpiX">The number of physical pixels per DIP in a horizontal position. For example, if the DPI of the rendering surface is 96, this 
     value is 1.0f. If the DPI is 120, this value is 120.0f/96.</param>
      <param name="dpiY">The number of physical pixels per DIP in a vertical position. For example, if the DPI of the rendering surface is 96, this 
     value is 1.0f. If the DPI is 120, this value is 120.0f/96.</param>
      <param name="transform">Specifies the world transform.</param>
      <param name="isSideways">Whether the glyphs in the run are sideways or not.</param>
      <param name="outlineThreshold">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ne-dwrite_1-dwrite_outline_threshold">DWRITE_OUTLINE_THRESHOLD</a>-typed value that specifies the quality of the graphics system's outline rendering,
    affects the size threshold above which outline rendering is used.</param>
      <param name="measuringMode">The measuring method that will be used for glyphs in the font.
     Renderer implementations may choose different rendering modes for different measuring methods, for example:
     

<ul>
<li>DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL for <a href="https://docs.microsoft.com/windows/win32/api/dcommon/ne-dcommon-dwrite_measuring_mode">DWRITE_MEASURING_MODE_NATURAL</a>
</li>
<li>DWRITE_RENDERING_MODE_CLEARTYPE_GDI_CLASSIC for <a href="https://docs.microsoft.com/windows/win32/api/dcommon/ne-dcommon-dwrite_measuring_mode">DWRITE_MEASURING_MODE_GDI_CLASSIC</a>
</li>
<li>DWRITE_RENDERING_MODE_CLEARTYPE_GDI_NATURAL for <a href="https://docs.microsoft.com/windows/win32/api/dcommon/ne-dcommon-dwrite_measuring_mode">DWRITE_MEASURING_MODE_GDI_NATURAL</a>
</li>
</ul></param>
      <param name="renderingMode">When this method returns, contains a value that indicates the recommended rendering mode to use.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::DrawBitmap">
    <summary>
      <para>Draws a bitmap to the render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-drawbitmap" /></para>
      <param name="bitmap">The bitmap to draw.</param>
      <param name="destinationRectangle">The destination rectangle. The default is the size of the bitmap and the location is the upper left corner of the render target.</param>
      <param name="opacity">The opacity of the bitmap.</param>
      <param name="interpolationMode">The interpolation mode to use.</param>
      <param name="sourceRectangle">An optional source rectangle.</param>
      <param name="perspectiveTransform">An optional perspective transform.</param>
    </summary>
  </comment>
  <comment id="IDWriteFont3::Equals">
    <summary>
      <para>Compares two instances of font references for equality.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefont3-equals" /></para>
      <param name="font">A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefont">IDWriteFont</a> interface for the other font instance to compare to this font instance.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::DrawGeometry">
    <summary>
      <para>Draws the outline of the specified geometry using the specified stroke style.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-drawgeometry" /></para>
      <param name="geometry">The geometry to draw.</param>
      <param name="brush">The brush used to paint the geometry's stroke.</param>
      <param name="strokeWidth">The width of the stroke, in device-independent pixels. The value must be greater than or equal to 0.0f. If this parameter isn't specified, it defaults to 1.0f. The stroke is centered on the line.</param>
      <param name="strokeStyle">The style of stroke to apply to the geometry's outline, or <b>NULL</b> to paint a solid stroke.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalysisSource::GetParagraphReadingDirection">
    <summary>
      <para>Gets the paragraph reading direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalysissource-getparagraphreadingdirection" /></para>
    </summary>
  </comment>
  <comment id="IWICDdsFrameDecode::GetSizeInBlocks">
    <summary>
      <para>Gets the width and height, in blocks, of the DDS image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsframedecode-getsizeinblocks" /></para>
      <param name="widthInBlocks">The width of the DDS image in blocks.</param>
      <param name="heightInBlocks">The height of the DDS image in blocks.</param>
    </summary>
  </comment>
  <comment id="ID2D1GradientStopCollection1::GetPreInterpolationSpace">
    <summary>
      <para>Gets the color space of the input colors as well as the space in which gradient stops are interpolated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gradientstopcollection1-getpreinterpolationspace" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapScaler::Initialize">
    <summary>
      <para>Initializes the bitmap scaler with the provided parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapscaler-initialize" /></para>
      <param name="iSource">The input bitmap source.</param>
      <param name="uiWidth">The destination width.</param>
      <param name="uiHeight">The desination height.</param>
      <param name="mode">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapinterpolationmode">WICBitmapInterpolationMode</a> to use when scaling.</param>
    </summary>
  </comment>
  <comment id="D2D1_CROP_PROP">
    <summary>
      <para>Identifiers for properties of the Crop effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_crop_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_CROP_PROP::D2D1_CROP_PROP_RECT">
    <summary>The region to be cropped specified as a vector in the form (left, top, width, height). Units are in DIPs.
            

<div class="alert"><b>Note</b>  The rectangle will be truncated if it overlaps the edge boundaries of the input image.</div>
<div> </div>
Type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_4f">D2D1_VECTOR_4F</a>


Default value is {-FLT_MAX, -FLT_MAX, FLT_MAX, FLT_MAX}</summary>
  </comment>
  <comment id="D2D1_CROP_PROP::D2D1_CROP_PROP_BORDER_MODE">
    <summary>Indicates how the effect handles the crop rectangle falling on fractional pixel coordinates.
          

Type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_mode">D2D1_BORDER_MODE</a>.

Default value is D2D1_BORDER_MODE_SOFT.</summary>
  </comment>
  <comment id="IWICImagingFactory">
    <summary>
      <para>Exposes methods used to create components for the Windows Imaging Component (WIC) such as decoders, encoders and pixel format converters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicimagingfactory" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontList1::GetFont">
    <summary>
      <para>Gets a font given its zero-based index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontlist1-getfont" /></para>
      <param name="listIndex">Zero-based index of the font in the font list.</param>
      <param name="font">A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_3/nn-dwrite_3-idwritefont3">IDWriteFont3</a> interface for the newly created font object.</param>
    </summary>
  </comment>
  <comment id="ID2D1GeometryGroup::GetFillMode">
    <summary>
      <para>Indicates how the intersecting areas of the geometries contained in this geometry group are combined.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1geometrygroup-getfillmode" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Factory5::CreateDevice">
    <summary>
      <para>Creates an ID2D1Device4 object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory5-createdevice" /></para>
      <param name="dxgiDevice">The IDXGIDevice object used when creating the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device4">ID2D1Device4</a>.</param>
      <param name="d2dDevice4">The requested <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device4">ID2D1Device4</a> object.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataHandlerInfo::DoesSupportPadding">
    <summary>
      <para>Determines if the metadata handler supports padding.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatahandlerinfo-doessupportpadding" /></para>
      <param name="pfSupportsPadding">Pointer that receives <b>TRUE</b> if padding is supported; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataBlockWriter">
    <summary>
      <para>Exposes methods that enable the encoding of metadata. This interface is implemented by the decoder and its image frames.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicmetadatablockwriter" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::GetTextRenderingParams">
    <summary>
      <para>Retrieves the render target's current text rendering options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-gettextrenderingparams" /></para>
      <param name="textRenderingParams"> When this method returns, <i>textRenderingParams</i>contains the address  of a pointer to the render target's current text rendering options.</param>
    </summary>
  </comment>
  <comment id="WICDdsFormatInfo">
    <summary>
      <para>Specifies the DXGI_FORMAT and block information of a DDS format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicddsformatinfo" /></para>
    </summary>
  </comment>
  <comment id="WICDdsFormatInfo::DxgiFormat">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></summary>
  </comment>
  <comment id="WICDdsFormatInfo::BytesPerBlock">
    <summary>The size of a single block in bytes. For <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> values that are not block-based, the value is equal to the size of a single pixel in bytes.</summary>
  </comment>
  <comment id="WICDdsFormatInfo::BlockWidth">
    <summary>The width of a single block in pixels. For <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> values that are not block-based, the value is 1.</summary>
  </comment>
  <comment id="WICDdsFormatInfo::BlockHeight">
    <summary>The height of a single block in pixels. For <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> values that are not block-based, the value is 1.</summary>
  </comment>
  <comment id="IDWriteFont1::IsMonospacedFont">
    <summary>
      <para>Determines if the font is monospaced, that is, the characters are the same fixed-pitch width (non-proportional).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefont1-ismonospacedfont" /></para>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::GetRenderMode">
    <summary>
      <para>Gets the current WICRawRenderMode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getrendermode" /></para>
      <param name="renderMode">A pointer that receives the current <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawrendermode">WICRawRenderMode</a>.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateDecoderFromFilename">
    <summary>
      <para>Creates a new instance of the IWICBitmapDecoder class based on the given file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromfilename" /></para>
      <param name="wzFilename">A pointer to a null-terminated string that specifies the name of an object to create or open.</param>
      <param name="pguidVendor">The GUID for the preferred decoder vendor. Use <b>NULL</b> if no preferred vendor.</param>
      <param name="dwDesiredAccess">The access to the object, which can be read, write, or both.
               

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%">
<dl>
<dt>GENERIC_READ</dt>
</dl>
</td>
<td width="60%">
Read access.

</td>
</tr>
<tr>
<td width="40%">
<dl>
<dt>GENERIC_WRITE</dt>
</dl>
</td>
<td width="60%">
Write access.

</td>
</tr>
</table>
 

For more information, see <a href="https://docs.microsoft.com/windows/desktop/SecAuthZ/generic-access-rights">Generic Access Rights</a>.</param>
      <param name="metadataOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a> to use when creating the decoder.</param>
      <param name="iDecoder">A pointer that receives a pointer to the new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoder">IWICBitmapDecoder</a>.</param>
    </summary>
  </comment>
  <comment id="ID2D1Factory1::CreatePathGeometry">
    <summary>
      <para>Creates an ID2D1PathGeometry1 object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-createpathgeometry" /></para>
      <param name="pathGeometry">When this method returns, contains the address of a pointer to the newly created path geometry.</param>
    </summary>
  </comment>
  <comment id="WICHeifHdrProperties">
    <summary>
      <para>Specifies the HDR properties of a High Efficiency Image Format (HEIF) image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicheifhdrproperties" /></para>
    </summary>
  </comment>
  <comment id="WICHeifHdrProperties::WICHeifHdrMaximumLuminanceLevel">
    <summary>[VT_UI2] Specifies the maximum luminance level of the content in Nits.</summary>
  </comment>
  <comment id="WICHeifHdrProperties::WICHeifHdrMaximumFrameAverageLuminanceLevel">
    <summary>[VT_UI2] Specifies the maximum average per-frame luminance level of the content in Nits.</summary>
  </comment>
  <comment id="WICHeifHdrProperties::WICHeifHdrMinimumMasteringDisplayLuminanceLevel">
    <summary>[VT_UI2] Specifies the maximum luminance of the display on which the content was authored, in Nits.</summary>
  </comment>
  <comment id="WICHeifHdrProperties::WICHeifHdrMaximumMasteringDisplayLuminanceLevel">
    <summary>[VT_UI2] Specifies the maximum luminance of the display on which the content was authored, in Nits.</summary>
  </comment>
  <comment id="WICHeifHdrProperties::WICHeifHdrCustomVideoPrimaries">
    <summary>[VT_BLOB] Specifies custom color primaries for a video media type. The value of this property is a [MT_CUSTOM_VIDEO_PRIMARIES](/windows/desktop/api/mfapi/ns-mfapi-mt_custom_video_primaries)structure, returned as an array of bytes (VT_BLOB).</summary>
  </comment>
  <comment id="ID2D1ColorContext1::GetDXGIColorSpace">
    <summary>
      <para>Retrieves the DXGI color space of this context. Returns DXGI_COLOR_SPACE_CUSTOM when color context type is ICC.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1colorcontext1-getdxgicolorspace" /></para>
    </summary>
  </comment>
  <comment id="D2D1_INK_NIB_SHAPE">
    <summary>
      <para>Specifies the appearance of the ink nib (pen tip) as part of an D2D1_INK_STYLE_PROPERTIES structure.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_ink_nib_shape" /></para>
    </summary>
  </comment>
  <comment id="D2D1_INK_NIB_SHAPE::D2D1_INK_NIB_SHAPE_ROUND">
    <summary>The pen tip is circular.</summary>
  </comment>
  <comment id="D2D1_INK_NIB_SHAPE::D2D1_INK_NIB_SHAPE_SQUARE">
    <summary>The pen tip is square.</summary>
  </comment>
  <comment id="ID2D1GdiMetafile1">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1GdiMetafile interface. It also enables accessing the metafile DPI and bounds.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1gdimetafile1" /></para>
    </summary>
  </comment>
  <comment id="IWICJpegFrameDecode::GetDcHuffmanTable">
    <summary>
      <para>Retrieves a copy of the DC Huffman table for the specified scan and table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-getdchuffmantable" /></para>
      <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
      <param name="tableIndex">The index of the DC Huffman table to retrieve. Valid indices for a given scan can be determined by retrieving the scan header with <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicjpegframedecode-getscanheader">IWICJpegFrameDecode::GetScanHeader</a>.</param>
      <param name="dcHuffmanTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::PushAxisAlignedClip">
    <summary>
      <para>Pushes a clipping rectangle onto the clip and layer stack.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-pushaxisalignedclip" /></para>
      <param name="clipRect">The rectangle that defines the clip.</param>
      <param name="antialiasMode">The antialias mode for the clip.</param>
    </summary>
  </comment>
  <comment id="IWICDdsDecoder::GetFrame">
    <summary>
      <para>Retrieves the specified frame of the DDS image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsdecoder-getframe" /></para>
      <param name="arrayIndex">The requested index within the texture array.</param>
      <param name="mipLevel">The requested mip level.</param>
      <param name="sliceIndex">The requested slice within the 3D texture.</param>
      <param name="iBitmapFrame">A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframedecode">IWICBitmapFrameDecode</a> object.</param>
    </summary>
  </comment>
  <comment id="D2D1_3DTRANSFORM_INTERPOLATION_MODE">
    <summary>
      <para>The interpolation mode the 3D transform effect uses on the image. There are 5 scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_3dtransform_interpolation_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_3DTRANSFORM_INTERPOLATION_MODE::D2D1_3DTRANSFORM_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </comment>
  <comment id="D2D1_3DTRANSFORM_INTERPOLATION_MODE::D2D1_3DTRANSFORM_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode uses more processing time than the nearest neighbor mode, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_3DTRANSFORM_INTERPOLATION_MODE::D2D1_3DTRANSFORM_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_3DTRANSFORM_INTERPOLATION_MODE::D2D1_3DTRANSFORM_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </comment>
  <comment id="D2D1_3DTRANSFORM_INTERPOLATION_MODE::D2D1_3DTRANSFORM_INTERPOLATION_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </comment>
  <comment id="IWICColorContext::InitializeFromExifColorSpace">
    <summary>
      <para>Initializes the color context using an Exchangeable Image File (EXIF) color space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolorcontext-initializefromexifcolorspace" /></para>
      <param name="value">The value of the EXIF color space.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>1</dt>
</dl>
</td>
<td width="60%">
A sRGB color space.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>2</dt>
</dl>
</td>
<td width="60%">
An Adobe RGB color space.

</td>
</tr>
</table></param>
    </summary>
  </comment>
  <comment id="IDWriteFactory4">
    <summary>
      <para>The root factory interface for all DirectWrite objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefactory4" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::GetReadingDirection">
    <summary>
      <para>Gets the current reading direction for text in a paragraph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getreadingdirection" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement">
    <summary>
      <para>Interface for all SVG elements.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nn-d2d1svg-id2d1svgelement" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_SCALE_MODE">
    <summary>
      <para>The interpolation mode the Spot-specular lighting effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_spotspecular_scale_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_SCALE_MODE::D2D1_SPOTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_SCALE_MODE::D2D1_SPOTSPECULAR_SCALE_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode outputs a higher quality image than nearest neighbor.</summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_SCALE_MODE::D2D1_SPOTSPECULAR_SCALE_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_SCALE_MODE::D2D1_SPOTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_SCALE_MODE::D2D1_SPOTSPECULAR_SCALE_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </comment>
  <comment id="D2D1_SPOTSPECULAR_SCALE_MODE::D2D1_SPOTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </comment>
  <comment id="ID2D1CommandSink::DrawImage">
    <summary>
      <para>Draws the provided image to the command sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-drawimage" /></para>
      <param name="image">The image to be drawn to the command sink.</param>
      <param name="targetOffset">This defines the offset in the destination space that the image will be rendered to. The entire logical extent of the image will be rendered to the corresponding destination. If not specified, the destination origin will be (0, 0). The top-left corner of the image will be mapped to the target offset. This will not necessarily be the origin.</param>
      <param name="imageRectangle">The corresponding rectangle in the image space will be mapped to the provided origins when processing the image.</param>
      <param name="interpolationMode">The interpolation mode to use to  scale the image if necessary.</param>
      <param name="compositeMode">If specified, the composite mode that will be applied to the limits of the currently selected clip.</param>
    </summary>
  </comment>
  <comment id="D2D1_POINT_DESCRIPTION">
    <summary>
      <para>Describes a point on a path geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_point_description" /></para>
    </summary>
  </comment>
  <comment id="D2D1_POINT_DESCRIPTION::point">
    <summary>The end point after walking the path.</summary>
  </comment>
  <comment id="D2D1_POINT_DESCRIPTION::unitTangentVector">
    <summary>A unit vector indicating the tangent point.</summary>
  </comment>
  <comment id="D2D1_POINT_DESCRIPTION::endSegment">
    <summary>The index of the segment on which point resides. This index is global to the entire path, not just to a particular figure.</summary>
  </comment>
  <comment id="D2D1_POINT_DESCRIPTION::endFigure">
    <summary>The index of the figure on which point resides.</summary>
  </comment>
  <comment id="D2D1_POINT_DESCRIPTION::lengthToEndSegment">
    <summary>The length of the section of the path stretching from the start of the path  to the start of <b>endSegment</b>.</summary>
  </comment>
  <comment id="IWICMetadataReaderInfo::CreateInstance">
    <summary>
      <para>Creates an instance of an IWICMetadataReader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareaderinfo-createinstance" /></para>
      <param name="iReader">Pointer that receives a pointer to a metadata reader.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFaceReference::GetSimulations">
    <summary>
      <para>Obtains the algorithmic style simulation flags of a font face.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfacereference-getsimulations" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgGlyphStyle::GetStrokeDashesCount">
    <summary>
      <para>Returns the number of dashes in the dash array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1svgglyphstyle-getstrokedashescount" /></para>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext1::CreateFilledGeometryRealization">
    <summary>
      <para>Creates a device-dependent representation of the fill of the geometry that can be subsequently rendered.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1devicecontext1-createfilledgeometryrealization" /></para>
      <param name="geometry">The geometry to realize.</param>
      <param name="flatteningTolerance">The flattening tolerance to use when converting Beziers to line segments. This parameter shares the same units as the coordinates of the geometry.</param>
      <param name="geometryRealization">When this method returns, contains the address of a pointer to a new geometry realization object.</param>
    </summary>
  </comment>
  <comment id="D2D1_PATCH_EDGE_MODE">
    <summary>
      <para>Specifies how to render gradient mesh edges.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_patch_edge_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_PATCH_EDGE_MODE::D2D1_PATCH_EDGE_MODE_ALIASED">
    <summary>Render this patch edge aliased. Use this value for the internal edges of your gradient mesh.</summary>
  </comment>
  <comment id="D2D1_PATCH_EDGE_MODE::D2D1_PATCH_EDGE_MODE_ANTIALIASED">
    <summary>Render this patch edge antialiased. Use this value for the external (boundary) edges of your mesh.</summary>
  </comment>
  <comment id="D2D1_PATCH_EDGE_MODE::D2D1_PATCH_EDGE_MODE_ALIASED_INFLATED">
    <summary>Render this patch edge aliased and also slightly inflated. Use this for the internal edges of your gradient mesh when there could be t-junctions among patches. 
          Inflating the internal edges mitigates seams that can appear along those junctions.</summary>
  </comment>
  <comment id="ID2D1DeviceContext::GetUnitMode">
    <summary>
      <para>Gets the mode that is being used to interpret values by the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-getunitmode" /></para>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::SetToneCurve">
    <summary>
      <para>Sets the tone curve for the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-settonecurve" /></para>
      <param name="cbToneCurveSize">The size of the <i>pToneCurve</i> structure.</param>
      <param name="toneCurve">The desired tone curve.</param>
    </summary>
  </comment>
  <comment id="D2D1_HDRTONEMAP_DISPLAY_MODE">
    <summary>
      <para>Defines constants that specify a value for the D2D1_HDRTONEMAP_PROP_DISPLAY_MODE property of the HDR Tone Map effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_hdrtonemap_display_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_HDRTONEMAP_DISPLAY_MODE::D2D1_HDRTONEMAP_DISPLAY_MODE_SDR">
    <summary>Specifies that the tone mapper algorithm be optimized for best appearance on a standard dynamic range (SDR) display.</summary>
  </comment>
  <comment id="D2D1_HDRTONEMAP_DISPLAY_MODE::D2D1_HDRTONEMAP_DISPLAY_MODE_HDR">
    <summary>Specifies that the tone mapper algorithm be optimized for best appearance on a high dynamic range (HDR) display.</summary>
  </comment>
  <comment id="D2D1_MORPHOLOGY_PROP">
    <summary>
      <para>Identifiers for properties of the Morphology effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_morphology_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_MORPHOLOGY_PROP::D2D1_MORPHOLOGY_PROP_MODE">
    <summary>The morphology mode.
            

The type is D2D1_MORPHOLOGY_MODE.

The default value is D2D1_MORPHOLOGY_MODE_ERODE.</summary>
  </comment>
  <comment id="D2D1_MORPHOLOGY_PROP::D2D1_MORPHOLOGY_PROP_WIDTH">
    <summary>Size of the kernel in the X direction. The units are in DIPs. Values must be between 1 and 100 inclusive.
            

The type is UINT.

The default value is 1.</summary>
  </comment>
  <comment id="D2D1_MORPHOLOGY_PROP::D2D1_MORPHOLOGY_PROP_HEIGHT">
    <summary>Size of the kernel in the Y direction. The units are in DIPs. Values must be between 1 and 100 inclusive.
            

The type is UINT.

The default value is 1.</summary>
  </comment>
  <comment id="IDWriteFactory3::CreateCustomRenderingParams">
    <summary>
      <para>Creates a rendering parameters object with the specified properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefactory3-createcustomrenderingparams" /></para>
      <param name="gamma">The gamma value used for gamma correction, which must be greater than zero and cannot exceed 256.</param>
      <param name="enhancedContrast">The amount of contrast enhancement, zero or greater.</param>
      <param name="grayscaleEnhancedContrast">The amount of contrast enhancement to use for grayscale antialiasing, zero or greater.</param>
      <param name="clearTypeLevel">The degree of ClearType level, from 0.0f (no ClearType) to 1.0f (full ClearType).</param>
      <param name="pixelGeometry">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_pixel_geometry">DWRITE_PIXEL_GEOMETRY</a>-typed value that specifies the internal structure of a device pixel (that is, the physical arrangement of red, green, and blue color components) that is assumed for purposes of rendering text.</param>
      <param name="renderingMode">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite_3/ne-dwrite_3-dwrite_rendering_mode1">DWRITE_RENDERING_MODE1</a>-typed value that specifies the method (for example, ClearType natural quality) for rendering glyphs. In most cases, specify <b>DWRITE_RENDERING_MODE1_DEFAULT</b> to automatically use an appropriate mode.</param>
      <param name="gridFitMode">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite_2/ne-dwrite_2-dwrite_grid_fit_mode">DWRITE_GRID_FIT_MODE</a>-typed value that specifies how to grid-fit glyph outlines. In most cases, specify <b>DWRITE_GRID_FIT_DEFAULT</b> to automatically choose an appropriate mode.</param>
      <param name="renderingParams">A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_3/nn-dwrite_3-idwriterenderingparams3">IDWriteRenderingParams3</a> interface for the newly created rendering parameters object, or <b>NULL</b> in case of failure.</param>
    </summary>
  </comment>
  <comment id="IWICPixelFormatInfo::GetFormatGUID">
    <summary>
      <para>Gets the pixel format GUID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpixelformatinfo-getformatguid" /></para>
      <param name="format">Pointer that receives the pixel format GUID.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout2::GetOpticalAlignment">
    <summary>
      <para>Get how the glyphs align to the edges the margin.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextlayout2-getopticalalignment" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace3::GetFaceNames">
    <summary>
      <para>Creates a localized strings object that contains the face names for the font (for example, Regular or Bold), indexed by locale name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface3-getfacenames" /></para>
      <param name="names">A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritelocalizedstrings">IDWriteLocalizedStrings</a> interface for the newly created localized strings object.</param>
    </summary>
  </comment>
  <comment id="WICJpegScanType">
    <summary>
      <para>Specifies the memory layout of pixel data in a JPEG image scan.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicjpegscantype" /></para>
    </summary>
  </comment>
  <comment id="WICJpegScanType::WICJpegScanTypeInterleaved">
    <summary>The pixel data is stored in an interleaved memory layout.</summary>
  </comment>
  <comment id="WICJpegScanType::WICJpegScanTypePlanarComponents">
    <summary>The pixel data is stored in a planar memory layout.</summary>
  </comment>
  <comment id="WICJpegScanType::WICJpegScanTypeProgressive">
    <summary>The pixel data is stored in a progressive layout.</summary>
  </comment>
  <comment id="WICJpegScanType::WICJpegScanType_FORCE_DWORD">
    <summary>Forces this enumeration to compile to 32 bits in size. Without this value, some compilers would allow this enumeration to compile to a size other than 32 bits. This value is not used.</summary>
  </comment>
  <comment id="IDWriteTextLayout::GetMaxWidth">
    <summary>
      <para>Gets the layout maximum width.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getmaxwidth" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgDocument::SetViewportSize">
    <summary>
      <para>Sets the size of the initial viewport.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-setviewportsize" /></para>
      <param name="viewportSize">The size of the viewport.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat1::GetOpticalAlignment">
    <summary>
      <para>Gets the optical margin alignment for the text format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextformat1-getopticalalignment" /></para>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink5">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1CommandSink4 interface, plus it enables access to the BlendImage method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1commandsink5" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace::GetGlyphIndices">
    <summary>
      <para>Returns the nominal mapping of UCS4 Unicode code points to glyph indices as defined by the font 'CMAP' table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-getglyphindices" /></para>
      <param name="codePoints">An array of USC4 code points from which to obtain nominal glyph indices. The array must be allocated and be able to contain the number of elements specified by <i>codePointCount</i>.</param>
      <param name="codePointCount">The number of elements in the <i>codePoints</i> array.</param>
      <param name="glyphIndices">When this method returns, contains a pointer to an array of nominal glyph indices filled by this function.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat1::SetFontFallback">
    <summary>
      <para>Applies the custom font fallback onto the layout. If none is set, it uses the default system fallback list.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextformat1-setfontfallback" /></para>
      <param name="fontFallback">The font fallback to apply to the layout.</param>
    </summary>
  </comment>
  <comment id="WICColorContextType">
    <summary>
      <para>Specifies the color context types.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wiccolorcontexttype" /></para>
    </summary>
  </comment>
  <comment id="WICColorContextType::WICColorContextUninitialized">
    <summary>An uninitialized color context.</summary>
  </comment>
  <comment id="WICColorContextType::WICColorContextProfile">
    <summary>A color context that is a full ICC color profile.</summary>
  </comment>
  <comment id="WICColorContextType::WICColorContextExifColorSpace">
    <summary>A color context that is one of a number of set color spaces (sRGB, AdobeRGB) that are defined in the EXIF specification.</summary>
  </comment>
  <comment id="D2D1_DEVICE_CONTEXT_OPTIONS">
    <summary>
      <para>This specifies options that apply to the device context for its lifetime.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_device_context_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DEVICE_CONTEXT_OPTIONS::D2D1_DEVICE_CONTEXT_OPTIONS_NONE">
    <summary>The device context is created with default options.</summary>
  </comment>
  <comment id="D2D1_DEVICE_CONTEXT_OPTIONS::D2D1_DEVICE_CONTEXT_OPTIONS_ENABLE_MULTITHREADED_OPTIMIZATIONS">
    <summary>Distribute rendering work across multiple threads. Refer to <a href="https://docs.microsoft.com/windows/desktop/Direct2D/improving-direct2d-performance">Improving the performance of Direct2D apps</a> for additional notes on the use of this flag.</summary>
  </comment>
  <comment id="IDWriteTextLayout2::GetLastLineWrapping">
    <summary>
      <para>Get whether or not the last word on the last line is wrapped.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextlayout2-getlastlinewrapping" /></para>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext3::CreateSpriteBatch">
    <summary>
      <para>Creates a new, empty sprite batch. After creating a sprite batch, use ID2D1SpriteBatch::AddSprites to add sprites to it, then use ID2D1DeviceContext3::DrawSpriteBatch to draw it.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext3-createspritebatch" /></para>
      <param name="spriteBatch">When this method returns, contains a pointer to a new, empty sprite batch to be populated by the app.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory::CreateTextFormat">
    <summary>
      <para>Creates a text format object used for text layout.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-createtextformat" /></para>
      <param name="fontFamilyName">An array of characters that contains the name of the font family</param>
      <param name="fontCollection">A pointer to a font collection object. When this is <b>NULL</b>, indicates the system font collection.</param>
      <param name="fontWeight">A value that indicates the font weight for the text object created by this method.</param>
      <param name="fontStyle">A value that indicates the font style for the text object created by this method.</param>
      <param name="fontStretch">A value that indicates the font stretch for the text object created by this method.</param>
      <param name="fontSize">The logical size of the font in DIP ("device-independent pixel") units. A DIP equals 1/96 inch.</param>
      <param name="localeName">An array of characters that contains the locale name.</param>
      <param name="textFormat">When this method returns, contains an address of a pointer to a  newly created text format object, or <b>NULL</b> in case of failure.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::CreateColorContextFromFilename">
    <summary>
      <para>Creates a color context by loading it from the specified filename. The profile bytes are the contents of the file specified by filename.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createcolorcontextfromfilename" /></para>
      <param name="filename">The path to the file containing the profile bytes to initialize the color context with.</param>
      <param name="colorContext">When this method returns, contains the address of a pointer to a new color context.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout2::SetLastLineWrapping">
    <summary>
      <para>Set whether or not the last word on the last line is wrapped.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextlayout2-setlastlinewrapping" /></para>
      <param name="isLastLineWrappingEnabled">Line wrapping option.</param>
    </summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_STRING_TYPE">
    <summary>
      <para>Defines the type of SVG string attribute to set or get.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_attribute_string_type" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_STRING_TYPE::D2D1_SVG_ATTRIBUTE_STRING_TYPE_SVG">
    <summary>The attribute is a string in the same form as it would appear in the SVG XML.
          Note that when getting values of this type, the value returned may not exactly match the value that was set. Instead, the output value is a normalized version
          of the value. For example, an input color of 'red' may be output as '#FF0000'.</summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_STRING_TYPE::D2D1_SVG_ATTRIBUTE_STRING_TYPE_ID">
    <summary>The attribute is an element ID.</summary>
  </comment>
  <comment id="ID2D1BitmapBrush::SetExtendModeY">
    <summary>
      <para>Specifies how the brush vertically tiles those areas that extend past its bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-setextendmodey" /></para>
      <param name="extendModeY">A value that specifies how the brush vertically tiles those areas that extend past its bitmap.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::SetSharpness">
    <summary>
      <para>Sets the sharpness value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setsharpness" /></para>
      <param name="sharpness">The sharpness value of the raw image. The default value is the "as-shot" setting. The value range for sharpness is 0.0 through 1.0. The 0.0 lower limit represents no sharpening applied to the image, while the 1.0 upper limit represents the highest amount of sharpness that can be applied.</param>
    </summary>
  </comment>
  <comment id="ID2D1SourceTransform::SetRenderInfo">
    <summary>
      <para>Sets the render information for the transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1sourcetransform-setrenderinfo" /></para>
      <param name="renderInfo">The interface supplied to the transform to allow specifying the CPU based transform pass.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapDecoder::QueryCapability">
    <summary>
      <para>Retrieves the capabilities of the decoder based on the specified stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-querycapability" /></para>
      <param name="iStream">The stream to retrieve the decoder capabilities from.</param>
      <param name="pdwCapability">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapdecodercapabilities">WICBitmapDecoderCapabilities</a> of the decoder.</param>
    </summary>
  </comment>
  <comment id="ID2D1GradientStopCollection::GetGradientStops">
    <summary>
      <para>Copies the gradient stops from the collection into an array of D2D1_GRADIENT_STOP structures.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1gradientstopcollection-getgradientstops" /></para>
      <param name="gradientStops">A pointer to a one-dimensional array of <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ns-d2d1-d2d1_gradient_stop">D2D1_GRADIENT_STOP</a> structures. When this method returns, the array contains copies of the collection's gradient stops. You must allocate the memory for this array.</param>
      <param name="gradientStopsCount">A value indicating the number of gradient stops to copy. If the value is less than the number of gradient stops in the collection, the remaining gradient stops are omitted. If the value is larger than the number of gradient stops in the collection, the extra gradient stops are set to <b>NULL</b>. To obtain the number of gradient stops in the collection, use the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1gradientstopcollection-getgradientstopcount">GetGradientStopCount</a> method.</param>
    </summary>
  </comment>
  <comment id="ID2D1DrawingStateBlock1::GetDescription">
    <summary>
      <para>Gets the antialiasing mode, transform, tags, primitive blend, and unit mode portion of the drawing state.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1drawingstateblock1-getdescription" /></para>
      <param name="stateDescription">When this method returns, contains the antialiasing mode, transform, tags, primitive blend, and unit mode portion of the drawing state. You must allocate storage for this parameter.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPaint">
    <summary>
      <para>Interface describing an SVG fill or stroke value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nn-d2d1svg-id2d1svgpaint" /></para>
    </summary>
  </comment>
  <comment id="DWriteEngine2Events::Update">
    <summary>
      <para>Implement this method to receive progress notification of the current write operation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//imapi2/nf-imapi2-dwriteengine2events-update" /></para>
      <param name="object">The <a href="https://docs.microsoft.com/windows/desktop/api/imapi2/nn-imapi2-iwriteengine2">IWriteEngine2</a> interface that initiated the write operation. 

This parameter is a <b>MsftWriteEngine2</b> object in script.</param>
      <param name="progress">An <a href="https://docs.microsoft.com/windows/desktop/api/imapi2/nn-imapi2-iwriteengine2eventargs">IWriteEngine2EventArgs</a> interface that you use to determine the progress of the write operation. 

This parameter is a <b>MsftWriteEngine2</b> object in script.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::GetSpecifiedAttributeNameLength">
    <summary>
      <para>Gets the string length of the name of the specified attribute at the given index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getspecifiedattributenamelength" /></para>
      <param name="index">The index of the attribute.</param>
      <param name="nameLength">Outputs the string length of the name of the specified attribute.</param>
      <param name="inherited">Indicates whether the attribute is set to the inherit value.</param>
    </summary>
  </comment>
  <comment id="D2D1_CHANNEL_DEPTH">
    <summary>
      <para>Allows a caller to control the channel depth of a stage in the rendering pipeline.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_channel_depth" /></para>
    </summary>
  </comment>
  <comment id="D2D1_CHANNEL_DEPTH::D2D1_CHANNEL_DEPTH_DEFAULT">
    <summary>The channel depth is the default. It is inherited from the inputs.</summary>
  </comment>
  <comment id="D2D1_CHANNEL_DEPTH::D2D1_CHANNEL_DEPTH_1">
    <summary>The channel depth is 1.</summary>
  </comment>
  <comment id="D2D1_CHANNEL_DEPTH::D2D1_CHANNEL_DEPTH_4">
    <summary>The channel depth is 4.</summary>
  </comment>
  <comment id="IWICPixelFormatInfo2">
    <summary>
      <para>Extends IWICPixelFormatInfo by providing additional information about a pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicpixelformatinfo2" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::SetFontCollection">
    <summary>
      <para>Sets the font collection.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-setfontcollection" /></para>
      <param name="fontCollection">The font collection to set.</param>
      <param name="textRange">Text range to which this change applies.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext">
    <summary>
      <para>Provides factory methods and other state management for effect and transform authors.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1effectcontext" /></para>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::GetGamma">
    <summary>
      <para>Gets the current gamma setting of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getgamma" /></para>
      <param name="gamma">A pointer that receives the current gamma setting.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat2">
    <summary>
      <para>Describes the font and paragraph properties used to format text, and it describes locale information.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritetextformat2" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace3::GetInformationalStrings">
    <summary>
      <para>Gets a localized strings collection that contains the specified informational strings, indexed by locale name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface3-getinformationalstrings" /></para>
      <param name="informationalStringID">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_informational_string_id">DWRITE_INFORMATIONAL_STRING_ID</a>-typed value that identifies the strings to get.</param>
      <param name="informationalStrings">A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritelocalizedstrings">IDWriteLocalizedStrings</a> interface for the newly created localized strings object.</param>
      <param name="exists">A pointer to a variable that receives whether the font contains the specified string ID. <b>TRUE</b> if the font contains the specified string ID; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="D2D1_ELLIPSE">
    <summary>
      <para>Contains the center point, x-radius, and y-radius of an ellipse.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_ellipse" /></para>
    </summary>
  </comment>
  <comment id="D2D1_ELLIPSE::point">
    <summary>The center point of the ellipse.</summary>
  </comment>
  <comment id="D2D1_ELLIPSE::radiusX">
    <summary>The X-radius of the ellipse.</summary>
  </comment>
  <comment id="D2D1_ELLIPSE::radiusY">
    <summary>The Y-radius of the ellipse.</summary>
  </comment>
  <comment id="ID2D1Factory7::CreateDevice">
    <summary>
      <para>Creates a new Direct2D device from the given IDXGIDevice.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory7-createdevice" /></para>
      <param name="dxgiDevice">The IDXGIDevice from which to create the Direct2D device.</param>
      <param name="d2dDevice6">The created device.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPaint::GetPaintType">
    <summary>
      <para>Gets the paint type.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-getpainttype" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFileEnumerator">
    <summary>
      <para>Encapsulates a collection of font files. The font system uses this interface to enumerate font files when building a font collection.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritefontfileenumerator" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS">
    <summary>
      <para>Specifies additional features supportable by a compatible render target when it is created. This enumeration allows a bitwise combination of its member values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_compatible_render_target_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS::D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_NONE">
    <summary>The render target supports no additional features.</summary>
  </comment>
  <comment id="D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS::D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_GDI_COMPATIBLE">
    <summary>The render target supports interoperability with the Windows Graphics Device Interface  (GDI).</summary>
  </comment>
  <comment id="IWICBitmapSource::CopyPalette">
    <summary>
      <para>Retrieves the color table for indexed pixel formats.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsource-copypalette" /></para>
      <param name="iPalette">An <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>. A palette can be created using the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicimagingfactory-createpalette">CreatePalette</a> method.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPathData::GetCommands">
    <summary>
      <para>Gets commands from the commands array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-getcommands" /></para>
      <param name="commands">Buffer to contain the commands.</param>
      <param name="commandsCount">The element count of the buffer.</param>
      <param name="startIndex">The index of the first commands to retrieve.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFaceReference::EnqueueFontDownloadRequest">
    <summary>
      <para>Adds a request to the font download queue (IDWriteFontDownloadQueue).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfacereference-enqueuefontdownloadrequest" /></para>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::SetAntialiasMode">
    <summary>
      <para>Sets the antialiasing mode that will be used to render any subsequent geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-setantialiasmode" /></para>
      <param name="antialiasMode">The antialiasing mode selected for the command list.</param>
    </summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_PROP">
    <summary>
      <para>Identifiers for properties of the Spot-diffuse lighting effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_spotdiffuse_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_LIGHT_POSITION">
    <summary>The light position of the point light source. The property is a D2D1_VECTOR_3F defined as (x, y, z). The units are in device-independent pixels (DIPs) and are unbounded.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.
            

The default value is {0.0f, 0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_POINTS_AT">
    <summary>Where the spot light is focused. The property is exposed as a D2D1_VECTOR_3F with – (x, y, z). The units are in DIPs and the values are unbounded.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.
            

The default value is {0.0f, 0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_FOCUS">
    <summary>The focus of the spot light. This property is unitless and is defined between 0 and 200.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_LIMITING_CONE_ANGLE">
    <summary>The cone angle that restricts the region where the light is projected. No light is projected outside the cone. The limiting cone angle is the angle between the spot light axis (the axis between the LightPosition and PointsAt properties) and the spot light cone. This property is defined in degrees and must be between 0 to 90 degrees.
            

The type is FLOAT.

The default value is 90.0f.</summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_DIFFUSE_CONSTANT">
    <summary>The ratio of diffuse reflection to amount of incoming light. This property must be between 0 and 10,000 and is unitless.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_SURFACE_SCALE">
    <summary>The scale factor in the Z direction. The surface scale is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_COLOR">
    <summary>The color of the incoming light. This property is exposed as a Vector 3 – (R, G, B) and used to compute L<sub>R</sub>, L<sub>G</sub>, L<sub>B</sub>.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.

The default value is {1.0f, 1.0f, 1.0f}</summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_KERNEL_UNIT_LENGTH">
    <summary>The size of an element in the Sobel kernel used to generate the surface normal in the X and Y direction. This property maps to the dx and dy values in the Sobel gradient. 
            This property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>(Kernel Unit Length X, Kernel Unit Length Y) and is defined in (DIPs/Kernel Unit). 
            The effect uses bilinear interpolation to scale the bitmap to match size of kernel elements.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.
            

The default value is {1.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_PROP::D2D1_SPOTDIFFUSE_PROP_SCALE_MODE">
    <summary>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_spotdiffuse_scale_mode">D2D1_SPOTDIFFUSE_SCALE_MODE</a>.
            

The default value is D2D1_SPOTDIFFUSE_SCALE_MODE_LINEAR.</summary>
  </comment>
  <comment id="IDWriteFontFallbackBuilder::CreateFontFallback">
    <summary>
      <para>Creates the finalized fallback object from the mappings added.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefontfallbackbuilder-createfontfallback" /></para>
      <param name="fontFallback">Contains an address of a pointer to the created fallback list.</param>
    </summary>
  </comment>
  <comment id="ID2D1Factory2">
    <summary>
      <para>Creates Direct2D resources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nn-d2d1_2-id2d1factory2" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SPRITE_OPTIONS">
    <summary>
      <para>Specifies additional aspects of how a sprite batch is to be drawn, as part of a call to ID2D1DeviceContext3::DrawSpriteBatch.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_sprite_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SPRITE_OPTIONS::D2D1_SPRITE_OPTIONS_NONE">
    <summary>Default value. No special drawing configuration. This option yields the best drawing performance.</summary>
  </comment>
  <comment id="D2D1_SPRITE_OPTIONS::D2D1_SPRITE_OPTIONS_CLAMP_TO_SOURCE_RECTANGLE">
    <summary>Interpolation of bitmap pixels will be clamped to the sprite’s source rectangle. 
          If the sub-images in your source bitmap have no pixels separating them, then you may see color bleeding when drawing them with D2D1_SPRITE_OPTIONS_NONE. 
          In that case, consider adding borders between them with your sprite-packing tool, or use this option.
          Note that drawing sprites with this option enabled is slower than using D2D1_SPRITE_OPTIONS_NONE.</summary>
  </comment>
  <comment id="IWICBitmapSource::GetPixelFormat">
    <summary>
      <para>Retrieves the pixel format of the bitmap source..</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsource-getpixelformat" /></para>
      <param name="pixelFormat">Receives the pixel format GUID the bitmap is stored in. For a list of available pixel formats, see the <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-native-pixel-formats">Native Pixel Formats</a> topic.</param>
    </summary>
  </comment>
  <comment id="ID2D1Factory4">
    <summary>
      <para>Creates Direct2D resources. This interface also enables the creation of ID2D1Device3 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1factory4" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFamily1::GetFont">
    <summary>
      <para>Gets a font given its zero-based index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfamily1-getfont" /></para>
      <param name="listIndex">Zero-based index of the font in the font list.</param>
      <param name="font">A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_3/nn-dwrite_3-idwritefont3">IDWriteFont3</a> interface for the newly created font object.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace1::GetKerningPairAdjustments">
    <summary>
      <para>Retrieves the kerning pair adjustments from the font's kern table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefontface1-getkerningpairadjustments" /></para>
      <param name="glyphCount">Number of glyphs to retrieve adjustments for.</param>
      <param name="glyphIndices">An array of glyph id's to retrieve adjustments
    for.</param>
      <param name="glyphAdvanceAdjustments">The advances, returned in font design units, for
    each glyph. The last glyph adjustment is zero.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataHandlerInfo">
    <summary>
      <para>Exposes methods that provide basic information about the registered metadata handler.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicmetadatahandlerinfo" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace::GetIndex">
    <summary>
      <para>Obtains the index of a font face in the context of its font files.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-getindex" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat1">
    <summary>
      <para>Describes the font and paragraph properties used to format text, and it describes locale information.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nn-dwrite_2-idwritetextformat1" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_INTERPOLATION_MODE">
    <summary>
      <para>The interpolation mode used to scale the image in the Bitmap source effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_bitmapsource_interpolation_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_INTERPOLATION_MODE::D2D1_BITMAPSOURCE_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. Doesn't generate a mipmap.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_INTERPOLATION_MODE::D2D1_BITMAPSOURCE_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. Doesn't generate a mipmap.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_INTERPOLATION_MODE::D2D1_BITMAPSOURCE_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. Doesn't generate a mipmap.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_INTERPOLATION_MODE::D2D1_BITMAPSOURCE_INTERPOLATION_MODE_FANT">
    <summary>Uses the WIC fant interpolation, the same as the IWICBitmapScaler interface. Doesn't generate a mipmap.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_INTERPOLATION_MODE::D2D1_BITMAPSOURCE_INTERPOLATION_MODE_MIPMAP_LINEAR">
    <summary>Generates mipmap chain in system memory using bilinear interpolation. For each mipmap the effect scales to the nearest multiple of 0.5 using bilinear interpolation 
          and then scales the remaining amount using linear interpolation.</summary>
  </comment>
  <comment id="IWICStream::InitializeFromMemory">
    <summary>
      <para>Initializes a stream to treat a block of memory as a stream. The stream cannot grow beyond the buffer size.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicstream-initializefrommemory" /></para>
      <param name="pbBuffer">Pointer to the buffer used to initialize the stream.</param>
      <param name="cbBufferSize">The size of buffer.</param>
    </summary>
  </comment>
  <comment id="IWICJpegFrameDecode::CopyScan">
    <summary>
      <para>Retrieves a copy of the compressed JPEG scan directly from the WIC decoder frame's output stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-copyscan" /></para>
      <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
      <param name="scanOffset">The byte position in the scan data to begin copying.  Use 0 on the first call.  If the output buffer size is insufficient to store the entire scan, this offset allows you to resume copying from the end of the previous copy operation.</param>
      <param name="cbScanData">The size, in bytes, of the <i>pbScanData</i> array.</param>
      <param name="pbScanData">A pointer that receives the table data. This parameter must not be NULL.</param>
      <param name="pcbScanDataActual">A pointer that receives the size of the scan data actually copied into <i>pbScanData</i>. The size returned may be smaller that the size of <i>cbScanData</i>. This  parameter may be NULL.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory2::GetSystemFontFallback">
    <summary>
      <para>Creates a font fallback object from the system font fallback list.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefactory2-getsystemfontfallback" /></para>
      <param name="fontFallback">Contains an address of a pointer to the newly created font fallback object.</param>
    </summary>
  </comment>
  <comment id="IWICJpegFrameDecode::SetIndexing">
    <summary>
      <para>Enables indexing of the JPEG for efficient random access.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-setindexing" /></para>
      <param name="options">A value specifying whether indexes should be generated immediately or deferred until a future call to <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels">IWICBitmapSource::CopyPixels</a>.</param>
      <param name="horizontalIntervalSize">The granularity of the indexing, in pixels.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontResource">
    <summary>
      <para>Provides axis information for a font resource, and is used to create specific font face instances.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontresource" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFont::GetStretch">
    <summary>
      <para>Gets the stretch, or width, of the specified font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefont-getstretch" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetFontStretch">
    <summary>
      <para>Gets the font stretch of the text at the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getfontstretch" /></para>
      <param name="currentPosition">The position of the text to inspect.</param>
      <param name="fontStretch">When this method returns, contains a value which indicates the type of font stretch (also known as width) being applied at the specified position.</param>
      <param name="textRange">The range of text that has the same  formatting as the text at the position specified by <i>currentPosition</i>.  This means the run has the exact  formatting as the position specified, including but not limited to the font stretch.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::SetIncrementalTabStop">
    <summary>
      <para>Sets a fixed distance between two adjacent tab stops.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-setincrementaltabstop" /></para>
      <param name="incrementalTabStop">The fixed distance between two adjacent tab stops.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout1::GetPairKerning">
    <summary>
      <para>Gets whether or not pair-kerning is enabled at given position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextlayout1-getpairkerning" /></para>
      <param name="currentPosition">The current text position.</param>
      <param name="isPairKerningEnabled">The flag that indicates whether text is pair-kerned.</param>
      <param name="textRange">The position range of the current format.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::CreateColorContext">
    <summary>
      <para>Creates a color context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-createcolorcontext" /></para>
      <param name="space">The space  of color context to create.</param>
      <param name="profile">A buffer containing the ICC profile bytes used to initialize the color context when <i>space</i> is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/ne-d2d1_1-d2d1_color_space">D2D1_COLOR_SPACE_CUSTOM</a>.  For other types, the parameter is ignored and should be set to <b>NULL</b>.</param>
      <param name="profileSize">The size in bytes of <i>Profile</i>.</param>
      <param name="colorContext">When this method returns, contains the address of a pointer to a new color context object.</param>
    </summary>
  </comment>
  <comment id="ID2D1TessellationSink::AddTriangles">
    <summary>
      <para>Copies the specified triangles to the sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1tessellationsink-addtriangles" /></para>
      <param name="triangles">An array of <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ns-d2d1-d2d1_triangle">D2D1_TRIANGLE</a> structures that describe the triangles to add to the sink.</param>
      <param name="trianglesCount">The number of triangles to copy from the <i>triangles</i> array.</param>
    </summary>
  </comment>
  <comment id="WICJpegFrameHeader">
    <summary>
      <para>Represents a JPEG frame header.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicjpegframeheader" /></para>
    </summary>
  </comment>
  <comment id="WICJpegFrameHeader::Width">
    <summary>The width of the JPEG frame.</summary>
  </comment>
  <comment id="WICJpegFrameHeader::Height">
    <summary>The height of the JPEG frame.</summary>
  </comment>
  <comment id="WICJpegFrameHeader::TransferMatrix">
    <summary>The transfer matrix of the JPEG frame.</summary>
  </comment>
  <comment id="WICJpegFrameHeader::ScanType">
    <summary>The scan type of the JPEG frame.</summary>
  </comment>
  <comment id="WICJpegFrameHeader::cComponents">
    <summary>The number of components in the frame.</summary>
  </comment>
  <comment id="WICJpegFrameHeader::ComponentIdentifiers">
    <summary>The component identifiers.</summary>
  </comment>
  <comment id="WICJpegFrameHeader::SampleFactors">
    <summary>The sample factors. Use one of the following constants, described in <a href="https://docs.microsoft.com/windows/desktop/wic/iwicjpegframedecode-constants">IWICJpegFrameDecode Constants</a>.

<ul>
<li>WIC_JPEG_SAMPLE_FACTORS_ONE</li>
<li>WIC_JPEG_SAMPLE_FACTORS_THREE_420</li>
<li>WIC_JPEG_SAMPLE_FACTORS_THREE_422</li>
<li>WIC_JPEG_SAMPLE_FACTORS_THREE_440</li>
<li>WIC_JPEG_SAMPLE_FACTORS_THREE_444</li>
</ul></summary>
  </comment>
  <comment id="WICJpegFrameHeader::QuantizationTableIndices">
    <summary>The format of the quantization table indices. Use one of the following constants, described in <a href="https://docs.microsoft.com/windows/desktop/wic/iwicjpegframedecode-constants">IWICJpegFrameDecode Constants</a>.

<ul>
<li>WIC_JPEG_QUANTIZATION_BASELINE_ONE</li>
<li>WIC_JPEG_QUANTIZATION_BASELINE_THREE </li>
</ul></summary>
  </comment>
  <comment id="IDWriteFontCollection2">
    <summary>
      <para>This interface encapsulates a set of fonts, such as the set of fonts installed on the system, or the set of fonts in a particular directory. The font collection API can be used to discover what font families and fonts are available, and to obtain some metadata about the fonts.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontcollection2" /></para>
    </summary>
  </comment>
  <comment id="WICSerializeMetadataContent">
    <summary>
      <para>Writes metadata into a given stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-wicserializemetadatacontent" /></para>
      <param name="guidContainerFormat">The container format GUID.</param>
      <param name="iWriter">The metadata writer to write metadata to the stream.</param>
      <param name="dwPersistOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicpersistoptions">WICPersistOptions</a> options to use when writing the metadata.</param>
      <param name="iStream">A pointer to the stream in which to write the metadata.</param>
    </summary>
  </comment>
  <comment id="ID2D1BorderTransform::GetExtendModeY">
    <summary>
      <para>Gets the extend mode in the y direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1bordertransform-getextendmodey" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SCALE_INTERPOLATION_MODE">
    <summary>
      <para>The interpolation mode the Scale effect uses to scale the image. There are 6 scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_scale_interpolation_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SCALE_INTERPOLATION_MODE::D2D1_SCALE_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </comment>
  <comment id="D2D1_SCALE_INTERPOLATION_MODE::D2D1_SCALE_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode uses more processing time than the nearest neighbor mode, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_SCALE_INTERPOLATION_MODE::D2D1_SCALE_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_SCALE_INTERPOLATION_MODE::D2D1_SCALE_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </comment>
  <comment id="D2D1_SCALE_INTERPOLATION_MODE::D2D1_SCALE_INTERPOLATION_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </comment>
  <comment id="D2D1_SCALE_INTERPOLATION_MODE::D2D1_SCALE_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </comment>
  <comment id="ID2D1InkStyle::GetNibTransform">
    <summary>
      <para>Retrieves the transform to be applied to this style's nib shape.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1inkstyle-getnibtransform" /></para>
      <param name="transform">When this method returns, contains a pointer to the transform to be applied to this style's nib shape.</param>
    </summary>
  </comment>
  <comment id="ID2D1Bitmap::CopyFromRenderTarget">
    <summary>
      <para>Copies the specified region from the specified render target into the current bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmap-copyfromrendertarget" /></para>
      <param name="destPoint">In the current bitmap, the upper-left corner of the area to which the region specified by <i>srcRect</i> is copied.</param>
      <param name="renderTarget">The render target that contains the region to copy.</param>
      <param name="srcRect">The area of <i>renderTarget</i> to copy.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory5::CreateHttpFontFileLoader">
    <summary>
      <para>Creates a remote font file loader that can create font file references from HTTP or HTTPS URLs. The caller is responsible for registering and unregistering the loader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefactory5-createhttpfontfileloader" /></para>
      <param name="referrerUrl">Optional referrer URL for HTTP requests.</param>
      <param name="extraHeaders">Optional additional header fields to include in HTTP requests. Each header field consists of a name followed by a colon (":") and the field value, as specified by RFC 2616. Multiple header fields may be separated by newlines.</param>
      <param name="newLoader">Receives a pointer to the newly-created loader object.</param>
    </summary>
  </comment>
  <comment id="D2D1_FLOOD_PROP">
    <summary>
      <para>Identifiers for properties of the Flood effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_flood_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_FLOOD_PROP::D2D1_FLOOD_PROP_COLOR">
    <summary>The color and opacity of the bitmap. This property is a D2D1_VECTOR_4F. The individual values for each channel are of type FLOAT, unbounded and unitless.
            The effect doesn't modify the values for the channels.
            

The RGBA values for each channel range from 0 to 1.

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_4f">D2D1_VECTOR_4F</a>.

The default value is {0.0f, 0.0f, 0.0f, 1.0f}.</summary>
  </comment>
  <comment id="ID2D1EffectContext1">
    <summary>
      <para>Provides factory methods and other state management for effect and transform authors.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor_1/nn-d2d1effectauthor_1-id2d1effectcontext1" /></para>
    </summary>
  </comment>
  <comment id="ID2D1GdiMetafile1::GetSourceBounds">
    <summary>
      <para>Gets the bounds of the metafile in source space in DIPs. This corresponds to the frame rect in an EMF/EMF+.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gdimetafile1-getsourcebounds" /></para>
      <param name="bounds">The bounds, in DIPs, of the metafile.</param>
    </summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_PROP">
    <summary>
      <para>Identifiers for properties of the Distant-diffuse lighting effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_distantdiffuse_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_PROP::D2D1_DISTANTDIFFUSE_PROP_AZIMUTH">
    <summary>The direction angle of the light source in the XY plane relative to the X-axis in the counter clock wise direction. The units are in degrees and must be between 0 and 360 degrees.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_PROP::D2D1_DISTANTDIFFUSE_PROP_ELEVATION">
    <summary>The direction angle of the light source in the YZ plane relative to the Y-axis in the counter clock wise direction. The units are in degrees and must be between 0 and 360 degrees. 
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_PROP::D2D1_DISTANTDIFFUSE_PROP_DIFFUSE_CONSTANT">
    <summary>The ratio of diffuse reflection to amount of incoming light. This property must be between 0 and 10,000 and is unitless. 
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_PROP::D2D1_DISTANTDIFFUSE_PROP_SURFACE_SCALE">
    <summary>The scale factor in the Z direction. The surface scale is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_PROP::D2D1_DISTANTDIFFUSE_PROP_COLOR">
    <summary>The color of the incoming light. This property is exposed as a D2D1_VECTOR_3F – (R, G, B) and used to compute LR, LG, LB. 
            

The type is D2D1_VECTOR_3F.

The default value is {1.0f, 1.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_PROP::D2D1_DISTANTDIFFUSE_PROP_KERNEL_UNIT_LENGTH">
    <summary>The size of an element in the Sobel kernel used to generate the surface normal in the X and Y direction. This property maps to the dx and dy values in the Sobel gradient. This property is a D2D1_VECTOR_2F (Kernel Unit Length X, Kernel Unit Length Y) and is defined in (device-independent pixels (DIPs)/Kernel Unit). The effect uses bilinear interpolation to scale the bitmap to match size of kernel elements. 
            

The type is D2D1_VECTOR_2F.

The default value is {1.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_PROP::D2D1_DISTANTDIFFUSE_PROP_SCALE_MODE">
    <summary>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.
            

The type is D2D1_DISTANTDIFFUSE_SCALE_MODE.

The default value is D2D1_DISTANTDIFFUSE_SCALE_MODE_LINEAR.</summary>
  </comment>
  <comment id="IWICPalette::IsGrayscale">
    <summary>
      <para>Retrieves a value that describes whether a palette is grayscale.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-isgrayscale" /></para>
      <param name="pfIsGrayscale">A pointer to a variable that receives a boolean value that indicates whether the palette is grayscale. <b>TRUE</b> indicates that the palette is grayscale; otherwise <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataBlockWriter::RemoveWriterByIndex">
    <summary>
      <para>Removes the metadata writer from the specified index location.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockwriter-removewriterbyindex" /></para>
      <param name="nIndex">The index of the metadata writer to remove.</param>
    </summary>
  </comment>
  <comment id="ID2D1Bitmap1::Map">
    <summary>
      <para>Maps the given bitmap into memory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1bitmap1-map" /></para>
      <param name="options">The options used in mapping the bitmap into memory.</param>
      <param name="mappedRect">When this method returns, contains a reference to the rectangle that is mapped into memory.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataHandlerInfo::DoesRequireFullStream">
    <summary>
      <para>Determines if the handler requires a full stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatahandlerinfo-doesrequirefullstream" /></para>
      <param name="pfRequiresFullStream">Pointer that receives <b>TRUE</b> if a full stream is required; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="ID2D1DrawInfo::SetPixelShader">
    <summary>
      <para>Set the shader instructions for this transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1drawinfo-setpixelshader" /></para>
      <param name="shaderId">The resource id for the  shader.</param>
      <param name="pixelOptions">Additional information provided to the renderer to indicate the operations the pixel shader does.</param>
    </summary>
  </comment>
  <comment id="IDWriteRenderingParams::GetEnhancedContrast">
    <summary>
      <para>Gets the enhanced contrast property of the rendering parameters object. Valid values are greater than or equal to zero.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwriterenderingparams-getenhancedcontrast" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFactory::CreateRenderingParams">
    <summary>
      <para>Creates a rendering parameters object with default settings for the primary monitor. Different monitors may have different rendering parameters, for more information see the How to Add Support for Multiple Monitors topic.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-createrenderingparams" /></para>
      <param name="renderingParams">When this method returns, contains an address of a pointer to the newly created  rendering parameters object.</param>
    </summary>
  </comment>
  <comment id="D2D1_UNIT_MODE">
    <summary>
      <para>Specifies how units in Direct2D will be interpreted.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_unit_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_UNIT_MODE::D2D1_UNIT_MODE_DIPS">
    <summary>Units will be interpreted as device-independent pixels (1/96").</summary>
  </comment>
  <comment id="D2D1_UNIT_MODE::D2D1_UNIT_MODE_PIXELS">
    <summary>Units will be interpreted as pixels.</summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_SCALE_MODE">
    <summary>
      <para>The interpolation mode the Point-specular lighting effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_pointspecular_scale_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_SCALE_MODE::D2D1_POINTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_SCALE_MODE::D2D1_POINTSPECULAR_SCALE_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode outputs a higher quality image than nearest neighbor.</summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_SCALE_MODE::D2D1_POINTSPECULAR_SCALE_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_SCALE_MODE::D2D1_POINTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_SCALE_MODE::D2D1_POINTSPECULAR_SCALE_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_SCALE_MODE::D2D1_POINTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </comment>
  <comment id="IDWriteTextAnalyzer2::CheckTypographicFeature">
    <summary>
      <para>Checks if a typographic feature is available for a glyph or a set of glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextanalyzer2-checktypographicfeature" /></para>
      <param name="fontFace">The font face to read glyph information from.</param>
      <param name="scriptAnalysis">The script analysis for the script or font to check.</param>
      <param name="localeName">The locale name to check.</param>
      <param name="featureTag">The font feature tag to check.</param>
      <param name="glyphCount">The number of glyphs to check.</param>
      <param name="glyphIndices">An array of glyph indices to check.</param>
      <param name="featureApplies">An array of integers that indicate whether or not the font feature applies to each glyph specified.</param>
    </summary>
  </comment>
  <comment id="IDWriteInMemoryFontFileLoader::GetFileCount">
    <summary>
      <para>Returns the number of font file references that have been created using this loader instance.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwriteinmemoryfontfileloader-getfilecount" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace3::GetFamilyNames">
    <summary>
      <para>Creates a localized strings object that contains the family names for the font family, indexed by locale name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface3-getfamilynames" /></para>
      <param name="names">A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritelocalizedstrings">IDWriteLocalizedStrings</a> interface for the newly created localized strings object.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext2::CreateImageSourceFromDxgi">
    <summary>
      <para>Creates an image source from a set of DXGI surface(s). The YCbCr surface(s) are converted to RGBA automatically during subsequent drawing.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext2-createimagesourcefromdxgi" /></para>
      <param name="surfaces">The DXGI surfaces to create the image source from.</param>
      <param name="surfaceCount">The number of surfaces provided; must be between one and three.</param>
      <param name="colorSpace">The color space of the input.</param>
      <param name="options">Options controlling color space conversions.</param>
      <param name="imageSource">Receives the new image source instance.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::GetFirstChild">
    <summary>
      <para>Gets the first child of this element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getfirstchild" /></para>
      <param name="child">Outputs the first child of this element.</param>
    </summary>
  </comment>
  <comment id="D2D1_FEATURE">
    <summary>
      <para>Defines capabilities of the underlying Direct3D device which may be queried using ID2D1EffectContext::CheckFeatureSupport.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_feature" /></para>
    </summary>
  </comment>
  <comment id="D2D1_FEATURE::D2D1_FEATURE_DOUBLES">
    <summary>A D2D1_FEATURE_DATA_DOUBLES structure should be filled.</summary>
  </comment>
  <comment id="D2D1_FEATURE::D2D1_FEATURE_D3D10_X_HARDWARE_OPTIONS">
    <summary>A D2D1_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS structure should be filled.</summary>
  </comment>
  <comment id="D2D1_INPUT_ELEMENT_DESC">
    <summary>
      <para>A description of a single element to the vertex layout.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_input_element_desc" /></para>
    </summary>
  </comment>
  <comment id="D2D1_INPUT_ELEMENT_DESC::semanticName">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-semantics">HLSL semantic</a> associated with this element in a <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-signatures">shader input-signature</a>.</summary>
  </comment>
  <comment id="D2D1_INPUT_ELEMENT_DESC::semanticIndex">
    <summary>The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix; however, each of the four components would have different semantic indices (0, 1, 2, and 3).</summary>
  </comment>
  <comment id="D2D1_INPUT_ELEMENT_DESC::format">
    <summary>The data type of the element data.</summary>
  </comment>
  <comment id="D2D1_INPUT_ELEMENT_DESC::inputSlot">
    <summary>An integer value that identifies the input-assembler. Valid values are between 0 and 15.</summary>
  </comment>
  <comment id="D2D1_INPUT_ELEMENT_DESC::alignedByteOffset">
    <summary>The offset in bytes between each element.</summary>
  </comment>
  <comment id="IWICBitmapCodecProgressNotification">
    <summary>
      <para>Exposes methods used for progress notification for encoders and decoders.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapcodecprogressnotification" /></para>
    </summary>
  </comment>
  <comment id="ID2D1TransformNode">
    <summary>
      <para>Describes a node in a transform topology.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1transformnode" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapCodecInfo::DoesSupportMultiframe">
    <summary>
      <para>Retrieves a value indicating whether the codec supports multi frame images.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportmultiframe" /></para>
      <param name="pfSupportMultiframe">Receives <b>TRUE</b> if the codec supports multi frame images; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory::UnregisterFontFileLoader">
    <summary>
      <para>Unregisters a font file loader that was previously registered with the DirectWrite font system using RegisterFontFileLoader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-unregisterfontfileloader" /></para>
      <param name="fontFileLoader">Pointer to the file loader that was previously registered with the DirectWrite font system using <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritefactory-registerfontfileloader">RegisterFontFileLoader</a>.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink1::SetPrimitiveBlend1">
    <summary>
      <para>Sets a new primitive blend mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1commandsink1-setprimitiveblend1" /></para>
      <param name="primitiveBlend">The primitive blend that will apply to subsequent primitives.</param>
    </summary>
  </comment>
  <comment id="IWICColorTransform">
    <summary>
      <para>Exposes methods that transforms an IWICBitmapSource from one color context to another.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwiccolortransform" /></para>
    </summary>
  </comment>
  <comment id="D2D1_QUADRATIC_BEZIER_SEGMENT">
    <summary>
      <para>Contains the control point and end point for a quadratic Bezier segment.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_quadratic_bezier_segment" /></para>
    </summary>
  </comment>
  <comment id="D2D1_QUADRATIC_BEZIER_SEGMENT::point1">
    <summary>The control point of the quadratic Bezier segment.</summary>
  </comment>
  <comment id="D2D1_QUADRATIC_BEZIER_SEGMENT::point2">
    <summary>The end point of the quadratic Bezier segment.</summary>
  </comment>
  <comment id="IDWriteRenderingParams3::GetRenderingMode1">
    <summary>
      <para>Gets the rendering mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwriterenderingparams3-getrenderingmode1" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFileStream::GetFileSize">
    <summary>
      <para>Obtains the total size of a file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfilestream-getfilesize" /></para>
      <param name="fileSize">When this method returns, contains the total size of the file.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::SetNotificationCallback">
    <summary>
      <para>Sets the notification callback method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setnotificationcallback" /></para>
      <param name="callback">Pointer to the notification callback method.</param>
    </summary>
  </comment>
  <comment id="D2D1_BITMAP_PROPERTIES">
    <summary>
      <para>Describes the pixel format and dpi of a bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_bitmap_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BITMAP_PROPERTIES::pixelFormat">
    <summary>The bitmap's pixel format and alpha mode.</summary>
  </comment>
  <comment id="D2D1_BITMAP_PROPERTIES::dpiX">
    <summary>The horizontal dpi of the bitmap.</summary>
  </comment>
  <comment id="D2D1_BITMAP_PROPERTIES::dpiY">
    <summary>The vertical dpi of the bitmap.</summary>
  </comment>
  <comment id="IDWriteFontFaceReference::CreateFontFaceWithSimulations">
    <summary>
      <para>Creates a font face with alternate font simulations, for example, to explicitly simulate a bold font face out of a regular variant.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfacereference-createfontfacewithsimulations" /></para>
      <param name="fontFaceSimulationFlags">Font face simulation flags for algorithmic emboldening and italicization.</param>
      <param name="fontFace">Newly created font face object, or nullptr in the case of failure.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::EndDraw">
    <summary>
      <para>Ends drawing operations on the render target and indicates the current error state and associated tags.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-enddraw" /></para>
      <param name="tag1">When this method returns, contains the tag for drawing operations that caused errors or 0 if there were no errors. This parameter is passed uninitialized.</param>
      <param name="tag2">When this method returns, contains the tag for drawing operations that caused errors or 0 if there were no errors. This parameter is passed uninitialized.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderInfo::SetCached">
    <summary>
      <para>Specifies that the output of the transform in which the render information is encapsulated is or is not cached.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1renderinfo-setcached" /></para>
      <param name="isCached"><b>TRUE</b> if the output of the transform is cached; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapEncoder::SetColorContexts">
    <summary>
      <para>Sets the IWICColorContext objects for the encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-setcolorcontexts" /></para>
      <param name="cCount">The number of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> to set.</param>
      <param name="iColorContext">A pointer an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> pointer containing the color contexts to set for the encoder.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapClipper::Initialize">
    <summary>
      <para>Initializes the bitmap clipper with the provided parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapclipper-initialize" /></para>
      <param name="iSource">he input bitmap source.</param>
      <param name="prc">The rectangle of the bitmap source to clip.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataHandlerInfo::GetMetadataFormat">
    <summary>
      <para>Retrieves the metadata format of the metadata handler.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatahandlerinfo-getmetadataformat" /></para>
      <param name="pguidMetadataFormat">Pointer that receives the metadata format GUID.</param>
    </summary>
  </comment>
  <comment id="D2D1_BLEND">
    <summary>
      <para>Specifies how one of the color sources is to be derived and optionally specifies a preblend operation on the color source.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_blend" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BLEND::D2D1_BLEND_ZERO">
    <summary>The data source is black (0, 0, 0, 0). There is no preblend operation.</summary>
  </comment>
  <comment id="D2D1_BLEND::D2D1_BLEND_ONE">
    <summary>The data source is white (1, 1, 1, 1). There is no preblend operation.</summary>
  </comment>
  <comment id="D2D1_BLEND::D2D1_BLEND_SRC_COLOR">
    <summary>The data source is color data (RGB) from the second input of the blend transform. There is not a preblend operation.</summary>
  </comment>
  <comment id="D2D1_BLEND::D2D1_BLEND_INV_SRC_COLOR">
    <summary>The data source is color data (RGB) from second input of the blend transform. The preblend operation inverts the data, generating 1 - RGB.</summary>
  </comment>
  <comment id="D2D1_BLEND::D2D1_BLEND_SRC_ALPHA">
    <summary>The data source is alpha data (A) from second input of the blend transform. There is no preblend operation.</summary>
  </comment>
  <comment id="D2D1_BLEND::D2D1_BLEND_INV_SRC_ALPHA">
    <summary>The data source is alpha data (A) from the second input of the blend transform. The preblend operation inverts the data, generating 1 - A.</summary>
  </comment>
  <comment id="D2D1_BLEND::D2D1_BLEND_DEST_ALPHA">
    <summary>The data source is alpha data (A) from the first input of the blend transform. There is no preblend operation.</summary>
  </comment>
  <comment id="D2D1_BLEND::D2D1_BLEND_INV_DEST_ALPHA">
    <summary>The data source is alpha data (A) from the first input of the blend transform. The preblend operation inverts the data, generating 1 - A.</summary>
  </comment>
  <comment id="D2D1_BLEND::D2D1_BLEND_DEST_COLOR">
    <summary>The data source is color data from the first input of the blend transform. There is no preblend operation.</summary>
  </comment>
  <comment id="D2D1_BLEND::D2D1_BLEND_INV_DEST_COLOR">
    <summary>The data source is color data from the first input of the blend transform. The preblend operation inverts the data, generating 1 - RGB.</summary>
  </comment>
  <comment id="D2D1_BLEND::D2D1_BLEND_SRC_ALPHA_SAT">
    <summary>The data source is alpha data from the second input of the blend transform. The preblend operation clamps the data to 1 or less.</summary>
  </comment>
  <comment id="D2D1_BLEND::D2D1_BLEND_BLEND_FACTOR">
    <summary>The data source is the blend factor. There is no preblend operation.</summary>
  </comment>
  <comment id="D2D1_BLEND::D2D1_BLEND_INV_BLEND_FACTOR">
    <summary>The data source is the blend factor. The preblend operation inverts the blend factor, generating 1 - blend_factor.</summary>
  </comment>
  <comment id="ID2D1SvgGlyphStyle::SetFill">
    <summary>
      <para>Provides values to an SVG glyph for fill.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1svgglyphstyle-setfill" /></para>
      <param name="brush">Describes how the area is painted.  A null brush will cause the context-fill value to come from
          the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nf-d2d1_3-id2d1devicecontext4-drawtext(constwchar_uint32_idwritetextformat_constd2d1_rect_f__id2d1brush_id2d1svgglyphstyle_uint32_d2d1_draw_text_options_dwrite_measuring_mode)">defaultFillBrush</a>. If the defaultFillBrush is also null, the context-fill value will be 'none'.
          To set the ‘context-fill’ value, this method uses the provided brush with its opacity set to 1. To set the ‘context-fill-opacity’ value, this method uses the opacity of the provided brush.</param>
    </summary>
  </comment>
  <comment id="IDWriteFont1">
    <summary>
      <para>Represents a physical font in a font collection.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nn-dwrite_1-idwritefont1" /></para>
    </summary>
  </comment>
  <comment id="ID2D1GdiInteropRenderTarget::GetDC">
    <summary>
      <para>Retrieves the device context associated with this render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1gdiinteroprendertarget-getdc" /></para>
      <param name="mode">A value that specifies whether the device context should be cleared.</param>
      <param name="hdc">When this method returns, contains the device context associated with this render target. You must allocate storage for this parameter.</param>
    </summary>
  </comment>
  <comment id="IDWriteInlineObject::GetOverhangMetrics">
    <summary>
      <para>IDWriteTextLayout calls this callback function to get the visible extents (in DIPs) of the inline object. In the case of a simple bitmap, with no padding and no overhang, all the overhangs will simply be zeroes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwriteinlineobject-getoverhangmetrics" /></para>
      <param name="overhangs">Overshoot of visible extents (in DIPs) outside the object.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device4::GetMaximumColorGlyphCacheMemory">
    <summary>
      <para>Gets the maximum capacity of the color glyph cache.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device4-getmaximumcolorglyphcachememory" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFactory3">
    <summary>
      <para>The root factory interface for all DirectWrite objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefactory3" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontSet::GetPropertyOccurrenceCount">
    <summary>
      <para>Returns how many times a given property value occurs in the set.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontset-getpropertyoccurrencecount" /></para>
      <param name="property">Font property of interest.</param>
      <param name="propertyOccurrenceCount">Receives how many times the property occurs.</param>
    </summary>
  </comment>
  <comment id="ID2D1EllipseGeometry::GetEllipse">
    <summary>
      <para>Gets the D2D1_ELLIPSE structure that describes this ellipse geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1ellipsegeometry-getellipse" /></para>
      <param name="ellipse">When this method returns, contains the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ns-d2d1-d2d1_ellipse">D2D1_ELLIPSE</a> that describes the size and position of the ellipse. You must allocate storage for this parameter.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapEncoderInfo::CreateInstance">
    <summary>
      <para>Creates a new IWICBitmapEncoder instance.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoderinfo-createinstance" /></para>
      <param name="iBitmapEncoder">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapencoder">IWICBitmapEncoder</a> instance.</param>
    </summary>
  </comment>
  <comment id="IDWriteStringList::GetCount">
    <summary>
      <para>Gets the number of strings in the string list.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritestringlist-getcount" /></para>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext2::GetGradientMeshWorldBounds">
    <summary>
      <para>Returns the world bounds of a given gradient mesh.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext2-getgradientmeshworldbounds" /></para>
      <param name="gradientMesh">The gradient mesh whose world bounds will be calculated.</param>
      <param name="bounds">When this method returns, contains a pointer to the bounds of the gradient mesh, in device independent pixels (DIPs).</param>
    </summary>
  </comment>
  <comment id="WICMetadataHeader">
    <summary>
      <para>Represents metadata header.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/ns-wincodecsdk-wicmetadataheader" /></para>
    </summary>
  </comment>
  <comment id="WICMetadataHeader::Position">
    <summary>The position of the header.</summary>
  </comment>
  <comment id="WICMetadataHeader::Length">
    <summary>The length of the header.</summary>
  </comment>
  <comment id="WICMetadataHeader::Header">
    <summary>Pointer to the header.</summary>
  </comment>
  <comment id="WICMetadataHeader::DataOffset">
    <summary>The offset of the header.</summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_PROPERTIES">
    <summary>
      <para>Contains rendering options (hardware or software), pixel format, DPI information, remoting options, and Direct3D support requirements for a render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_render_target_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_PROPERTIES::type">
    <summary>A value that specifies whether the render target should force hardware or software rendering. A value of <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_render_target_type">D2D1_RENDER_TARGET_TYPE_DEFAULT</a> specifies that the render target should use hardware rendering if it is available; otherwise, it uses software rendering. Note that WIC bitmap render targets do not support hardware rendering.</summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_PROPERTIES::pixelFormat">
    <summary>The pixel format and alpha mode of the render target. You can use the <a href="https://docs.microsoft.com/windows/win32/api/d2d1helper/nf-d2d1helper-pixelformat">D2D1::PixelFormat</a> function to create a pixel format that specifies that Direct2D should select the pixel format and alpha mode for you. For a list of pixel formats and alpha modes supported by each render target, see <a href="https://docs.microsoft.com/windows/win32/Direct2D/supported-pixel-formats-and-alpha-modes">Supported Pixel Formats and Alpha Modes</a>.</summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_PROPERTIES::dpiX">
    <summary>The horizontal DPI of the render target.  To use the default DPI, set <i>dpiX</i> and <i>dpiY</i> to 0. For more information, see the Remarks section.</summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_PROPERTIES::dpiY">
    <summary>The vertical DPI of the render target. To use the default DPI, set <i>dpiX</i> and <i>dpiY</i> to 0.  For more information, see the Remarks section.</summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_PROPERTIES::usage">
    <summary>A value that specifies how the render target is remoted and whether it should be GDI-compatible.  Set to <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_render_target_usage">D2D1_RENDER_TARGET_USAGE_NONE</a> to create a render target that is not compatible with GDI and uses Direct3D command-stream remoting if it  is available.</summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_PROPERTIES::minLevel">
    <summary>A value that specifies the minimum Direct3D feature level required for hardware rendering. If the specified minimum level is not available, the render target uses software rendering if the <b>type </b> member is set to <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_render_target_type">D2D1_RENDER_TARGET_TYPE_DEFAULT</a>; if  <b>type </b> is set to to <b>D2D1_RENDER_TARGET_TYPE_HARDWARE</b>, render target creation fails. A value of <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_feature_level">D2D1_FEATURE_LEVEL_DEFAULT</a> indicates that Direct2D should determine whether the Direct3D feature level of the device is adequate. This field is used only when creating <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1hwndrendertarget">ID2D1HwndRenderTarget</a> and <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1dcrendertarget">ID2D1DCRenderTarget</a> objects.</summary>
  </comment>
  <comment id="IWICBitmapFrameDecode">
    <summary>
      <para>Defines methods for decoding individual image frames of an encoded file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapframedecode" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace1::GetGdiCompatibleGlyphAdvances">
    <summary>
      <para>Returns the pixel-aligned advances for a sequences of glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefontface1-getgdicompatibleglyphadvances" /></para>
      <param name="emSize">Logical size of the font in DIP units. A DIP
    ("device-independent pixel") equals 1/96 inch.</param>
      <param name="pixelsPerDip">Number of physical pixels per DIP. For
    example, if the DPI of the rendering surface is 96 this value is
    1.0f. If the DPI is 120, this value is 120.0f/96.</param>
      <param name="transform">Optional transform applied to the glyphs and
    their positions. This transform is applied after the scaling
    specified by the font size and pixelsPerDip.</param>
      <param name="useGdiNatural">When FALSE, the metrics are the same as
    GDI aliased text (DWRITE_MEASURING_MODE_GDI_CLASSIC). When TRUE,
    the metrics are the same as those measured by GDI using a font
    using CLEARTYPE_NATURAL_QUALITY (DWRITE_MEASURING_MODE_GDI_NATURAL).</param>
      <param name="isSideways">Retrieve the glyph's vertical advances rather
    than horizontal advances.</param>
      <param name="glyphCount">Total glyphs to retrieve adjustments for.</param>
      <param name="glyphIndices">An array of glyph id's to retrieve advances.</param>
      <param name="glyphAdvances">The returned advances in font design units for
    each glyph.</param>
    </summary>
  </comment>
  <comment id="D2D1_SIMPLE_COLOR_PROFILE">
    <summary>
      <para>Simple description of a color space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ns-d2d1_3-d2d1_simple_color_profile" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SIMPLE_COLOR_PROFILE::redPrimary">
    <summary>The XY coordinates of the red primary in CIEXYZ space.</summary>
  </comment>
  <comment id="D2D1_SIMPLE_COLOR_PROFILE::greenPrimary">
    <summary>The XY coordinates of the green primary in CIEXYZ space.</summary>
  </comment>
  <comment id="D2D1_SIMPLE_COLOR_PROFILE::bluePrimary">
    <summary>The XY coordinates of the blue primary in CIEXYZ space.</summary>
  </comment>
  <comment id="D2D1_SIMPLE_COLOR_PROFILE::whitePointXZ">
    <summary>The X/Z tristimulus values for the whitepoint, normalized for relative luminance.</summary>
  </comment>
  <comment id="D2D1_SIMPLE_COLOR_PROFILE::gamma">
    <summary>The gamma encoding to use for this color space.</summary>
  </comment>
  <comment id="IDWriteTextLayout::SetDrawingEffect">
    <summary>
      <para>Sets the application-defined drawing effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-setdrawingeffect" /></para>
      <param name="drawingEffect">Application-defined drawing effects that apply to the range. This data object will be passed back to the application's drawing callbacks for final rendering.</param>
      <param name="textRange">The text range to which this change applies.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory::CreateEllipsisTrimmingSign">
    <summary>
      <para>Creates an inline object for trimming, using an ellipsis as the omission sign.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-createellipsistrimmingsign" /></para>
      <param name="textFormat">A text format object, created with <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritefactory-createtextformat">CreateTextFormat</a>, used for text layout.</param>
      <param name="trimmingSign">When this method returns, contains an address of a pointer to the omission (that is, ellipsis trimming) sign created by this method.</param>
    </summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_RENDERING_INTENT">
    <summary>
      <para>Specifies which ICC rendering intent the Color management effect should use.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_colormanagement_rendering_intent" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_RENDERING_INTENT::D2D1_COLORMANAGEMENT_RENDERING_INTENT_PERCEPTUAL">
    <summary>The effect compresses or expands the full color gamut of the image to fill the color gamut of the device, 
          so that gray balance is preserved but colorimetric accuracy may not be preserved.</summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_RENDERING_INTENT::D2D1_COLORMANAGEMENT_RENDERING_INTENT_RELATIVE_COLORIMETRIC">
    <summary>The effect preserves the chroma of colors in the image at the possible expense of hue and lightness.</summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_RENDERING_INTENT::D2D1_COLORMANAGEMENT_RENDERING_INTENT_SATURATION">
    <summary>The effect adjusts colors that fall outside the range of colors the output device renders to the closest color available. It does not preserve the white point.</summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_RENDERING_INTENT::D2D1_COLORMANAGEMENT_RENDERING_INTENT_ABSOLUTE_COLORIMETRIC">
    <summary>The effect adjusts any colors that fall outside the range that the output device can render to the closest color that can be rendered. The effect does not change the other colors and preserves the white point.</summary>
  </comment>
  <comment id="WICJpegCommentProperties">
    <summary>
      <para>Specifies the JPEG comment properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicjpegcommentproperties" /></para>
    </summary>
  </comment>
  <comment id="WICJpegCommentProperties::WICJpegCommentText">
    <summary>Indicates the metadata property is comment text.</summary>
  </comment>
  <comment id="IDWriteFontFace1::GetCaretMetrics">
    <summary>
      <para>Gets caret metrics for the font in design units.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefontface1-getcaretmetrics" /></para>
      <param name="caretMetrics">A pointer to the <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ns-dwrite_1-dwrite_caret_metrics">DWRITE_CARET_METRICS</a> structure that is filled.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer1::GetJustifiedGlyphs">
    <summary>
      <para>Fills in new glyphs for complex scripts where justification increased the advances of glyphs, such as Arabic with kashida.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextanalyzer1-getjustifiedglyphs" /></para>
      <param name="fontFace">Font face used for shaping.

May be NULL.</param>
      <param name="fontEmSize">Font em size used for the glyph run.</param>
      <param name="scriptAnalysis">Script of the text from the itemizer.</param>
      <param name="textLength">Length of the text.</param>
      <param name="glyphCount">Number of glyphs.</param>
      <param name="maxGlyphCount">Maximum number of output glyphs allocated
    by caller.</param>
      <param name="clusterMap">Clustermap produced from shaping.</param>
      <param name="glyphIndices">Original glyphs produced from shaping.</param>
      <param name="glyphAdvances">Original glyph advances produced from shaping.</param>
      <param name="justifiedGlyphAdvances">Justified glyph advances from
    <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/nf-dwrite_1-idwritetextanalyzer1-justifyglyphadvances">IDWriteTextAnalyzer1::JustifyGlyphAdvances</a>.</param>
      <param name="justifiedGlyphOffsets">Justified glyph offsets from
    <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/nf-dwrite_1-idwritetextanalyzer1-justifyglyphadvances">IDWriteTextAnalyzer1::JustifyGlyphAdvances</a>.</param>
      <param name="glyphProperties">Properties of each glyph, from <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-getglyphs">IDWriteTextAnalyzer::GetGlyphs</a>.</param>
      <param name="actualGlyphCount">The new glyph count written to the
    modified arrays, or the needed glyph count if the size is not
    large enough.</param>
      <param name="modifiedClusterMap">Updated clustermap.</param>
      <param name="modifiedGlyphIndices">Updated glyphs with new glyphs
    inserted where needed.</param>
      <param name="modifiedGlyphAdvances">Updated glyph advances.</param>
      <param name="modifiedGlyphOffsets">Updated glyph offsets.</param>
    </summary>
  </comment>
  <comment id="D2D1_EMBOSS_PROP">
    <summary>
      <para>Identifiers for properties of the Emboss effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_emboss_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_EMBOSS_PROP::D2D1_EMBOSS_PROP_HEIGHT">
    <summary>The D2D1_EMBOSS_PROP_HEIGHT property is a float value controlling the strength of the embossing effect.  The allowed range is 0.0 to 10.0.  The default value is 1.0.</summary>
  </comment>
  <comment id="D2D1_EMBOSS_PROP::D2D1_EMBOSS_PROP_DIRECTION">
    <summary>The D2D1_EMBOSS_PROP_DIRECTION property is a float value specifying the light direction used to create the effect. The allowed range is 0.0 to 360.0.  The default value is 0.0.</summary>
  </comment>
  <comment id="IDWriteFont2::IsColorFont">
    <summary>
      <para>Enables determining if a color rendering path is potentially necessary.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefont2-iscolorfont" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextRenderer::DrawInlineObject">
    <summary>
      <para>IDWriteTextLayout::Draw calls this application callback when it needs to draw an inline object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextrenderer-drawinlineobject" /></para>
      <param name="clientDrawingContext">The application-defined drawing context passed to IDWriteTextLayout::<a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwriteinlineobject-draw">Draw</a>.</param>
      <param name="originX">X-coordinate at the top-left corner of the inline object.</param>
      <param name="originY">Y-coordinate at the top-left corner of the inline object.</param>
      <param name="inlineObject">The application-defined inline object set using <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritetextformat">IDWriteTextFormat</a>::<a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextlayout-setinlineobject">SetInlineObject</a>.</param>
      <param name="isSideways">A Boolean flag that indicates whether the object's baseline runs alongside the baseline axis of the line.</param>
      <param name="isRightToLeft">A Boolean flag that indicates whether the object is in a right-to-left context, hinting that the drawing may want to mirror the normal image.</param>
      <param name="clientDrawingEffect">Application-defined drawing effects for the glyphs to render. Usually this argument represents effects such as the foreground brush filling the interior of a line.</param>
    </summary>
  </comment>
  <comment id="ID2D1SolidColorBrush">
    <summary>
      <para>Paints an area with a solid color.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1solidcolorbrush" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ImageBrush::GetImage">
    <summary>
      <para>Gets the image associated with the image brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-getimage" /></para>
      <param name="image">When this method returns, contains the address of a pointer to the image associated with  this brush.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink2::DrawGdiMetafile">
    <summary>
      <para>Draws a metafile to the command sink using the given source and destination rectangles.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1commandsink2-drawgdimetafile" /></para>
      <param name="gdiMetafile">The metafile to draw.</param>
      <param name="destinationRectangle">The rectangle in the target where the metafile will be drawn, relative to the upper left corner (defined in DIPs). If NULL is specified, the destination rectangle is the size of the target.</param>
      <param name="sourceRectangle">The rectangle of the source metafile that will be drawn, relative to the upper left corner (defined in DIPs). 
     If NULL is specified, the source rectangle is the value returned by <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nf-d2d1_3-id2d1gdimetafile1-getsourcebounds">ID2D1GdiMetafile1::GetSourceBounds</a>.</param>
    </summary>
  </comment>
  <comment id="D2D1_FACTORY_TYPE">
    <summary>
      <para>Specifies whether Direct2D provides synchronization for an ID2D1Factory and the resources it creates, so that they may be safely accessed from multiple threads.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_factory_type" /></para>
    </summary>
  </comment>
  <comment id="D2D1_FACTORY_TYPE::D2D1_FACTORY_TYPE_SINGLE_THREADED">
    <summary>No synchronization is provided for accessing or writing to the factory or the objects it creates. If the factory or the objects are called from multiple threads, it is up to the application to provide access locking.</summary>
  </comment>
  <comment id="D2D1_FACTORY_TYPE::D2D1_FACTORY_TYPE_MULTI_THREADED">
    <summary>Direct2D provides synchronization for accessing and writing to the factory and the objects it creates, enabling safe access from multiple threads.</summary>
  </comment>
  <comment id="ID2D1DeviceContext5">
    <summary>
      <para>This interface performs all the same functions as the ID2D1DeviceContext4 interface, plus it enables the creation of color contexts and Svg documents.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1devicecontext5" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COLORMATRIX_PROP">
    <summary>
      <para>Identifiers for the properties of the Color matrix effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_colormatrix_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COLORMATRIX_PROP::D2D1_COLORMATRIX_PROP_COLOR_MATRIX">
    <summary>A 5x4 matrix of float values. The elements in the matrix are not bounded and are unitless.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/Direct2D/d2d1-matrix-5x4-f">D2D1_MATRIX_5X4_F</a>.

The default value is the identity matrix, Matrix5x4F(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0).</summary>
  </comment>
  <comment id="D2D1_COLORMATRIX_PROP::D2D1_COLORMATRIX_PROP_ALPHA_MODE">
    <summary>The alpha mode of the output. 
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_colormatrix_alpha_mode">D2D1_COLORMATRIX_ALPHA_MODE</a>.

The default value is D2D1_COLORMATRIX_ALPHA_MODE_PREMULTIPLIED.</summary>
  </comment>
  <comment id="D2D1_COLORMATRIX_PROP::D2D1_COLORMATRIX_PROP_CLAMP_OUTPUT">
    <summary>Whether the effect clamps color values to between 0 and 1 before the effect passes the values to the next effect in the graph. 
          The effect clamps the values before it premultiplies the alpha.
          

If you set this to TRUE the effect will clamp the values. If you set this to FALSE, the effect will not clamp the color values, 
          but other effects and the output surface may clamp the values if they are not of high enough precision.

The type is BOOL.

The default value is FALSE.</summary>
  </comment>
  <comment id="ID2D1Factory::CreateGeometryGroup">
    <summary>
      <para>Creates an ID2D1GeometryGroup, which is an object that holds other geometries.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1factory-creategeometrygroup" /></para>
      <param name="fillMode">A value that specifies the rule that a composite shape uses to determine whether a given point is part of the geometry.</param>
      <param name="geometries">An array containing the geometry objects to add to the geometry group. The number of elements in this array is indicated by the <i>geometriesCount</i> parameter.</param>
      <param name="geometriesCount">The number of elements in <i>geometries</i>.</param>
      <param name="geometryGroup">When this method returns, contains the address of a pointer to the geometry group created by this method.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::PopLayer">
    <summary>
      <para>Stops redirecting drawing operations to the layer that is specified by the last PushLayer call.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-poplayer" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer::AnalyzeNumberSubstitution">
    <summary>
      <para>Analyzes a text range for spans where number substitution is applicable, reading attributes from the source and reporting substitutable ranges to the sink callback SetNumberSubstitution.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalyzer-analyzenumbersubstitution" /></para>
      <param name="analysisSource">The source object to analyze.</param>
      <param name="textPosition">The starting position within the source object.</param>
      <param name="textLength">The length to analyze.</param>
      <param name="analysisSink">A pointer to the sink callback object that receives the text analysis.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapDecoder::GetFrame">
    <summary>
      <para>Retrieves the specified frame of the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getframe" /></para>
      <param name="index">The particular frame to retrieve.</param>
      <param name="iBitmapFrame">A pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframedecode">IWICBitmapFrameDecode</a>.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::CreateColorContextFromFilename">
    <summary>
      <para>Creates a color context by loading it from the specified filename. The profile bytes are the contents of the file specified by Filename.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-createcolorcontextfromfilename" /></para>
      <param name="filename">The path to the file containing the profile bytes to initialize the color context with.</param>
      <param name="colorContext">When this method returns, contains the address of a pointer to a new color context.</param>
    </summary>
  </comment>
  <comment id="IDWriteInlineObject">
    <summary>
      <para>Wraps an application-defined inline graphic, allowing DWrite to query metrics as if the graphic were a glyph inline with the text.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwriteinlineobject" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapPattern">
    <summary>
      <para>Contains members that identify a pattern within an image file which can be used to identify a particular format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicbitmappattern" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapPattern::Position">
    <summary>The offset the pattern is located in the file.</summary>
  </comment>
  <comment id="WICBitmapPattern::Length">
    <summary>The pattern length.</summary>
  </comment>
  <comment id="WICBitmapPattern::Pattern">
    <summary>The actual pattern.</summary>
  </comment>
  <comment id="WICBitmapPattern::Mask">
    <summary>The pattern mask.</summary>
  </comment>
  <comment id="WICBitmapPattern::EndOfStream">
    <summary>The end of the stream.</summary>
  </comment>
  <comment id="ID2D1SimplifiedGeometrySink::Close">
    <summary>
      <para>Closes the geometry sink, indicates whether it is in an error state, and resets the sink's error state.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1simplifiedgeometrysink-close" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RadialGradientBrush::GetGradientStopCollection">
    <summary>
      <para>Retrieves the ID2D1GradientStopCollection associated with this radial gradient brush object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-getgradientstopcollection" /></para>
      <param name="gradientStopCollection">The  <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1gradientstopcollection">ID2D1GradientStopCollection</a> object associated with this linear gradient brush object. This parameter is passed uninitialized.</param>
    </summary>
  </comment>
  <comment id="ID2D1PrintControl::AddPage">
    <summary>
      <para>Converts Direct2D primitives in the passed-in command list into a fixed page representation for use by the print subsystem.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1printcontrol-addpage" /></para>
      <param name="commandList">The command list that contains the rendering operations.</param>
      <param name="pageSize">The size of the page to add.</param>
      <param name="pagePrintTicketStream">The print ticket stream.</param>
      <param name="tag1">Contains the first label for subsequent drawing operations. This parameter is passed uninitialized. If NULL is specified, no value is retrieved for this parameter.</param>
      <param name="tag2">Contains the second label for subsequent drawing operations. This parameter is passed uninitialized. If NULL is specified, no value is retrieved for this parameter.</param>
    </summary>
  </comment>
  <comment id="WICPngBkgdProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) background (bKGD) chunk metadata properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpngbkgdproperties" /></para>
    </summary>
  </comment>
  <comment id="WICPngBkgdProperties::WICPngBkgdBackgroundColor">
    <summary>Indicates the background color. There are three possible types, depending on the image's pixel format.</summary>
  </comment>
  <comment id="ID2D1GradientMesh::GetPatchCount">
    <summary>
      <para>Returns the number of patches that make up this gradient mesh.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gradientmesh-getpatchcount" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SCALE_PROP">
    <summary>
      <para>Identifiers for properties of the Scale effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_scale_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SCALE_PROP::D2D1_SCALE_PROP_SCALE">
    <summary>The scale amount in the X and Y direction as a ratio of the output size to the input size.
            

This property a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a> defined as: (X scale, Y scale). 
            The scale amounts are FLOAT, unitless, and must be positive or 0.

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is {1.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_SCALE_PROP::D2D1_SCALE_PROP_CENTER_POINT">
    <summary>The image scaling center point. This property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a> defined as: (point X, point Y). The units are in DIPs.
            

Use the center point property to scale around a point other than the upper-left corner.

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is {0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_SCALE_PROP::D2D1_SCALE_PROP_INTERPOLATION_MODE">
    <summary>The interpolation mode the effect uses to scale the image. There are 6 scale modes that range in quality and speed.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_scale_interpolation_mode">D2D1_SCALE_INTERPOLATION_MODE</a>.

The default value is D2D1_SCALE_INTERPOLATION_MODE_LINEAR.</summary>
  </comment>
  <comment id="D2D1_SCALE_PROP::D2D1_SCALE_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard. 
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_mode">D2D1_BORDER_MODE</a>.

The default value is D2D1_BORDER_MODE_SOFT.</summary>
  </comment>
  <comment id="D2D1_SCALE_PROP::D2D1_SCALE_PROP_SHARPNESS">
    <summary>In the high quality cubic interpolation mode, the sharpness level of the scaling filter as a float between 0 and 1. The values are unitless. 
            You can use sharpness to adjust the quality of an image when you scale the image down.
            

The sharpness factor affects the shape of the kernel. The higher the sharpness factor, the smaller the kernel.

<div class="alert"><b>Note</b>  This property affects only the high quality cubic interpolation mode.</div>
<div> </div>
The type is FLOAT.

The default value is 0.0f.</summary>
  </comment>
  <comment id="ID2D1DeviceContext3">
    <summary>
      <para>This interface performs all the same functions as the ID2D1DeviceContext2 interface, plus it enables functionality for creating and drawing sprite batches.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1devicecontext3" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::SetTrimming">
    <summary>
      <para>Sets trimming options for text overflowing the layout width.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-settrimming" /></para>
      <param name="trimmingOptions">Text trimming options.</param>
      <param name="trimmingSign">Application-defined omission sign. This parameter may be <b>NULL</b>. See <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwriteinlineobject">IDWriteInlineObject</a> for more information.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetMetrics">
    <summary>
      <para>Retrieves overall metrics for the formatted string.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getmetrics" /></para>
      <param name="textMetrics">When this method returns, contains the measured distances of text and associated content after being formatted.</param>
    </summary>
  </comment>
  <comment id="WICJpegIndexingOptions">
    <summary>
      <para>Specifies the options for indexing a JPEG image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicjpegindexingoptions" /></para>
    </summary>
  </comment>
  <comment id="WICJpegIndexingOptions::WICJpegIndexingOptionsGenerateOnDemand">
    <summary>Index generation is deferred until <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels">IWICBitmapSource::CopyPixels</a> is called on the image.</summary>
  </comment>
  <comment id="WICJpegIndexingOptions::WICJpegIndexingOptionsGenerateOnLoad">
    <summary>Index generation is performed when the when the image is initially loaded.</summary>
  </comment>
  <comment id="WICJpegIndexingOptions::WICJpegIndexingOptions_FORCE_DWORD">
    <summary>Forces this enumeration to compile to 32 bits in size. Without this value, some compilers would allow this enumeration to compile to a size other than 32 bits. This value is not used.</summary>
  </comment>
  <comment id="ID2D1RenderTarget::GetDpi">
    <summary>
      <para>Return the render target's dots per inch (DPI).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-getdpi" /></para>
      <param name="dpiX">When this method returns, contains the horizontal DPI of the render target. This parameter is passed uninitialized.</param>
      <param name="dpiY">When this method returns, contains the vertical DPI of the render target. This parameter is passed uninitialized.</param>
    </summary>
  </comment>
  <comment id="D2D1_HISTOGRAM_PROP">
    <summary>
      <para>Identifiers for properties of the Histogram effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_histogram_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_HISTOGRAM_PROP::D2D1_HISTOGRAM_PROP_NUM_BINS">
    <summary>Specifies the number of bins used for the histogram. The range of intensity values that fall into a particular bucket depend on the number of specified buckets. 
          

The type is UINT32.

The default is 256.</summary>
  </comment>
  <comment id="D2D1_HISTOGRAM_PROP::D2D1_HISTOGRAM_PROP_CHANNEL_SELECT">
    <summary>Specifies the channel used to generate the histogram. This effect has a single data output corresponding to the specified channel.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_channel_selector">D2D1_CHANNEL_SELECTOR</a>.

The default is D2D1_CHANNEL_SELECTOR_R.</summary>
  </comment>
  <comment id="D2D1_HISTOGRAM_PROP::D2D1_HISTOGRAM_PROP_HISTOGRAM_OUTPUT">
    <summary>The output array.
          

The type is FLOAT[].</summary>
  </comment>
  <comment id="D2D1_FIGURE_BEGIN">
    <summary>
      <para>Indicates whether a specific ID2D1SimplifiedGeometrySink figure is filled or hollow.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_figure_begin" /></para>
    </summary>
  </comment>
  <comment id="D2D1_FIGURE_BEGIN::D2D1_FIGURE_BEGIN_FILLED">
    <summary>Indicates the figure will be filled by the FillGeometry (<a href="https://docs.microsoft.com/windows/win32/api/d2d1_1/nf-d2d1_1-id2d1commandsink-fillgeometry">ID2D1CommandSink::FillGeometry</a> 
          or <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1rendertarget-fillgeometry">ID2D1RenderTarget::FillGeometry</a>) method.</summary>
  </comment>
  <comment id="D2D1_FIGURE_BEGIN::D2D1_FIGURE_BEGIN_HOLLOW">
    <summary>Indicates the figure will not be filled by the FillGeometry (<a href="https://docs.microsoft.com/windows/win32/api/d2d1_1/nf-d2d1_1-id2d1commandsink-fillgeometry">ID2D1CommandSink::FillGeometry</a> 
          or <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1rendertarget-fillgeometry">ID2D1RenderTarget::FillGeometry</a>) method and will only consist of an outline. 
          Moreover, the bounds of a hollow figure are zero. 
          D2D1_FIGURE_BEGIN_HOLLOW should be used for stroking, or for other geometry operations.</summary>
  </comment>
  <comment id="IDWriteFont::HasCharacter">
    <summary>
      <para>Determines whether the font supports a specified character.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefont-hascharacter" /></para>
      <param name="unicodeValue">A Unicode (UCS-4) character value for the method to inspect.</param>
      <param name="exists">When this method returns, <b>TRUE</b> if the font supports the specified character; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="ID2D1SimplifiedGeometrySink">
    <summary>
      <para>Describes a geometric path that does not contain quadratic bezier curves or arcs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1simplifiedgeometrysink" /></para>
    </summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE">
    <summary>
      <para>Specifies the types of properties supported by the Direct2D property interface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_property_type" /></para>
    </summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_UNKNOWN">
    <summary>An unknown property.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_STRING">
    <summary>An arbitrary-length string.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_BOOL">
    <summary>A 32-bit integer value constrained to be either 0 or 1.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_UINT32">
    <summary>An unsigned 32-bit integer.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_INT32">
    <summary>A signed 32-bit integer.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_FLOAT">
    <summary>A 32-bit float.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_VECTOR2">
    <summary>Two 32-bit float values.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_VECTOR3">
    <summary>Three 32-bit float values.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_VECTOR4">
    <summary>Four 32-bit float values.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_BLOB">
    <summary>An arbitrary number of bytes.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_IUNKNOWN">
    <summary>A returned COM or nano-COM interface.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_ENUM">
    <summary>An enumeration. The value should be treated as a <b>UINT32</b> with a defined array of fields to specify the bindings to human-readable strings.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_ARRAY">
    <summary>An enumeration. The value is the count of sub-properties in the array. The set of array elements will be contained in the sub-property.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_CLSID">
    <summary>A CLSID.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_MATRIX_3X2">
    <summary>A 3x2 matrix of  float values.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_MATRIX_4X3">
    <summary>A 4x2 matrix of  float values.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_MATRIX_4X4">
    <summary>A 4x4 matrix of  float values.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_MATRIX_5X4">
    <summary>A 5x4 matrix of  float values.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_TYPE::D2D1_PROPERTY_TYPE_COLOR_CONTEXT">
    <summary>A nano-COM color context interface pointer.</summary>
  </comment>
  <comment id="ID2D1DrawingStateBlock::GetDescription">
    <summary>
      <para>Retrieves the antialiasing mode, transform, and tags portion of the drawing state.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1drawingstateblock-getdescription" /></para>
      <param name="stateDescription">When this method returns, contains the antialiasing mode, transform, and tags portion of the drawing state. You must allocate storage for this parameter.</param>
    </summary>
  </comment>
  <comment id="ID2D1GeometrySink::AddLine">
    <summary>
      <para>Creates a line segment between the current point and the specified end point and adds it to the geometry sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1geometrysink-addline" /></para>
      <param name="point">The end point of the line to draw.</param>
    </summary>
  </comment>
  <comment id="ID2D1Layer">
    <summary>
      <para>Represents the backing store required to render a layer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1layer" /></para>
    </summary>
  </comment>
  <comment id="ID2D1TransformGraph::RemoveNode">
    <summary>
      <para>Removes the provided node from the transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-removenode" /></para>
      <param name="node">The node that will be removed from the transform graph.</param>
    </summary>
  </comment>
  <comment id="ID2D1BorderTransform::GetExtendModeX">
    <summary>
      <para>Gets the extend mode in the x direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1bordertransform-getextendmodex" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFactory">
    <summary>
      <para>Used to create all subsequent DirectWrite objects. This interface is the root factory interface for all DirectWrite objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritefactory" /></para>
    </summary>
  </comment>
  <comment id="IDWriteRenderingParams2::GetGridFitMode">
    <summary>
      <para>Gets the grid fitting mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwriterenderingparams2-getgridfitmode" /></para>
    </summary>
  </comment>
  <comment id="WICPngGamaProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) gAMA chunk metadata properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpnggamaproperties" /></para>
    </summary>
  </comment>
  <comment id="WICPngGamaProperties::WICPngGamaGamma">
    <summary>[VT_UI4] Indicates the gamma value.</summary>
  </comment>
  <comment id="D2D1_GEOMETRY_SIMPLIFICATION_OPTION">
    <summary>
      <para>Specifies how a geometry is simplified to an ID2D1SimplifiedGeometrySink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_geometry_simplification_option" /></para>
    </summary>
  </comment>
  <comment id="D2D1_GEOMETRY_SIMPLIFICATION_OPTION::D2D1_GEOMETRY_SIMPLIFICATION_OPTION_CUBICS_AND_LINES">
    <summary>The output can contain cubic Bezier curves and line segments.</summary>
  </comment>
  <comment id="D2D1_GEOMETRY_SIMPLIFICATION_OPTION::D2D1_GEOMETRY_SIMPLIFICATION_OPTION_LINES">
    <summary>The output is flattened so that it contains only line segments.</summary>
  </comment>
  <comment id="ID2D1Effect">
    <summary>
      <para>Represents a basic image-processing construct in Direct2D.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1effect" /></para>
    </summary>
  </comment>
  <comment id="WICCreateBitmapFromSectionEx">
    <summary>
      <para>Returns a IWICBitmapSource that is backed by the pixels of a Windows Graphics Device Interface (GDI) section handle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-wiccreatebitmapfromsectionex" /></para>
      <param name="width">The width of the bitmap pixels.</param>
      <param name="height">The height of the bitmap pixels.</param>
      <param name="pixelFormat">The pixel format of the bitmap.</param>
      <param name="hSection">The section handle. This is a file mapping object handle returned by the <a href="https://docs.microsoft.com/windows/desktop/api/winbase/nf-winbase-createfilemappinga">CreateFileMapping</a> function.</param>
      <param name="stride">The byte count of each scanline.</param>
      <param name="offset">The offset into the section.</param>
      <param name="desiredAccessLevel">The desired access level.</param>
      <param name="iBitmap">A pointer that receives the bitmap.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink2::DrawInk">
    <summary>
      <para>Renders the given ink object using the given brush and ink style.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1commandsink2-drawink" /></para>
      <param name="ink">The ink object to be rendered.</param>
      <param name="brush">The brush with which to render the ink object.</param>
      <param name="inkStyle">The ink style to use when rendering the ink object.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext6">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1DeviceContext5 interface, plus it enables access to the BlendImage method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1devicecontext6" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace3::GetRecommendedRenderingMode">
    <summary>
      <para>Determines the recommended text rendering and grid-fit mode to be used based on the font, size, world transform, and measuring mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface3-getrecommendedrenderingmode" /></para>
      <param name="fontEmSize">Logical font size in DIPs.</param>
      <param name="dpiX">Number of pixels per logical inch in the horizontal direction.</param>
      <param name="dpiY">Number of pixels per logical inch in the vertical direction.</param>
      <param name="transform">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ns-dwrite-dwrite_matrix">DWRITE_MATRIX</a> structure that describes the world transform.</param>
      <param name="isSideways">Specifies whether the font is sideways. <b>TRUE</b> if the font is sideways; otherwise, <b>FALSE</b>.</param>
      <param name="outlineThreshold">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ne-dwrite_1-dwrite_outline_threshold">DWRITE_OUTLINE_THRESHOLD</a>-typed value that specifies the quality of the graphics system's outline rendering, affects the size threshold above which outline rendering is used.</param>
      <param name="measuringMode">A <a href="https://docs.microsoft.com/windows/win32/api/dcommon/ne-dcommon-dwrite_measuring_mode">DWRITE_MEASURING_MODE</a>-typed value that specifies  the method used to measure during text layout. For proper glyph spacing, this method returns a rendering mode that is compatible with the specified measuring mode.</param>
      <param name="renderingParams">A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwriterenderingparams">IDWriteRenderingParams</a> interface for the rendering parameters object. This parameter is necessary in case the rendering parameters object overrides the rendering mode.</param>
      <param name="renderingMode">A pointer to a variable that receives a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_3/ne-dwrite_3-dwrite_rendering_mode1">DWRITE_RENDERING_MODE1</a>-typed value for the recommended rendering mode.</param>
      <param name="gridFitMode">A pointer to a variable that receives a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_2/ne-dwrite_2-dwrite_grid_fit_mode">DWRITE_GRID_FIT_MODE</a>-typed value for the recommended grid-fit mode.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::SetWordWrapping">
    <summary>
      <para>Sets the word wrapping option.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-setwordwrapping" /></para>
      <param name="wordWrapping">The word wrapping option being set for a paragraph; see <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_word_wrapping">DWRITE_WORD_WRAPPING</a> for more information.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontCollectionLoader::CreateEnumeratorFromKey">
    <summary>
      <para>Creates a font file enumerator object that encapsulates a collection of font files. The font system calls back to this interface to create a font collection.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontcollectionloader-createenumeratorfromkey" /></para>
      <param name="factory">Pointer to the <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefactory">IDWriteFactory</a> object that was used to create the current font collection.</param>
      <param name="collectionKey">A font collection key that uniquely identifies the collection of font files within
     the scope of the font collection loader being used. The buffer allocated for this key must be at least  the size, in bytes, specified by <i>collectionKeySize</i>.</param>
      <param name="collectionKeySize">The size of the font collection key, in bytes.</param>
      <param name="fontFileEnumerator">When this method returns, contains the address of  a pointer to the newly created font file enumerator.</param>
    </summary>
  </comment>
  <comment id="WICPngFilterOption">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) filters available for compression optimization.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpngfilteroption" /></para>
    </summary>
  </comment>
  <comment id="WICPngFilterOption::WICPngFilterUnspecified">
    <summary>Indicates an unspecified PNG filter. This enables WIC to algorithmically choose the best filtering option for the image.</summary>
  </comment>
  <comment id="WICPngFilterOption::WICPngFilterNone">
    <summary>Indicates no PNG filter.</summary>
  </comment>
  <comment id="WICPngFilterOption::WICPngFilterSub">
    <summary>Indicates a PNG sub filter.</summary>
  </comment>
  <comment id="WICPngFilterOption::WICPngFilterUp">
    <summary>Indicates a PNG up filter.</summary>
  </comment>
  <comment id="WICPngFilterOption::WICPngFilterAverage">
    <summary>Indicates a PNG average filter.</summary>
  </comment>
  <comment id="WICPngFilterOption::WICPngFilterPaeth">
    <summary>Indicates a PNG paeth filter.</summary>
  </comment>
  <comment id="WICPngFilterOption::WICPngFilterAdaptive">
    <summary>Indicates a PNG adaptive filter. This enables WIC to choose the best filtering mode on a per-scanline basis.</summary>
  </comment>
  <comment id="IDWriteFontFace3::AreCharactersLocal">
    <summary>
      <para>Determines whether the specified characters are local.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface3-arecharacterslocal" /></para>
      <param name="characters">Array of characters.</param>
      <param name="characterCount">The number of elements in the character array.</param>
      <param name="enqueueIfNotLocal">Specifies whether to enqueue a download request    
       if any of the specified characters are not local.</param>
      <param name="isLocal">Receives TRUE if all of the specified characters are local,    
       FALSE if any of the specified characters are remote.</param>
    </summary>
  </comment>
  <comment id="ID2D1TransformGraph">
    <summary>
      <para>Represents a graph of transform nodes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1transformgraph" /></para>
    </summary>
  </comment>
  <comment id="WICRawCapabilities">
    <summary>
      <para>Specifies the capability support of a raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicrawcapabilities" /></para>
    </summary>
  </comment>
  <comment id="WICRawCapabilities::WICRawCapabilityNotSupported">
    <summary>The capability is not supported.</summary>
  </comment>
  <comment id="WICRawCapabilities::WICRawCapabilityGetSupported">
    <summary>The capability supports only get operations.</summary>
  </comment>
  <comment id="WICRawCapabilities::WICRawCapabilityFullySupported">
    <summary>The capability supports get and set operations.</summary>
  </comment>
  <comment id="ID2D1EffectContext::IsShaderLoaded">
    <summary>
      <para>This tests to see if the given shader is loaded.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-isshaderloaded" /></para>
      <param name="shaderId">The unique id that identifies the shader.</param>
    </summary>
  </comment>
  <comment id="D2D1_WINDOW_STATE">
    <summary>
      <para>Describes whether a window is occluded.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_window_state" /></para>
    </summary>
  </comment>
  <comment id="D2D1_WINDOW_STATE::D2D1_WINDOW_STATE_NONE">
    <summary>The window is not occluded.</summary>
  </comment>
  <comment id="D2D1_WINDOW_STATE::D2D1_WINDOW_STATE_OCCLUDED">
    <summary>The window is occluded.</summary>
  </comment>
  <comment id="IWICImagingFactory::CreateBitmapFromHICON">
    <summary>
      <para>Creates an IWICBitmap from an icon handle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromhicon" /></para>
      <param name="hIcon">The icon handle to create the new bitmap from.</param>
      <param name="iBitmap">A pointer that receives a pointer to the new bitmap.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::FindVertexBuffer">
    <summary>
      <para>This finds the given vertex buffer if it has already been created with ID2D1EffectContext::CreateVertexBuffer with the same GUID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-findvertexbuffer" /></para>
      <param name="resourceId">The unique id that identifies the vertex buffer.</param>
      <param name="buffer">The returned vertex buffer that can be used as a resource in a <a href="https://docs.microsoft.com/windows/desktop/Direct2D/direct2d-portal">Direct2D</a> effect.</param>
    </summary>
  </comment>
  <comment id="IDWriteFont::CreateFontFace">
    <summary>
      <para>Creates a font face object for the font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefont-createfontface" /></para>
      <param name="fontFace">When this method returns, contains an address of a pointer to the newly created font face object.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::IsDxgiFormatSupported">
    <summary>
      <para>Indicates whether the format is supported by the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-isdxgiformatsupported" /></para>
      <param name="format">The DXGI format to check.</param>
    </summary>
  </comment>
  <comment id="D2D1CreateDevice">
    <summary>
      <para>Creates a new Direct2D device associated with the provided DXGI device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-d2d1createdevice" /></para>
      <param name="dxgiDevice">The DXGI device the Direct2D device is associated with.</param>
      <param name="creationProperties">The properties to apply to the Direct2D device.</param>
      <param name="d2dDevice">When this function returns, contains the address of a pointer to a Direct2D device.</param>
    </summary>
  </comment>
  <comment id="IWICComponentInfo::GetComponentType">
    <summary>
      <para>Retrieves the component's WICComponentType.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getcomponenttype" /></para>
      <param name="type">A pointer that receives the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccomponenttype">WICComponentType</a>.</param>
    </summary>
  </comment>
  <comment id="WICRawToneCurve">
    <summary>
      <para>Represents a raw image tone curve.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicrawtonecurve" /></para>
    </summary>
  </comment>
  <comment id="WICRawToneCurve::cPoints">
    <summary>The number of tone curve points.</summary>
  </comment>
  <comment id="WICRawToneCurve::aPoints">
    <summary>The array of tone curve points.</summary>
  </comment>
  <comment id="ID2D1RadialGradientBrush::GetRadiusY">
    <summary>
      <para>Retrieves the y-radius of the gradient ellipse.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-getradiusy" /></para>
    </summary>
  </comment>
  <comment id="IDWriteRenderingParams3">
    <summary>
      <para>Represents text rendering settings for glyph rasterization and filtering.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwriterenderingparams3" /></para>
    </summary>
  </comment>
  <comment id="IWICMetadataHandlerInfo::GetDeviceModels">
    <summary>
      <para>Retrieves the device models that support the metadata handler.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatahandlerinfo-getdevicemodels" /></para>
      <param name="cchDeviceModels">The length of the <i>wzDeviceModels</i> buffer.</param>
      <param name="wzDeviceModels">Pointer that receives the device models supported by the metadata handler.</param>
      <param name="pcchActual">The actual length needed to retrieve the device models.</param>
    </summary>
  </comment>
  <comment id="D2D1_SVG_LENGTH_UNITS">
    <summary>
      <para>Specifies the units for an SVG length.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_length_units" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_LENGTH_UNITS::D2D1_SVG_LENGTH_UNITS_NUMBER">
    <summary>The length is unitless.</summary>
  </comment>
  <comment id="D2D1_SVG_LENGTH_UNITS::D2D1_SVG_LENGTH_UNITS_PERCENTAGE">
    <summary>The length is a percentage value.</summary>
  </comment>
  <comment id="IDWriteFontFileLoader">
    <summary>
      <para>Handles loading font file resources of a particular type from a font file reference key into a font file stream object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritefontfileloader" /></para>
    </summary>
  </comment>
  <comment id="D2D1_YCBCR_INTERPOLATION_MODE">
    <summary>
      <para>Specifies the interpolation mode for the YCbCr effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_1/ne-d2d1effects_1-d2d1_ycbcr_interpolation_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_YCBCR_INTERPOLATION_MODE::D2D1_YCBCR_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </comment>
  <comment id="D2D1_YCBCR_INTERPOLATION_MODE::D2D1_YCBCR_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode uses more processing time than the nearest neighbor mode, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_YCBCR_INTERPOLATION_MODE::D2D1_YCBCR_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_YCBCR_INTERPOLATION_MODE::D2D1_YCBCR_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </comment>
  <comment id="D2D1_YCBCR_INTERPOLATION_MODE::D2D1_YCBCR_INTERPOLATION_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </comment>
  <comment id="D2D1_YCBCR_INTERPOLATION_MODE::D2D1_YCBCR_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </comment>
  <comment id="IDWriteTextLayout::GetTypography">
    <summary>
      <para>Gets the typography setting of the text at the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-gettypography" /></para>
      <param name="currentPosition">The position of the text to inspect.</param>
      <param name="typography">When this method returns, contains an address of a  pointer to the current typography setting.</param>
      <param name="textRange">The range of text that has the same  formatting as the text at the position specified by <i>currentPosition</i>.  This means the run has the exact  formatting as the position specified, including but not limited to the typography.</param>
    </summary>
  </comment>
  <comment id="ID2D1RadialGradientBrush::GetRadiusX">
    <summary>
      <para>Retrieves the x-radius of the gradient ellipse.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-getradiusx" /></para>
    </summary>
  </comment>
  <comment id="IWICDdsEncoder">
    <summary>
      <para>Enables writing DDS format specific information to an encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicddsencoder" /></para>
    </summary>
  </comment>
  <comment id="D2D1_HDRTONEMAP_PROP">
    <summary>
      <para>Defines constants that identify the top level properties of the HDR Tone Map effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_hdrtonemap_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_HDRTONEMAP_PROP::D2D1_HDRTONEMAP_PROP_INPUT_MAX_LUMINANCE">
    <summary>Identifies the `InputMaxLuminance` property of the effect. The property is of type FLOAT, and is specified in nits.</summary>
  </comment>
  <comment id="D2D1_HDRTONEMAP_PROP::D2D1_HDRTONEMAP_PROP_OUTPUT_MAX_LUMINANCE">
    <summary>Identifies the `OutputMaxLuminance` property of the effect. The property is of type FLOAT, and is specified in nits.</summary>
  </comment>
  <comment id="D2D1_HDRTONEMAP_PROP::D2D1_HDRTONEMAP_PROP_DISPLAY_MODE">
    <summary>Identifies the `DisplayMode` property of the effect. The property is of type <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_2/ne-d2d1effects_2-d2d1_hdrtonemap_display_mode"><strong>D2D1_HDRTONEMAP_DISPLAY_MODE</strong></a>.</summary>
  </comment>
  <comment id="IDWriteFontList1::GetFontFaceReference">
    <summary>
      <para>Gets a font face reference given its zero-based index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontlist1-getfontfacereference" /></para>
      <param name="listIndex">Zero-based index of the font in the font list.</param>
      <param name="fontFaceReference">A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_3/nn-dwrite_3-idwritefontfacereference">IDWriteFontFaceReference</a> interface for the newly created font face reference object.</param>
    </summary>
  </comment>
  <comment id="ID2D1TransformNode::GetInputCount">
    <summary>
      <para>Gets the number of inputs to the transform node.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformnode-getinputcount" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapFrameEncode::Initialize">
    <summary>
      <para>Initializes the frame encoder using the given properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-initialize" /></para>
      <param name="iEncoderOptions">The set of properties to use for <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframeencode">IWICBitmapFrameEncode</a> initialization.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateDecoderFromFileHandle">
    <summary>
      <para>Creates a new instance of the IWICBitmapDecoder based on the given file handle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromfilehandle" /></para>
      <param name="hFile">The file handle to create the decoder from.</param>
      <param name="pguidVendor">The GUID for the preferred decoder vendor. Use <b>NULL</b> if no preferred vendor.</param>
      <param name="metadataOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a> to use when creating the decoder.</param>
      <param name="iDecoder">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoder">IWICBitmapDecoder</a>.</param>
    </summary>
  </comment>
  <comment id="D2D1_CHROMAKEY_PROP">
    <summary>
      <para>Identifiers for properties of the Chroma-key effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_chromakey_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_CHROMAKEY_PROP::D2D1_CHROMAKEY_PROP_COLOR">
    <summary>The D2D1_CHROMAKEY_PROP_COLOR property is a vector4 value indicating the color that should be converted to alpha.  The default color is black.</summary>
  </comment>
  <comment id="D2D1_CHROMAKEY_PROP::D2D1_CHROMAKEY_PROP_TOLERANCE">
    <summary>The D2D1_CHROMAKEY_PROP_TOLERANCE property is a float value indicating the tolerance for matching the color specified in the D2D1_CHROMAKEY_PROP_COLOR property.  
          The allowed range is 0.0 to 1.0.  The default value is 0.1.</summary>
  </comment>
  <comment id="D2D1_CHROMAKEY_PROP::D2D1_CHROMAKEY_PROP_INVERT_ALPHA">
    <summary>The D2D1_CHROMAKEY_PROP_INVERT_ALPHA property is a boolean value indicating whether the alpha values should be inverted.  The default value if False.</summary>
  </comment>
  <comment id="D2D1_CHROMAKEY_PROP::D2D1_CHROMAKEY_PROP_FEATHER">
    <summary>The D2D1_CHROMAKEY_PROP_FEATHER property is a boolean value whether the edges of the output should be softened in the alpha channel.
          When set to False, the alpha output by the effect is 1-bit: either fully opaque or fully transparent. Setting to True results in a softening of edges in the alpha channel of the Chroma Key output.
          The default value is False.</summary>
  </comment>
  <comment id="ID2D1SimplifiedGeometrySink::AddLines">
    <summary>
      <para>Creates a sequence of lines using the specified points and adds them to the geometry sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1simplifiedgeometrysink-addlines" /></para>
      <param name="points">A pointer to an array of one or more points that describe the lines to draw. A line is drawn from the geometry sink's current point (the end point of the last segment drawn or the location specified by <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1simplifiedgeometrysink-beginfigure">BeginFigure</a>) to the first point in the array. if the array contains additional points, a line is drawn from the first point to the second point in the array, from the second point to the third point, and so on.</param>
      <param name="pointsCount">The number of points in the <i>points</i> array.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateQueryWriter">
    <summary>
      <para>Creates a new instance of a query writer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createquerywriter" /></para>
      <param name="guidMetadataFormat">The GUID for the desired metadata format.</param>
      <param name="pguidVendor">The GUID for the preferred metadata writer vendor. Use <b>NULL</b> if no preferred vendor.</param>
      <param name="iQueryWriter">When this method returns, contains a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataquerywriter">IWICMetadataQueryWriter</a>.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::FillMesh">
    <summary>
      <para>Paints the interior of the specified mesh.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-fillmesh" /></para>
      <param name="mesh">The mesh to paint.</param>
      <param name="brush">The brush used to paint the mesh.</param>
    </summary>
  </comment>
  <comment id="IWICDdsEncoder::GetParameters">
    <summary>
      <para>Gets DDS-specific data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsencoder-getparameters" /></para>
      <param name="parameters">Points to the structure where the information is returned.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataReaderInfo::GetPatterns">
    <summary>
      <para>Gets the metadata patterns associated with the metadata reader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareaderinfo-getpatterns" /></para>
      <param name="guidContainerFormat">The cointainer format GUID.</param>
      <param name="cbSize">The size, in bytes, of the <i>pPattern</i> buffer.</param>
      <param name="pattern">Pointer that receives the metadata patterns.</param>
      <param name="pcCount">Pointer that receives the number of metadata patterns.</param>
      <param name="pcbActual">Pointer that receives the size, in bytes, needed to obtain the metadata patterns.</param>
    </summary>
  </comment>
  <comment id="IDWriteTypography::AddFontFeature">
    <summary>
      <para>Adds an OpenType font feature.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetypography-addfontfeature" /></para>
      <param name="fontFeature">A structure that contains the OpenType name identifier and the execution parameter for the font feature being added.</param>
    </summary>
  </comment>
  <comment id="ID2D1Factory6::CreateDevice">
    <summary>
      <para>Creates a new Direct2D device from the given IDXGIDevice.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory6-createdevice" /></para>
      <param name="dxgiDevice">The IDXGIDevice to create the Direct2D device from.</param>
      <param name="d2dDevice5">The created device.</param>
    </summary>
  </comment>
  <comment id="D2D1_BITMAP_INTERPOLATION_MODE">
    <summary>
      <para>Specifies the algorithm that is used when images are scaled or rotated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_bitmap_interpolation_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BITMAP_INTERPOLATION_MODE::D2D1_BITMAP_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Use the exact color of the nearest bitmap pixel to the current rendering pixel.</summary>
  </comment>
  <comment id="D2D1_BITMAP_INTERPOLATION_MODE::D2D1_BITMAP_INTERPOLATION_MODE_LINEAR">
    <summary>Interpolate a color from the four bitmap pixels that are the nearest to the rendering pixel.</summary>
  </comment>
  <comment id="IWICBitmapDecoderInfo">
    <summary>
      <para>Exposes methods that provide information about a decoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapdecoderinfo" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace::TryGetFontTable">
    <summary>
      <para>Finds the specified OpenType font table if it exists and returns a pointer to it. The function accesses the underlying font data through the IDWriteFontFileStream interface implemented by the font file loader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-trygetfonttable" /></para>
      <param name="openTypeTableTag">The four-character tag of a OpenType font table to find.
         Use the <b>DWRITE_MAKE_OPENTYPE_TAG</b> macro to create it as an <b>UINT32</b>.
         Unlike GDI, it does not support the special TTCF and null tags to access the whole font.</param>
      <param name="tableData">When this method returns, contains the address of  a pointer to the base of the table in memory.
         The pointer is valid only as long as the font face used to get the font table still exists;
         (not any other font face, even if it actually refers to the same physical font).
    This parameter is passed uninitialized.</param>
      <param name="tableSize">When this method returns, contains a pointer to the size, in bytes, of the font table.</param>
      <param name="tableContext">When this method returns, the address of a pointer to  the opaque context, which must be freed by calling <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritefontface-releasefonttable">ReleaseFontTable</a>.
         The context actually comes from the lower-level <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefontfilestream">IDWriteFontFileStream</a>,
         which may be implemented by the application or DWrite itself.
         It is possible for a <b>NULL</b> <i>tableContext</i> to be returned, especially if
         the implementation performs direct memory mapping on the whole file.
         Nevertheless, always release it later, and do not use it as a test for function success.
         The same table can be queried multiple times,
         but because each returned context can be different, you must release each context separately.</param>
      <param name="exists">When this method returns, <b>TRUE</b> if the font table exists; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontCollection::GetFontFamilyCount">
    <summary>
      <para>Gets the number of font families in the collection.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontcollection-getfontfamilycount" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapSource::CopyPixels">
    <summary>
      <para>Instructs the object to produce pixels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsource-copypixels" /></para>
      <param name="prc">The rectangle to copy. A <b>NULL</b> value specifies the entire bitmap.</param>
      <param name="cbStride">The stride of the bitmap</param>
      <param name="cbBufferSize">The size of the buffer.</param>
      <param name="pbBuffer">A pointer to the buffer.</param>
    </summary>
  </comment>
  <comment id="ID2D1LinearGradientBrush::GetStartPoint">
    <summary>
      <para>Retrieves the starting coordinates of the linear gradient.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-getstartpoint" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgDocument::CreatePathData">
    <summary>
      <para>Creates a path data object which can be used to set a 'd' attribute on a 'path' element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-createpathdata" /></para>
      <param name="segmentData">An array of segment data.</param>
      <param name="segmentDataCount">Number of items in segmentData.</param>
      <param name="commands">An array of path commands.</param>
      <param name="commandsCount">The number of items in commands.</param>
      <param name="pathData">When this method completes, this points to the created path data.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataQueryReader::GetContainerFormat">
    <summary>
      <para>Gets the metadata query readers container format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataqueryreader-getcontainerformat" /></para>
      <param name="pguidContainerFormat">Pointer that receives the cointainer format GUID.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink">
    <summary>
      <para>The command sink is implemented by you for an application when you want to receive a playback of the commands recorded in a command list.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1commandsink" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapCodecInfo::DoesSupportAnimation">
    <summary>
      <para>Retrieves a value indicating whether the codec supports animation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportanimation" /></para>
      <param name="pfSupportAnimation">Receives <b>TRUE</b> if the codec supports images with timing information; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="D2D1_TEMPERATUREANDTINT_PROP">
    <summary>
      <para>Identifiers for properties of the Temperature and Tint effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_temperatureandtint_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_TEMPERATUREANDTINT_PROP::D2D1_TEMPERATUREANDTINT_PROP_TEMPERATURE">
    <summary>The D2D1_TEMPERATUREANDTINT_PROP_TEMPERATURE property is a float value specifying how much to increase or decrease the temperature of the input image.  The allowed range is -1.0 to 1.0. The default value is 0.0.</summary>
  </comment>
  <comment id="D2D1_TEMPERATUREANDTINT_PROP::D2D1_TEMPERATUREANDTINT_PROP_TINT">
    <summary>The D2D1_TEMPERATUREANDTINT_PROP_TINT property is a float value specifying how much to increase or decrease the tint of the input image.  The allowed range is -1.0 to 1.0.  The default value is 0.0.</summary>
  </comment>
  <comment id="ID2D1TransformedGeometry::GetTransform">
    <summary>
      <para>Retrieves the matrix used to transform the ID2D1TransformedGeometry object's source geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1transformedgeometry-gettransform" /></para>
      <param name="transform">A pointer that receives the matrix used to transform the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1transformedgeometry">ID2D1TransformedGeometry</a> object's source geometry. You must allocate storage for this parameter.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace3::AreGlyphsLocal">
    <summary>
      <para>Determines whether the specified glyphs are local.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface3-areglyphslocal" /></para>
      <param name="glyphIndices">Array of glyph indices.</param>
      <param name="glyphCount">The number of elements in the glyph index array.</param>
      <param name="enqueueIfNotLocal">Specifies whether to enqueue a download request    
       if any of the specified glyphs are not local.</param>
      <param name="isLocal">Receives TRUE if all of the specified glyphs are local,    
       FALSE if any of the specified glyphs are remote.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPathData::RemoveCommandsAtEnd">
    <summary>
      <para>Removes commands from the end of the commands array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-removecommandsatend" /></para>
      <param name="commandsCount">Specifies how many commands to remove.</param>
    </summary>
  </comment>
  <comment id="IWICDdsEncoder::SetParameters">
    <summary>
      <para>Sets DDS-specific data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsencoder-setparameters" /></para>
      <param name="parameters">Points to the structure where the information is described.</param>
    </summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH">
    <summary>
      <para>Represents a tensor patch with 16 control points, 4 corner colors, and boundary flags. An ID2D1GradientMesh is made up of 1 or more gradient mesh patches. Use the GradientMeshPatch function or the GradientMeshPatchFromCoonsPatch function to create one.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ns-d2d1_3-d2d1_gradient_mesh_patch" /></para>
    </summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point00">
    <summary>The coordinate-space location of the control point in column 0 and row 0 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point01">
    <summary>The coordinate-space location of the control point in column 0 and row 1 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point02">
    <summary>The coordinate-space location of the control point in column 0 and row 2 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point03">
    <summary>The coordinate-space location of the control point in column 0 and row 3 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point10">
    <summary>The coordinate-space location of the control point in column 1 and row 0 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point11">
    <summary>The coordinate-space location of the control point in column 1 and row 1 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point12">
    <summary>The coordinate-space location of the control point in column 1 and row 2 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point13">
    <summary>The coordinate-space location of the control point in column 1 and row 3 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point20">
    <summary>The coordinate-space location of the control point in column 2 and row 0 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point21">
    <summary>The coordinate-space location of the control point in column 2 and row 1 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point22">
    <summary>The coordinate-space location of the control point in column 2 and row 2 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point23">
    <summary>The coordinate-space location of the control point in column 2 and row 3 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point30">
    <summary>The coordinate-space location of the control point in column 3 and row 0 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point31">
    <summary>The coordinate-space location of the control point in column 3 and row 1 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point32">
    <summary>The coordinate-space location of the control point in column 3 and row 2 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::point33">
    <summary>The coordinate-space location of the control point in column 3 and row 3 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::color00">
    <summary>The color associated with the control point in column 0 and row 0 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::color03">
    <summary>The color associated with the control point in column 0 and row 3 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::color30">
    <summary>The color associated with the control point in column 3 and row 0 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::color33">
    <summary>The color associated with the control point in column 3 and row 3 of the tensor grid.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::topEdgeMode">
    <summary>Specifies how to render the top edge of the mesh.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::leftEdgeMode">
    <summary>Specifies how to render the left edge of the mesh.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::bottomEdgeMode">
    <summary>Specifies how to render the bottom edge of the mesh.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_MESH_PATCH::rightEdgeMode">
    <summary>Specifies how to render the right edge of the mesh.</summary>
  </comment>
  <comment id="IDWriteTextLayout2::SetVerticalGlyphOrientation">
    <summary>
      <para>Set the preferred orientation of glyphs when using a vertical reading direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextlayout2-setverticalglyphorientation" /></para>
      <param name="glyphOrientation">Preferred glyph orientation.</param>
    </summary>
  </comment>
  <comment id="D2D1_DISPLACEMENTMAP_PROP">
    <summary>
      <para>Identifiers for properties of the Displacement map effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_displacementmap_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DISPLACEMENTMAP_PROP::D2D1_DISPLACEMENTMAP_PROP_SCALE">
    <summary>Multiplies the intensity of the selected channel from the displacement image. The higher you set this property, the more the effect displaces the pixels.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </comment>
  <comment id="D2D1_DISPLACEMENTMAP_PROP::D2D1_DISPLACEMENTMAP_PROP_X_CHANNEL_SELECT">
    <summary>The effect extracts the intensity from this color channel and uses it to spatially displace the image in the X direction.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_channel_selector">D2D1_CHANNEL_SELECTOR</a>.

The default value is D2D1_CHANNEL_SELECTOR_A</summary>
  </comment>
  <comment id="D2D1_DISPLACEMENTMAP_PROP::D2D1_DISPLACEMENTMAP_PROP_Y_CHANNEL_SELECT">
    <summary>The effect extracts the intensity from this color channel and uses it to spatially displace the image in the Y direction.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_channel_selector">D2D1_CHANNEL_SELECTOR</a>.

The default value is D2D1_CHANNEL_SELECTOR_A</summary>
  </comment>
  <comment id="ID2D1EffectContext::CreateBoundsAdjustmentTransform">
    <summary>
      <para>Creates and returns a bounds adjustment transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createboundsadjustmenttransform" /></para>
      <param name="outputRectangle">The initial output rectangle for the bounds adjustment transform.</param>
      <param name="transform">The returned bounds adjustment transform.</param>
    </summary>
  </comment>
  <comment id="IWICPlanarFormatConverter::Initialize">
    <summary>
      <para>Initializes a format converter with a planar source, and specifies the interleaved output pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicplanarformatconverter-initialize" /></para>
      <param name="planes">An array of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> that represents image planes.</param>
      <param name="cPlanes">The number of component planes specified by the planes parameter.</param>
      <param name="dstFormat">The destination interleaved pixel format.</param>
      <param name="dither">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapdithertype">WICBitmapDitherType</a> used for conversion.</param>
      <param name="iPalette">The palette to use for conversion.</param>
      <param name="alphaThresholdPercent">The alpha threshold to use for conversion.</param>
      <param name="paletteTranslate">The palette translation type to use for conversion.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout1::SetPairKerning">
    <summary>
      <para>Enables or disables pair-kerning on a given text range.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextlayout1-setpairkerning" /></para>
      <param name="isPairKerningEnabled">The flag that indicates whether text is pair-kerned.</param>
      <param name="textRange">The text range to which the change applies.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace::GetSimulations">
    <summary>
      <para>Obtains the algorithmic style simulation flags of a font face.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-getsimulations" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ComputeTransform::SetComputeInfo">
    <summary>
      <para>Sets the render information used to specify the compute shader pass.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1computetransform-setcomputeinfo" /></para>
      <param name="computeInfo">The render information object to set.</param>
    </summary>
  </comment>
  <comment id="D2D1_PROPERTY">
    <summary>
      <para>Specifies the indices of the system properties present on the ID2D1Properties interface for an ID2D1Effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_property" /></para>
    </summary>
  </comment>
  <comment id="D2D1_PROPERTY::D2D1_PROPERTY_CLSID">
    <summary>The CLSID of the effect.</summary>
  </comment>
  <comment id="D2D1_PROPERTY::D2D1_PROPERTY_DISPLAYNAME">
    <summary>The name of the effect.</summary>
  </comment>
  <comment id="D2D1_PROPERTY::D2D1_PROPERTY_AUTHOR">
    <summary>The author of the effect.</summary>
  </comment>
  <comment id="D2D1_PROPERTY::D2D1_PROPERTY_CATEGORY">
    <summary>The category of the effect.</summary>
  </comment>
  <comment id="D2D1_PROPERTY::D2D1_PROPERTY_DESCRIPTION">
    <summary>The description of the effect.</summary>
  </comment>
  <comment id="D2D1_PROPERTY::D2D1_PROPERTY_INPUTS">
    <summary>The names of the effect's inputs.</summary>
  </comment>
  <comment id="D2D1_PROPERTY::D2D1_PROPERTY_CACHED">
    <summary>The output of the effect should be cached.</summary>
  </comment>
  <comment id="D2D1_PROPERTY::D2D1_PROPERTY_PRECISION">
    <summary>The buffer precision of the effect output.</summary>
  </comment>
  <comment id="D2D1_PROPERTY::D2D1_PROPERTY_MIN_INPUTS">
    <summary>The minimum number of inputs supported by the effect.</summary>
  </comment>
  <comment id="D2D1_PROPERTY::D2D1_PROPERTY_MAX_INPUTS">
    <summary>The maximum number of inputs supported by the effect.</summary>
  </comment>
  <comment id="ID2D1OffsetTransform">
    <summary>
      <para>Instructs the effect-rendering system to offset an input bitmap without inserting a rendering pass.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1offsettransform" /></para>
    </summary>
  </comment>
  <comment id="IWICJpegFrameDecode::ClearIndexing">
    <summary>
      <para>Removes the indexing from a JPEG that has been indexed using IWICJpegFrameDecode::SetIndexing.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-clearindexing" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapCreateCacheOption">
    <summary>
      <para>Specifies the desired cache usage.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmapcreatecacheoption" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapCreateCacheOption::WICBitmapNoCache">
    <summary>Do not cache the bitmap.</summary>
  </comment>
  <comment id="WICBitmapCreateCacheOption::WICBitmapCacheOnDemand">
    <summary>Cache the bitmap when needed.</summary>
  </comment>
  <comment id="WICBitmapCreateCacheOption::WICBitmapCacheOnLoad">
    <summary>Cache the bitmap at initialization.</summary>
  </comment>
  <comment id="ID2D1Effect::SetInput">
    <summary>
      <para>Sets the given input image by index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1effect-setinput" /></para>
      <param name="index">The index of the image to set.</param>
      <param name="input">The input image to set.</param>
      <param name="invalidate">Whether to invalidate the graph at the location of the effect input</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace::GetRecommendedRenderingMode">
    <summary>
      <para>Determines the recommended rendering mode for the font, using the specified size and rendering parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-getrecommendedrenderingmode" /></para>
      <param name="emSize">The logical size of the font in DIP units. A DIP ("device-independent pixel") equals 1/96 inch.</param>
      <param name="pixelsPerDip">The number of physical pixels per DIP. For example, if the DPI of the rendering surface is 96, this 
     value is 1.0f. If the DPI is 120, this value is 120.0f/96.</param>
      <param name="measuringMode">The measuring method that will be used for glyphs in the font.
     Renderer implementations may choose different rendering modes for different measuring methods, for example:
     

<ul>
<li>DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL for <a href="https://docs.microsoft.com/windows/win32/api/dcommon/ne-dcommon-dwrite_measuring_mode">DWRITE_MEASURING_MODE_NATURAL</a>
</li>
<li>DWRITE_RENDERING_MODE_CLEARTYPE_GDI_CLASSIC for <a href="https://docs.microsoft.com/windows/win32/api/dcommon/ne-dcommon-dwrite_measuring_mode">DWRITE_MEASURING_MODE_GDI_CLASSIC</a>
</li>
<li>DWRITE_RENDERING_MODE_CLEARTYPE_GDI_NATURAL for <a href="https://docs.microsoft.com/windows/win32/api/dcommon/ne-dcommon-dwrite_measuring_mode">DWRITE_MEASURING_MODE_GDI_NATURAL</a>
</li>
</ul></param>
      <param name="renderingParams">A pointer to an object that contains rendering settings such as gamma level, enhanced contrast, and ClearType level. This parameter is necessary in case the rendering parameters 
     object overrides the rendering mode.</param>
      <param name="renderingMode">When this method returns, contains a value that indicates the recommended rendering mode to use.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPathData::GetCommandsCount">
    <summary>
      <para>Gets the size of the commands array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-getcommandscount" /></para>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::Clear">
    <summary>
      <para>Clears the drawing area to the specified color.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-clear" /></para>
      <param name="color">The color to which the command sink should be cleared.</param>
    </summary>
  </comment>
  <comment id="ID2D1Transform::MapInputRectsToOutputRect">
    <summary>
      <para>Performs the inverse mapping to MapOutputRectToInputRects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transform-mapinputrectstooutputrect" /></para>
      <param name="inputRects">An array of input rectangles to be mapped to the output rectangle.  The <i>inputRects</i> parameter is always equal to the input bounds.</param>
      <param name="inputOpaqueSubRects">An array of input rectangles to be mapped to the opaque output rectangle.</param>
      <param name="inputRectCount">The number of inputs specified. The implementation guarantees that this is equal to the number of inputs specified on the transform.</param>
      <param name="outputRect">The output rectangle that maps to the corresponding input rectangle.</param>
      <param name="outputOpaqueSubRect">The output rectangle that maps to the corresponding opaque input rectangle.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFile::GetReferenceKey">
    <summary>
      <para>Obtains the pointer to the reference key of a font file. The returned pointer is valid until the font file object is released.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfile-getreferencekey" /></para>
      <param name="fontFileReferenceKey">When this method returns, contains an address of  a pointer to the font file reference key. Note that the pointer value is only valid until the font file object it is obtained from is released. This parameter is passed uninitialized.</param>
      <param name="fontFileReferenceKeySize">When this method returns, contains the size of the font file reference key in bytes. This parameter is passed uninitialized.</param>
    </summary>
  </comment>
  <comment id="IDWritePixelSnapping">
    <summary>
      <para>Defines the pixel snapping properties such as pixels per DIP(device-independent pixel) and the current transform matrix of a text renderer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritepixelsnapping" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout3">
    <summary>
      <para>Represents a block of text after it has been fully analyzed and formatted.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritetextlayout3" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::GetTextValueLength">
    <summary>
      <para>Gets the length of the text content value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-gettextvaluelength" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFile">
    <summary>
      <para>Represents a font file. Applications such as font managers or font viewers can call IDWriteFontFile::Analyze to find out if a particular file is a font file, and whether it is a font type that is supported by the font system.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritefontfile" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFont::IsSymbolFont">
    <summary>
      <para>Determines whether the font is a symbol font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefont-issymbolfont" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapDecoder">
    <summary>
      <para>Exposes methods that represent a decoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapdecoder" /></para>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateFastMetadataEncoderFromFrameDecode">
    <summary>
      <para>Creates a new instance of the fast metadata encoder based on the given image frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createfastmetadataencoderfromframedecode" /></para>
      <param name="iFrameDecoder">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframedecode">IWICBitmapFrameDecode</a> to create the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicfastmetadataencoder">IWICFastMetadataEncoder</a> from.</param>
      <param name="iFastEncoder">When this method returns, contains a pointer to a new fast metadata encoder.</param>
    </summary>
  </comment>
  <comment id="IDWriteAsyncResult::GetWaitHandle">
    <summary>
      <para>Returns a handle that can be used to wait for the asynchronous operation to complete. The handle remains valid until the interface is released.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwriteasyncresult-getwaithandle" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::GetTextValue">
    <summary>
      <para>Gets the value of a text content element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-gettextvalue" /></para>
      <param name="name">The value of the text content element.</param>
      <param name="nameCount">The length of the value in the name argument.</param>
    </summary>
  </comment>
  <comment id="WIC8BIMIptcProperties">
    <summary>
      <para>Specifies the identifiers of the metadata items in an 8BIM IPTC block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wic8bimiptcproperties" /></para>
    </summary>
  </comment>
  <comment id="WIC8BIMIptcProperties::WIC8BIMIptcPString">
    <summary>[VT_LPSTR] A name that identifies the 8BIM block.</summary>
  </comment>
  <comment id="IDWriteFontFace2::IsColorFont">
    <summary>
      <para>Allows you to determine if a color rendering path is potentially necessary.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefontface2-iscolorfont" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetInlineObject">
    <summary>
      <para>Gets the inline object at the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getinlineobject" /></para>
      <param name="currentPosition">The specified text position.</param>
      <param name="inlineObject">Contains the application-defined inline object.</param>
      <param name="textRange">The range of text that has the same  formatting as the text at the position specified by <i>currentPosition</i>.  This means the run has the exact  formatting as the position specified, including but not limited to the inline object.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapSourceTransform::DoesSupportTransform">
    <summary>
      <para>Determines whether a specific transform option is supported natively by the implementation of the IWICBitmapSourceTransform interface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsourcetransform-doessupporttransform" /></para>
      <param name="dstTransform">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmaptransformoptions">WICBitmapTransformOptions</a> to check if they are supported.</param>
      <param name="pfIsSupported">A pointer that receives a value specifying whether the transform option is supported.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext4::DrawSvgGlyphRun">
    <summary>
      <para>Draws a color glyph run that has the format of DWRITE_GLYPH_IMAGE_FORMATS_SVG.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext4-drawsvgglyphrun" /></para>
      <param name="baselineOrigin">The origin of the baseline for the glyph run.</param>
      <param name="glyphRun">The glyphs to render.</param>
      <param name="defaultFillBrush">The brush used to paint the specified glyphs.</param>
      <param name="svgGlyphStyle">Values for context-fill, context-stroke, and context-value that are used when rendering SVG glyphs.</param>
      <param name="colorPaletteIndex">The index used to select a color palette within a color font. Note that this not the same as the paletteIndex in the
          DWRITE_COLOR_GLYPH_RUN struct, which is not relevant for SVG glyphs.</param>
      <param name="measuringMode">Indicates the measuring method used for text layout.</param>
    </summary>
  </comment>
  <comment id="D2D1_TILE_PROP">
    <summary>
      <para>Identifiers for properties of the Tile effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_tile_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_TILE_PROP::D2D1_TILE_PROP_RECT">
    <summary>The region of the image to be tiled. This property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_4f">D2D1_VECTOR_4F</a> defined as: (left, top, right, bottom). The units are in DIPs.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_4f">D2D1_VECTOR_4F</a>.

The default is {0.0f, 0.0f, 100.0f, 100.0f}.</summary>
  </comment>
  <comment id="IWICPalette::InitializeFromPalette">
    <summary>
      <para>Initialize the palette based on a given palette.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-initializefrompalette" /></para>
      <param name="iPalette">Pointer to the source palette.</param>
    </summary>
  </comment>
  <comment id="D2D1_FILTER">
    <summary>
      <para>Represents filtering modes that a transform may select to use on input textures.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_filter" /></para>
    </summary>
  </comment>
  <comment id="D2D1_FILTER::D2D1_FILTER_MIN_MAG_MIP_POINT">
    <summary>Use point sampling for minification, magnification, and mip-level sampling.</summary>
  </comment>
  <comment id="D2D1_FILTER::D2D1_FILTER_MIN_MAG_POINT_MIP_LINEAR">
    <summary>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling.</summary>
  </comment>
  <comment id="D2D1_FILTER::D2D1_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT">
    <summary>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling.</summary>
  </comment>
  <comment id="D2D1_FILTER::D2D1_FILTER_MIN_POINT_MAG_MIP_LINEAR">
    <summary>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling.</summary>
  </comment>
  <comment id="D2D1_FILTER::D2D1_FILTER_MIN_LINEAR_MAG_MIP_POINT">
    <summary>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling.</summary>
  </comment>
  <comment id="D2D1_FILTER::D2D1_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
    <summary>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling.</summary>
  </comment>
  <comment id="D2D1_FILTER::D2D1_FILTER_MIN_MAG_LINEAR_MIP_POINT">
    <summary>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling.</summary>
  </comment>
  <comment id="D2D1_FILTER::D2D1_FILTER_MIN_MAG_MIP_LINEAR">
    <summary>Use linear interpolation for minification, magnification, and mip-level sampling.</summary>
  </comment>
  <comment id="D2D1_FILTER::D2D1_FILTER_ANISOTROPIC">
    <summary>Use anisotropic interpolation for minification, magnification, and mip-level sampling.</summary>
  </comment>
  <comment id="IWICColorContext::GetType">
    <summary>
      <para>Retrieves the color context type.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolorcontext-gettype" /></para>
      <param name="type">A pointer that receives the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccolorcontexttype">WICColorContextType</a> of the color context.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::GetSize">
    <summary>
      <para>Returns the size of the render target in device-independent pixels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-getsize" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFallbackBuilder::AddMappings">
    <summary>
      <para>Add all the mappings from an existing font fallback object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefontfallbackbuilder-addmappings" /></para>
      <param name="fontFallback">An existing font fallback object.</param>
    </summary>
  </comment>
  <comment id="IWICComponentFactory::CreateMetadataReaderFromContainer">
    <summary>
      <para>Creates an IWICMetadataReader based on the given parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createmetadatareaderfromcontainer" /></para>
      <param name="guidContainerFormat">The container format GUID to base the reader on.</param>
      <param name="pguidVendor">Pointer to the vendor GUID of the metadata reader.</param>
      <param name="dwOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicpersistoptions">WICPersistOptions</a> and <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicmetadatacreationoptions">WICMetadataCreationOptions</a> options to use when creating the metadata reader.</param>
      <param name="iStream">Pointer to a stream in which to initialize the reader with. If <b>NULL</b>, the metadata reader will be empty.</param>
      <param name="iReader">A pointer that receives a pointer to the new metadata reader</param>
    </summary>
  </comment>
  <comment id="ID2D1Bitmap1::GetOptions">
    <summary>
      <para>Gets the options used in creating the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1bitmap1-getoptions" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COLOR_INTERPOLATION_MODE">
    <summary>
      <para>Defines how to interpolate between colors.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_color_interpolation_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COLOR_INTERPOLATION_MODE::D2D1_COLOR_INTERPOLATION_MODE_STRAIGHT">
    <summary>Colors are interpolated with straight alpha.</summary>
  </comment>
  <comment id="D2D1_COLOR_INTERPOLATION_MODE::D2D1_COLOR_INTERPOLATION_MODE_PREMULTIPLIED">
    <summary>Colors are interpolated with premultiplied alpha.</summary>
  </comment>
  <comment id="IDWriteTextLayout2::GetFontFallback">
    <summary>
      <para>Get the current font fallback object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextlayout2-getfontfallback" /></para>
      <param name="fontFallback">The current font fallback object.</param>
    </summary>
  </comment>
  <comment id="ID2D1ColorContext1">
    <summary>
      <para>Represents a color context to be used with the Color Management Effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1colorcontext1" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::SetAntialiasMode">
    <summary>
      <para>Sets the antialiasing mode of the render target. The antialiasing mode applies to all subsequent drawing operations, excluding text and glyph drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-setantialiasmode" /></para>
      <param name="antialiasMode">The antialiasing mode for future drawing operations.</param>
    </summary>
  </comment>
  <comment id="ID2D1Layer::GetSize">
    <summary>
      <para>Gets the size of the layer in device-independent pixels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1layer-getsize" /></para>
    </summary>
  </comment>
  <comment id="D2D1_LAYER_OPTIONS">
    <summary>
      <para>Specifies options that can be applied when a layer resource is applied to create a layer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_layer_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_LAYER_OPTIONS::D2D1_LAYER_OPTIONS_NONE">
    <summary>The text in this layer does not use ClearType antialiasing.</summary>
  </comment>
  <comment id="D2D1_LAYER_OPTIONS::D2D1_LAYER_OPTIONS_INITIALIZE_FOR_CLEARTYPE">
    <summary>The layer renders correctly for ClearType text. If the render target is set to ClearType, the  layer continues to render ClearType. If the render target is set to ClearType and this option is not specified, the render target will be set to render gray-scale until the layer is popped. The caller can override this default by calling <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1rendertarget-settextantialiasmode">SetTextAntialiasMode</a> while within the layer. This flag is slightly slower than the default.</summary>
  </comment>
  <comment id="ID2D1CommandSink::SetTextAntialiasMode">
    <summary>
      <para>Indicates the new default antialiasing mode for text.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-settextantialiasmode" /></para>
      <param name="textAntialiasMode">The antialiasing mode for the text.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFaceReference::EnqueueGlyphDownloadRequest">
    <summary>
      <para>Adds a request to the font download queue (IDWriteFontDownloadQueue).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfacereference-enqueueglyphdownloadrequest" /></para>
      <param name="glyphIndices">Array of glyph indices to download.</param>
      <param name="glyphCount">The number of elements in the glyph index array.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::CreateGradientStopCollection">
    <summary>
      <para>Creates a gradient stop collection, enabling the gradient to contain color channels with values outside of [0,1] and also enabling rendering to a high-color render target with interpolation in sRGB space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-creategradientstopcollection" /></para>
      <param name="straightAlphaGradientStops">An array of color values and offsets.</param>
      <param name="straightAlphaGradientStopsCount">The number of elements in the <i>gradientStops</i> array.</param>
      <param name="preInterpolationSpace">Specifies both the input color space and the space in which the color interpolation occurs.</param>
      <param name="postInterpolationSpace">The color space that colors will be converted to after interpolation occurs.</param>
      <param name="bufferPrecision">The precision of the texture used to hold interpolated values.

<div class="alert"><b>Note</b>  This method will fail if the underlying Direct3D device does not support the requested buffer precision.  Use <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nf-d2d1_1-id2d1devicecontext-isbufferprecisionsupported">ID2D1DeviceContext::IsBufferPrecisionSupported</a> to determine what is supported.
</div>
<div> </div></param>
      <param name="extendMode">Defines how colors outside of the range defined by the stop collection are determined.</param>
      <param name="colorInterpolationMode">Defines how colors are interpolated.  D2D1_COLOR_INTERPOLATION_MODE_PREMULTIPLIED is the default, see Remarks for more info.</param>
      <param name="gradientStopCollection1">The new gradient stop collection.</param>
    </summary>
  </comment>
  <comment id="IWICComponentInfo">
    <summary>
      <para>Exposes methods that provide component information.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwiccomponentinfo" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFactory5::CreateFontSetBuilder">
    <summary>
      <para>Creates an empty font set builder to add font face references and create a custom font set.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefactory5-createfontsetbuilder" /></para>
      <param name="fontSetBuilder">Holds the newly created font set builder object, or NULL in case of failure.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::CreateSharedBitmap">
    <summary>
      <para>Creates an ID2D1Bitmap whose data is shared with another resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-createsharedbitmap" /></para>
      <param name="riid">The interface ID of the object supplying the source data.</param>
      <param name="data">An <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1bitmap">ID2D1Bitmap</a>, <a href="https://docs.microsoft.com/windows/win32/api/dxgi/nn-dxgi-idxgisurface">IDXGISurface</a>, or an <a href="https://docs.microsoft.com/windows/win32/api/wincodec/nn-wincodec-iwicbitmaplock">IWICBitmapLock</a> that contains the data to share with the new <b>ID2D1Bitmap</b>. For more information, see the Remarks section.</param>
      <param name="bitmapProperties">The pixel format  and DPI of the bitmap to create . The <a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> portion of the pixel format  must match the <a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> of <i>data</i> or the method will fail, but the alpha modes don't have to match. To prevent a  mismatch, you can pass <b>NULL</b> or the value obtained from the <a href="https://docs.microsoft.com/windows/win32/api/d2d1helper/nf-d2d1helper-pixelformat">D2D1::PixelFormat</a> helper function. The DPI settings do not have to match those of <i>data</i>. If both <i>dpiX</i> and <i>dpiY</i> are  0.0f, the DPI of the render target is used.</param>
      <param name="bitmap">When this method returns, contains the address of a pointer to the new bitmap. This parameter is passed uninitialized.</param>
    </summary>
  </comment>
  <comment id="D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE">
    <summary>
      <para>Values for the D2D1_RGBTOHUE_PROP_OUTPUT_COLOR_SPACE property of the RGB to Hue effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_rgbtohue_output_color_space" /></para>
    </summary>
  </comment>
  <comment id="D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE::D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE_HUE_SATURATION_VALUE">
    <summary>The effect converts from RGB to Hue Saturation Value (HSV).</summary>
  </comment>
  <comment id="D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE::D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE_HUE_SATURATION_LIGHTNESS">
    <summary>The effect converts from RGB to Hue Saturation Lightness (HSL).</summary>
  </comment>
  <comment id="D2D1_COLOR_CONTEXT_TYPE">
    <summary>
      <para>Specifies which way a color profile is defined.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_color_context_type" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE">
    <summary>
      <para>Defines the type of SVG POD attribute to set or get.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_attribute_pod_type" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_FLOAT">
    <summary>The attribute is a FLOAT.</summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_COLOR">
    <summary>The attribute is a D2D1_COLOR_F.</summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_FILL_MODE">
    <summary>The attribute is a D2D1_FILL_MODE.</summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_DISPLAY">
    <summary>The attribute is a D2D1_SVG_DISPLAY.</summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_OVERFLOW">
    <summary>The attribute is a D2D1_SVG_OVERFLOW.</summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_LINE_CAP">
    <summary>The attribute is a D2D1_SVG_LINE_CAP.</summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_LINE_JOIN">
    <summary>The attribute is a D2D1_SVG_LINE_JOIN.</summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_VISIBILITY">
    <summary>The attribute is a D2D1_SVG_VISIBILITY.</summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_MATRIX">
    <summary>The attribute is a D2D1_MATRIX_3X2_F.</summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_UNIT_TYPE">
    <summary>The attribute is a D2D1_SVG_UNIT_TYPE.</summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_EXTEND_MODE">
    <summary>The attribute is a D2D1_EXTEND_MODE.</summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_PRESERVE_ASPECT_RATIO">
    <summary>The attribute is a D2D1_SVG_PRESERVE_ASPECT_RATIO.</summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_VIEWBOX">
    <summary>The attribute is a D2D1_SVG_VIEWBOX.</summary>
  </comment>
  <comment id="D2D1_SVG_ATTRIBUTE_POD_TYPE::D2D1_SVG_ATTRIBUTE_POD_TYPE_LENGTH">
    <summary>The attribute is a D2D1_SVG_LENGTH.</summary>
  </comment>
  <comment id="IDWriteFontSetBuilder::AddFontSet">
    <summary>
      <para>Appends an existing font set to the one being built, allowing one to aggregate two sets or to essentially extend an existing one.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontsetbuilder-addfontset" /></para>
      <param name="fontSet">Font set to append font face references from.</param>
    </summary>
  </comment>
  <comment id="ID2D1PrintControl::Close">
    <summary>
      <para>Passes all remaining resources to the print sub-system, then clean up and close the current print job.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1printcontrol-close" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Factory::CreateDCRenderTarget">
    <summary>
      <para>Creates a render target that draws to a Windows Graphics Device Interface (GDI) device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1factory-createdcrendertarget" /></para>
      <param name="renderTargetProperties">The rendering mode, pixel format, remoting options, DPI information, and the minimum DirectX support required for hardware rendering.  To enable the device context (DC) render target to work with GDI, set the DXGI format to <a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT_B8G8R8A8_UNORM</a> and the alpha mode to <a href="https://docs.microsoft.com/windows/win32/api/dcommon/ne-dcommon-d2d1_alpha_mode">D2D1_ALPHA_MODE_PREMULTIPLIED</a> or <b>D2D1_ALPHA_MODE_IGNORE</b>. For more information about pixel formats, see  <a href="https://docs.microsoft.com/windows/win32/Direct2D/supported-pixel-formats-and-alpha-modes">Supported Pixel  Formats and Alpha Modes</a>.</param>
      <param name="dcRenderTarget">When this method returns, <i>dcRenderTarget</i> contains the address of the pointer to the  <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1dcrendertarget">ID2D1DCRenderTarget</a> created by the method.</param>
    </summary>
  </comment>
  <comment id="D2D1_BORDER_EDGE_MODE">
    <summary>
      <para>The edge mode for the Border effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_border_edge_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BORDER_EDGE_MODE::D2D1_BORDER_EDGE_MODE_CLAMP">
    <summary>Repeats the pixels from the edges of the image.</summary>
  </comment>
  <comment id="D2D1_BORDER_EDGE_MODE::D2D1_BORDER_EDGE_MODE_WRAP">
    <summary>Uses pixels from the opposite end edge of the image.</summary>
  </comment>
  <comment id="D2D1_BORDER_EDGE_MODE::D2D1_BORDER_EDGE_MODE_MIRROR">
    <summary>Reflects pixels about the edge of the image.</summary>
  </comment>
  <comment id="IDWriteFactory::CreateFontFileReference">
    <summary>
      <para>Creates a font file reference object from a local font file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-createfontfilereference" /></para>
      <param name="filePath">An array of characters that contains the absolute file path for the font file. Subsequent operations on the constructed object may fail
     if the user provided <i>filePath</i> doesn't correspond to a valid file on the disk.</param>
      <param name="lastWriteTime">The last modified time of the input file path. If the parameter is omitted,
     the function will access the font file to obtain its last write time. You should specify this value
     to avoid extra disk access. Subsequent operations on the constructed object may fail
     if the user provided <i>lastWriteTime</i> doesn't match the file on the disk.</param>
      <param name="fontFile">When this method returns, contains an address of a pointer to the newly created font file reference object, or <b>NULL</b> in case of failure.</param>
    </summary>
  </comment>
  <comment id="WICRect">
    <summary>
      <para>Represents a rectangle for Windows Imaging Component (WIC) API.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicrect" /></para>
    </summary>
  </comment>
  <comment id="WICRect::X">
    <summary>The horizontal coordinate of the rectangle.</summary>
  </comment>
  <comment id="WICRect::Y">
    <summary>The vertical coordinate of the rectangle.</summary>
  </comment>
  <comment id="WICRect::Width">
    <summary>The width of the rectangle.</summary>
  </comment>
  <comment id="WICRect::Height">
    <summary>The height of the rectangle.</summary>
  </comment>
  <comment id="IWICPalette::GetType">
    <summary>
      <para>Retrieves the WICBitmapPaletteType that describes the palette.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-gettype" /></para>
      <param name="pePaletteType">Pointer that receives the palette type of the bimtap.</param>
    </summary>
  </comment>
  <comment id="D2D1_SHADOW_PROP">
    <summary>
      <para>Identifiers for properties of the Shadow effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_shadow_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SHADOW_PROP::D2D1_SHADOW_PROP_BLUR_STANDARD_DEVIATION">
    <summary>The amount of blur to be applied to the alpha channel of the image. You can compute the blur radius of the kernel by multiplying the standard deviation by 3.
            The units of both the standard deviation and blur radius are DIPs.
            

This property is the same as the Gaussian Blur standard deviation property.

The type is FLOAT.

The default value is 3.0f.</summary>
  </comment>
  <comment id="D2D1_SHADOW_PROP::D2D1_SHADOW_PROP_COLOR">
    <summary>The color of the drop shadow. This property is a D2D1_VECTOR_4F defined as: (R, G, B, A). You must specify this color in straight alpha.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_4f">D2D1_VECTOR_4F</a>.

The default value is {0.0f, 0.0f, 0.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_SHADOW_PROP::D2D1_SHADOW_PROP_OPTIMIZATION">
    <summary>The level of performance optimization.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_shadow_optimization">D2D1_SHADOW_OPTIMIZATION</a>.

The default value is D2D1_SHADOW_OPTIMIZATION_BALANCED.</summary>
  </comment>
  <comment id="IDWriteFactory2::TranslateColorGlyphRun">
    <summary>
      <para>This method is called on a glyph run to translate it in to multiple color glyph runs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefactory2-translatecolorglyphrun" /></para>
      <param name="baselineOriginX">The horizontal baseline origin of the original glyph run.</param>
      <param name="baselineOriginY">The vertical baseline origin of the original glyph run.</param>
      <param name="glyphRun">Original glyph run containing monochrome glyph IDs.</param>
      <param name="glyphRunDescription">Optional glyph run description.</param>
      <param name="measuringMode">Measuring mode used to compute glyph positions if the run contains color glyphs.</param>
      <param name="worldToDeviceTransform">World transform multiplied by any DPI scaling. This is needed to compute glyph positions if the run contains color glyphs and the 
            measuring mode is not <a href="https://docs.microsoft.com/windows/win32/api/dcommon/ne-dcommon-dwrite_measuring_mode">DWRITE_MEASURING_MODE_NATURAL</a>. 
            If this parameter is <b>NULL</b>, and identity transform is assumed.</param>
      <param name="colorPaletteIndex">Zero-based index of the color palette to use. Valid indices are less than the number of palettes in the font, as 
            returned by <a href="https://docs.microsoft.com/windows/win32/api/dwrite_2/nf-dwrite_2-idwritefontface2-getcolorpalettecount">IDWriteFontFace2::GetColorPaletteCount</a>.</param>
      <param name="colorLayers">If the original glyph run contains color glyphs, this parameter receives a pointer to 
            an <a href="https://docs.microsoft.com/windows/win32/DirectWrite/idwritecolorglyphrunenumerator">IDWriteColorGlyphRunEnumerator</a> interface. 
            The client uses the returned interface to get information about glyph runs and associated colors to render instead of the original glyph run. 
            If the original glyph run does not contain color glyphs, this method returns <b>DWRITE_E_NOCOLOR</b> and the output pointer is <b>NULL</b>.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory5">
    <summary>
      <para>The root factory interface for all DirectWrite objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefactory5" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFactory3::GetSystemFontSet">
    <summary>
      <para>Retrieves the list of system fonts.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefactory3-getsystemfontset" /></para>
      <param name="fontSet">Holds the newly created font set object, or NULL in case of failure.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::FillRectangle">
    <summary>
      <para>Indicates to the command sink a rectangle to be filled.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-fillrectangle" /></para>
      <param name="rect">The rectangle to fill.</param>
      <param name="brush">The brush with which to fill the rectangle.</param>
    </summary>
  </comment>
  <comment id="IWICComponentFactory::CreateEncoderPropertyBag">
    <summary>
      <para>Creates an encoder property bag.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createencoderpropertybag" /></para>
      <param name="ppropOptions">Pointer to an array of <a href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa768188(v=vs.85)">PROPBAG2</a> options used to create the encoder property bag.</param>
      <param name="cCount">The number of <a href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa768188(v=vs.85)">PROPBAG2</a> structures in the <i>ppropOptions</i> array.</param>
      <param name="iPropertyBag">A pointer that receives a pointer to an encoder <a href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa768192(v=vs.85)">IPropertyBag2</a>.</param>
    </summary>
  </comment>
  <comment id="IDWriteGdiInterop::CreateFontFaceFromHdc">
    <summary>
      <para>Creates an IDWriteFontFace object that corresponds to the currently selected HFONT of the specified HDC.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritegdiinterop-createfontfacefromhdc" /></para>
      <param name="hdc">A handle to a device context into which a font has been selected. It is assumed that the client
     has already performed font mapping and that the font selected into the device context is the actual font to be used 
     for rendering glyphs.</param>
      <param name="fontFace">Contains an address of a pointer to  the newly created font face object, or <b>NULL</b> in case of failure. The font face returned is guaranteed to reference the same physical typeface that would be used for drawing glyphs (but not necessarily characters) using ExtTextOut.</param>
    </summary>
  </comment>
  <comment id="IWICPlanarBitmapFrameEncode::WriteSource">
    <summary>
      <para>Writes lines from the source planes to the encoded format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicplanarbitmapframeencode-writesource" /></para>
      <param name="planes">Specifies an array of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> that represent image planes.</param>
      <param name="cPlanes">The number of component planes specified by the planes parameter.</param>
      <param name="prcSource">The source rectangle of pixels to encode from the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> planes.  Null indicates the entire source.  The source rect width must match the width set through <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapframeencode-setsize">SetSize</a>. Repeated <b>WriteSource</b> calls can be made as long as the total accumulated source rect height is the same as set through <b>SetSize</b>.</param>
    </summary>
  </comment>
  <comment id="IWICComponentInfo::GetVersion">
    <summary>
      <para>Retrieves the component's version.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getversion" /></para>
      <param name="cchVersion">The size of the <i>wzVersion</i> buffer.</param>
      <param name="wzVersion">A pointer that receives a culture invariant string of the component's version.</param>
      <param name="pcchActual">A pointer that receives the actual length of the component's version. The version is optional; if a value is not specified by the component, the length returned is 0.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace3::IsGlyphLocal">
    <summary>
      <para>Determines whether the glyph is locally downloaded from the font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface3-isglyphlocal" /></para>
      <param name="glyphId">Glyph identifier.</param>
    </summary>
  </comment>
  <comment id="D2D1_TRIANGLE">
    <summary>
      <para>Contains the three vertices that describe a triangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_triangle" /></para>
    </summary>
  </comment>
  <comment id="D2D1_TRIANGLE::point1">
    <summary>The first vertex of a triangle.</summary>
  </comment>
  <comment id="D2D1_TRIANGLE::point2">
    <summary>The second vertex of a triangle.</summary>
  </comment>
  <comment id="D2D1_TRIANGLE::point3">
    <summary>The third vertex of a triangle.</summary>
  </comment>
  <comment id="ID2D1BorderTransform::SetExtendModeX">
    <summary>
      <para>Sets the extend mode in the x direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1bordertransform-setextendmodex" /></para>
      <param name="extendMode">The extend mode in the x direction.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink1">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1CommandSink interface. It also enables access to the new primitive blend modes, MIN and ADD, through its SetPrimitiveBlend1 method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nn-d2d1_2-id2d1commandsink1" /></para>
    </summary>
  </comment>
  <comment id="IWICJpegFrameDecode::GetAcHuffmanTable">
    <summary>
      <para>Retrieves a copy of the AC Huffman table for the specified scan and table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-getachuffmantable" /></para>
      <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
      <param name="tableIndex">The index of the AC Huffman table to retrieve. Valid indices for a given scan can be determined by retrieving the scan header with <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicjpegframedecode-getscanheader">IWICJpegFrameDecode::GetScanHeader</a>.</param>
      <param name="acHuffmanTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalysisSink">
    <summary>
      <para>This interface is implemented by the text analyzer's client to receive the output of a given text analysis.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritetextanalysissink" /></para>
    </summary>
  </comment>
  <comment id="IDWriteRenderingParams1::GetGrayscaleEnhancedContrast">
    <summary>
      <para>Gets the amount of contrast enhancement to use for grayscale antialiasing.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwriterenderingparams1-getgrayscaleenhancedcontrast" /></para>
    </summary>
  </comment>
  <comment id="D2D1_2DAFFINETRANSFORM_PROP">
    <summary>
      <para>Identifiers for properties of the 2D affine transform effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_2daffinetransform_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_2DAFFINETRANSFORM_PROP::D2D1_2DAFFINETRANSFORM_PROP_INTERPOLATION_MODE">
    <summary>The interpolation mode used to scale the image. There are 6 scale modes that range in quality and speed.
            

Type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_2daffinetransform_interpolation_mode">D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE</a>.

Default value is D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_LINEAR.</summary>
  </comment>
  <comment id="D2D1_2DAFFINETRANSFORM_PROP::D2D1_2DAFFINETRANSFORM_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard.
            

Type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_mode">D2D1_BORDER_MODE</a>.

Default value is D2D1_BORDER_MODE_SOFT.</summary>
  </comment>
  <comment id="D2D1_2DAFFINETRANSFORM_PROP::D2D1_2DAFFINETRANSFORM_PROP_TRANSFORM_MATRIX">
    <summary>The 3x2 matrix to transform the image using the Direct2D matrix transform.
            

Type is <a href="https://docs.microsoft.com/windows/desktop/Direct2D/d2d1-matrix-3x2-f">D2D1_MATRIX_3X2_F</a>.

Default value is Matrix3x2F::Identity().</summary>
  </comment>
  <comment id="D2D1_2DAFFINETRANSFORM_PROP::D2D1_2DAFFINETRANSFORM_PROP_SHARPNESS">
    <summary>In the high quality cubic interpolation mode, the sharpness level of the scaling filter as a float between 0 and 1. The values are unitless. You can use sharpness to adjust the quality of an image when you scale the image.
            The sharpness factor affects the shape of the kernel. The higher the sharpness factor, the smaller the kernel.
            

<div class="alert"><b>Note</b>  This property affects only the high quality cubic interpolation mode.</div>
<div> </div>
Type is FLOAT.

Default value is 1.0f.</summary>
  </comment>
  <comment id="IDWriteRemoteFontFileStream::GetFileFragmentLocality">
    <summary>
      <para>Returns information about the locality of a byte range (i.e., font fragment) within the font file stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwriteremotefontfilestream-getfilefragmentlocality" /></para>
      <param name="fileOffset">Offset of the fragment from the beginning of the font file.</param>
      <param name="fragmentSize">Size of the fragment in bytes.</param>
      <param name="isLocal">Receives TRUE if the first byte of the fragment is local, FALSE if not.</param>
      <param name="partialSize">Receives the number of contiguous bytes from the start of the fragment that have the same locality as the first byte.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataReader::GetCount">
    <summary>
      <para>Gets the number of metadata items within the reader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareader-getcount" /></para>
      <param name="pcCount">Pointer that receives the number of metadata items within the reader.</param>
    </summary>
  </comment>
  <comment id="IDWriteColorGlyphRunEnumerator1">
    <summary>
      <para>Enumerator for an ordered collection of color glyph runs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritecolorglyphrunenumerator1" /></para>
    </summary>
  </comment>
  <comment id="WICNamedWhitePoint">
    <summary>
      <para>Specifies named white balances for raw images.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicnamedwhitepoint" /></para>
    </summary>
  </comment>
  <comment id="WICNamedWhitePoint::WICWhitePointDefault">
    <summary>The default white balance.</summary>
  </comment>
  <comment id="WICNamedWhitePoint::WICWhitePointDaylight">
    <summary>A daylight white balance.</summary>
  </comment>
  <comment id="WICNamedWhitePoint::WICWhitePointCloudy">
    <summary>A cloudy white balance.</summary>
  </comment>
  <comment id="WICNamedWhitePoint::WICWhitePointShade">
    <summary>A shade white balance.</summary>
  </comment>
  <comment id="WICNamedWhitePoint::WICWhitePointTungsten">
    <summary>A tungsten white balance.</summary>
  </comment>
  <comment id="WICNamedWhitePoint::WICWhitePointFluorescent">
    <summary>A fluorescent white balance.</summary>
  </comment>
  <comment id="WICNamedWhitePoint::WICWhitePointFlash">
    <summary>Daylight white balance.</summary>
  </comment>
  <comment id="WICNamedWhitePoint::WICWhitePointUnderwater">
    <summary>A flash white balance.</summary>
  </comment>
  <comment id="WICNamedWhitePoint::WICWhitePointCustom">
    <summary>A custom white balance. This is typically used when using a picture (grey-card) as white balance.</summary>
  </comment>
  <comment id="WICNamedWhitePoint::WICWhitePointAutoWhiteBalance">
    <summary>An automatic balance.</summary>
  </comment>
  <comment id="WICNamedWhitePoint::WICWhitePointAsShot">
    <summary>An "as shot" white balance.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_PROP">
    <summary>
      <para>Identifiers for properties of the Convolve matrix effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_convolvematrix_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_KERNEL_UNIT_LENGTH">
    <summary>The size of one unit in the kernel. The units are in (DIPs/kernel unit), where a kernel unit is the size of the element in the convolution kernel. 
          A value of 1 (DIP/kernel unit) corresponds to one pixel in a image at 96 DPI.
          

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_SCALE_MODE">
    <summary>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_convolvematrix_scale_mode">D2D1_CONVOLVEMATRIX_SCALE_MODE</a>.

The default value is D2D1_CONVOLVEMATRIX_SCALE_MODE_LINEAR.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_KERNEL_SIZE_X">
    <summary>The width of the kernel matrix. The units are specified in kernel units. 
          

The type is UINT32.

The default value is 3.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_KERNEL_SIZE_Y">
    <summary>The height of the kernel matrix. The units are specified in kernel units. 
          

The type is UINT32.

The default value is 3.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_KERNEL_MATRIX">
    <summary>The kernel matrix to be applied to the image. The kernel elements aren't bounded and are specified as floats.
          

The first set of KernelSizeX numbers in the FLOAT[] corresponds to the first row in the kernel.
          The second set of KernelSizeX numbers correspond to the second row, and so on up to KernelSizeY rows.

The type is FLOAT[].

The default value is {0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_DIVISOR">
    <summary>The kernel matrix is applied to a pixel and then the result is divided by this value. 
          

0 behaves as a value of float epsilon.

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_BIAS">
    <summary>The effect applies the kernel matrix, the divisor, and then the bias is added to the result. The bias is unbounded and unitless. 
          

The type is FLOAT.

The default value is 0.0f.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_KERNEL_OFFSET">
    <summary>Shifts the convolution kernel from a centered position on the output pixel to a position you specify left/right and up/down. The offset is defined in kernel units.
          

With some offsets and kernel sizes, the convolution kernel’s samples won't land on a pixel image center. The pixel values for the kernel sample are computed by bilinear interpolation.

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is {0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_PRESERVE_ALPHA">
    <summary>Specifies whether the convolution kernel is applied to the alpha channel or only the color channels.
          

If you set this to TRUE the convolution kernel is applied only to the color channels.

If you set this to FALSE the convolution kernel is applied to all channels.

The type is BOOL.

The default value is FALSE.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_mode">D2D1_BORDER_MODE</a>.

The default value is D2D1_BORDER_MODE_SOFT.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_PROP::D2D1_CONVOLVEMATRIX_PROP_CLAMP_OUTPUT">
    <summary>Whether the effect clamps color values to between 0 and 1 before the effect passes the values to the next effect in the graph. The effect clamps the values before it premultiplies the alpha.
          

If you set this to TRUE the effect will clamp the values. If you set this to FALSE, the effect will not clamp the color values, 
          but other effects and the output surface may clamp the values if they are not of high enough precision.

The type is BOOL.

The default value is FALSE.</summary>
  </comment>
  <comment id="IWICDevelopRaw::GetWhitePointKelvin">
    <summary>
      <para>Gets the white point Kelvin temperature of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getwhitepointkelvin" /></para>
      <param name="whitePointKelvin">A pointer that receives the white point Kelvin temperature of the raw image. The default is the "as-shot" setting value.</param>
    </summary>
  </comment>
  <comment id="ID2D1ImageBrush::GetSourceRectangle">
    <summary>
      <para>Gets the rectangle that will be used as the bounds of the image when drawn as an image brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-getsourcerectangle" /></para>
      <param name="sourceRectangle">When this method returns, contains the address of the output source rectangle.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext2::CreateTransformedImageSource">
    <summary>
      <para>Creates an image source which shares resources with an original.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext2-createtransformedimagesource" /></para>
      <param name="imageSource">The original image.</param>
      <param name="properties">Properties for the source image.</param>
      <param name="transformedImageSource">Receives the new image source.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory3::CreateGlyphRunAnalysis">
    <summary>
      <para>Creates a glyph-run-analysis object that encapsulates info that DirectWrite uses to render a glyph run.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefactory3-createglyphrunanalysis" /></para>
      <param name="glyphRun">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ns-dwrite-dwrite_glyph_run">DWRITE_GLYPH_RUN</a> structure that contains the properties of the glyph run.</param>
      <param name="transform">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ns-dwrite-dwrite_matrix">DWRITE_MATRIX</a> structure that describes the optional transform to be applied to glyphs and their positions.</param>
      <param name="renderingMode">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite_3/ne-dwrite_3-dwrite_rendering_mode1">DWRITE_RENDERING_MODE1</a>-typed value that specifies the rendering mode, which must be one of the raster rendering modes (that is, not default and not outline).</param>
      <param name="measuringMode">A <a href="https://docs.microsoft.com/windows/win32/api/dcommon/ne-dcommon-dwrite_measuring_mode">DWRITE_MEASURING_MODE</a>-typed value that specifies the measuring method for glyphs in the run. This method uses this value with the other properties to determine the rendering mode.</param>
      <param name="gridFitMode">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite_2/ne-dwrite_2-dwrite_grid_fit_mode">DWRITE_GRID_FIT_MODE</a>-typed value that specifies how to grid-fit glyph outlines. This value must be non-default.</param>
      <param name="antialiasMode">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ne-dwrite_1-dwrite_text_antialias_mode">DWRITE_TEXT_ANTIALIAS_MODE</a>-typed value that specifies the type of antialiasing to use for text when the rendering mode calls for antialiasing.</param>
      <param name="baselineOriginX">The horizontal position of the baseline origin, in DIPs, relative to the upper-left corner of the DIB.</param>
      <param name="baselineOriginY">The vertical position of the baseline origin, in DIPs, relative to the upper-left corner of the DIB.</param>
      <param name="glyphRunAnalysis">A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwriteglyphrunanalysis">IDWriteGlyphRunAnalysis</a> interface for the newly created glyph-run-analysis object.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device::SetMaximumTextureMemory">
    <summary>
      <para>Sets the maximum amount of texture memory Direct2D accumulates before it purges the image caches and cached texture allocations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1device-setmaximumtexturememory" /></para>
      <param name="maximumInBytes">The new maximum texture memory in bytes.</param>
    </summary>
  </comment>
  <comment id="ID2D1SimplifiedGeometrySink::SetFillMode">
    <summary>
      <para>Specifies the method used to determine which points are inside the geometry described by this geometry sink and which points are outside.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1simplifiedgeometrysink-setfillmode" /></para>
      <param name="fillMode">The method used to determine whether a given point is part of the geometry.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataHandlerInfo::DoesRequireFixedSize">
    <summary>
      <para>Determines if the metadata handler requires a fixed size.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatahandlerinfo-doesrequirefixedsize" /></para>
      <param name="pfFixedSize">Pointer that receives <b>TRUE</b> if a fixed size is required; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="IDWriteGlyphRunAnalysis">
    <summary>
      <para>Contains low-level information used to render a glyph run.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwriteglyphrunanalysis" /></para>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::BeginDraw">
    <summary>
      <para>Notifies the implementation of the command sink that drawing is about to commence.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-begindraw" /></para>
    </summary>
  </comment>
  <comment id="IWICEnumMetadataItem::Next">
    <summary>
      <para>Advanced the current position in the enumeration.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicenummetadataitem-next" /></para>
      <param name="celt">The number of items to be retrieved.</param>
      <param name="rgeltSchema">An array of enumerated items. This parameter is optional.</param>
      <param name="rgeltId">An array of enumerated items.</param>
      <param name="rgeltValue">An array of enumerated items. This parameter is optional.</param>
      <param name="pceltFetched">The number of items that were retrieved. This value is always less than or equal to the number of items requested.</param>
    </summary>
  </comment>
  <comment id="IDWriteStringList::GetStringLength">
    <summary>
      <para>Gets the length in characters (not including the null terminator) of the string with the specified index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritestringlist-getstringlength" /></para>
      <param name="listIndex">Zero-based index of the string.</param>
      <param name="length">Receives the length in characters of the string, not including the null terminator.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::GetCurrentParameterSet">
    <summary>
      <para>Gets the current set of parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getcurrentparameterset" /></para>
      <param name="currentParameterSet">A pointer that receives a pointer to the current set of parameters.</param>
    </summary>
  </comment>
  <comment id="ID2D1BitmapBrush">
    <summary>
      <para>Paints an area with a bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1bitmapbrush" /></para>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::GetSaturation">
    <summary>
      <para>Gets the saturation value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getsaturation" /></para>
      <param name="saturation">A pointer that receives the saturation value of the raw image. The default value is the "as-shot" setting. The value range for saturation is 0.0 through 1.0. A value of 0.0 represents an image with a fully de-saturated image, while a value of 1.0 represents the highest amount of saturation that can be applied.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapSourceTransform">
    <summary>
      <para>Exposes methods for offloading certain operations to the underlying IWICBitmapSource implementation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapsourcetransform" /></para>
    </summary>
  </comment>
  <comment id="IWICStream::InitializeFromIStreamRegion">
    <summary>
      <para>Initializes the stream as a substream of another stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicstream-initializefromistreamregion" /></para>
      <param name="iStream">Pointer to the input stream.</param>
      <param name="ulOffset">The stream offset used to create the new stream.</param>
      <param name="ulMaxSize">The maximum size of the stream.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFaceReference">
    <summary>
      <para>Represents a reference to a font face.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontfacereference" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Factory6">
    <summary>
      <para>Creates Direct2D resources. This interface also enables the creation of ID2D1Device5 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1factory6" /></para>
    </summary>
  </comment>
  <comment id="ID2D1VertexBuffer::Map">
    <summary>
      <para>Maps the provided data into user memory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1vertexbuffer-map" /></para>
      <param name="data">When this method returns, contains the address of a pointer to the available buffer.</param>
      <param name="bufferSize">The desired size of the buffer.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat">
    <summary>
      <para>The IDWriteTextFormat interface describes the font and paragraph properties used to format text, and it describes locale information.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritetextformat" /></para>
    </summary>
  </comment>
  <comment id="ID2D1TessellationSink::Close">
    <summary>
      <para>Closes the sink and returns its error status.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1tessellationsink-close" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgPaint::SetPaintType">
    <summary>
      <para>Sets the paint type.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-setpainttype" /></para>
      <param name="paintType">The new paint type.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgAttribute">
    <summary>
      <para>Interface describing an SVG attribute.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nn-d2d1svg-id2d1svgattribute" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace4::GetGlyphImageData">
    <summary>
      <para>Gets a pointer to the glyph data based on the desired image format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface4-getglyphimagedata" /></para>
      <param name="glyphId">The ID of the glyph to retrieve image data for.</param>
      <param name="pixelsPerEm">Requested pixels per em.</param>
      <param name="glyphImageFormat">Specifies which formats are supported in the font.</param>
      <param name="glyphData">On return contains data for a glyph.</param>
      <param name="glyphDataContext" />
    </summary>
  </comment>
  <comment id="ID2D1TransformedImageSource">
    <summary>
      <para>Represents an image source which shares resources with an original image source.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1transformedimagesource" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontSetBuilder">
    <summary>
      <para>Contains methods for building a font set.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontsetbuilder" /></para>
    </summary>
  </comment>
  <comment id="ID2D1PathGeometry::GetSegmentCount">
    <summary>
      <para>Retrieves the number of segments in the path geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1pathgeometry-getsegmentcount" /></para>
      <param name="count">A pointer that receives the number of segments in the path geometry when this method returns. You must allocate storage for this parameter.</param>
    </summary>
  </comment>
  <comment id="IWICJpegFrameDecode::GetScanHeader">
    <summary>
      <para>Retrieves parameters from the Start Of Scan (SOS) marker for the scan with the specified index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-getscanheader" /></para>
      <param name="scanIndex">The index of the scan for which header data is retrieved.</param>
      <param name="scanHeader">A pointer that receives the frame header data.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace3::IsCharacterLocal">
    <summary>
      <para>Determines whether the character is locally downloaded from the font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface3-ischaracterlocal" /></para>
      <param name="unicodeValue">A Unicode (UCS-4) character value.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontList::GetFontCount">
    <summary>
      <para>Gets the number of fonts in the font list.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontlist-getfontcount" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Device2::CreateDeviceContext">
    <summary>
      <para>Creates a new ID2D1DeviceContext2 from a Direct2D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device2-createdevicecontext" /></para>
      <param name="options">The options to be applied to the created device context.</param>
      <param name="deviceContext2">When this method returns, contains the address of a pointer to the new device context.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device4::SetMaximumColorGlyphCacheMemory">
    <summary>
      <para>Sets the maximum capacity of the color glyph cache.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device4-setmaximumcolorglyphcachememory" /></para>
      <param name="maximumInBytes">The maximum capacity of the color glyph cache.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataWriterInfo::CreateInstance">
    <summary>
      <para>Creates an instance of an IWICMetadataWriter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatawriterinfo-createinstance" /></para>
      <param name="iWriter">Pointer that receives a pointer to a metadata writer.</param>
    </summary>
  </comment>
  <comment id="ID2D1Resource">
    <summary>
      <para>Represents a Direct2D drawing resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1resource" /></para>
    </summary>
  </comment>
  <comment id="IWICMetadataBlockReader::GetCount">
    <summary>
      <para>Retrieves the number of top level metadata blocks.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockreader-getcount" /></para>
      <param name="pcCount">When this method returns, contains the number of top level metadata blocks.</param>
    </summary>
  </comment>
  <comment id="ID2D1SpriteBatch">
    <summary>
      <para>Represents a single group of sprites with their associated drawing properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1spritebatch" /></para>
    </summary>
  </comment>
  <comment id="IDWriteStringList::GetLocaleNameLength">
    <summary>
      <para>Gets the length in characters (not including the null terminator) of the locale name with the specified index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritestringlist-getlocalenamelength" /></para>
      <param name="listIndex">Zero-based index of the locale name.</param>
      <param name="length">Receives the length in characters, not including the null terminator.</param>
    </summary>
  </comment>
  <comment id="IDWriteInlineObject::Draw">
    <summary>
      <para>The application implemented rendering callback (IDWriteTextRenderer::DrawInlineObject) can use this to draw the inline object without needing to cast or query the object type. The text layout does not call this method directly.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwriteinlineobject-draw" /></para>
      <param name="clientDrawingContext">The drawing context passed to <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextlayout-draw">IDWriteTextLayout::Draw</a>.  This parameter may be <b>NULL</b>.</param>
      <param name="renderer">The same renderer passed to <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextlayout-draw">IDWriteTextLayout::Draw</a> as the object's containing parent.  This is useful if the inline object is recursive such as a nested layout.</param>
      <param name="originX">The x-coordinate at the upper-left corner of the inline object.</param>
      <param name="originY">The y-coordinate at the upper-left corner of the inline object.</param>
      <param name="isSideways">A Boolean flag that indicates whether the object's baseline runs alongside the baseline axis of the line.</param>
      <param name="isRightToLeft">A Boolean flag that indicates whether the object is in a right-to-left context and should be drawn flipped.</param>
      <param name="clientDrawingEffect">The drawing effect set in <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextlayout-setdrawingeffect">IDWriteTextLayout::SetDrawingEffect</a>.  Usually this effect is a foreground brush that  is used in glyph drawing.</param>
    </summary>
  </comment>
  <comment id="D2D1ConvertColorSpace">
    <summary>
      <para>Converts the given color from one colorspace to another.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-d2d1convertcolorspace" /></para>
      <param name="sourceColorSpace">The source color space.</param>
      <param name="destinationColorSpace">The destination color space.</param>
      <param name="color">The source color.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::SetUnitMode">
    <summary>
      <para>The unit mode changes the meaning of subsequent units from device-independent pixels (DIPs) to pixels or the other way. The command sink does not record a DPI, this is implied by the playback context or other playback interface such as ID2D1PrintControl.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-setunitmode" /></para>
      <param name="unitMode">The enumeration that specifies how units are to be interpreted.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFamily1">
    <summary>
      <para>Represents a family of related fonts.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontfamily1" /></para>
    </summary>
  </comment>
  <comment id="ID2D1OffsetTransform::GetOffset">
    <summary>
      <para>Gets the offset currently in the offset transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1offsettransform-getoffset" /></para>
    </summary>
  </comment>
  <comment id="D2D1_EFFECT_INPUT_DESCRIPTION">
    <summary>
      <para>Describes features of an effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_effect_input_description" /></para>
    </summary>
  </comment>
  <comment id="D2D1_EFFECT_INPUT_DESCRIPTION::effect">
    <summary>The effect whose input connection is being specified.</summary>
  </comment>
  <comment id="D2D1_EFFECT_INPUT_DESCRIPTION::inputIndex">
    <summary>The input index of the effect that is being considered.</summary>
  </comment>
  <comment id="D2D1_EFFECT_INPUT_DESCRIPTION::inputRectangle">
    <summary>The amount of data that would be available on the input. This can be used to query this information when the data is not yet available.</summary>
  </comment>
  <comment id="WICComponentEnumerateOptions">
    <summary>
      <para>Specifies component enumeration options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wiccomponentenumerateoptions" /></para>
    </summary>
  </comment>
  <comment id="WICComponentEnumerateOptions::WICComponentEnumerateDefault">
    <summary>Enumerate any components that are not disabled. Because this value is 0x0, it is always included with the other options.</summary>
  </comment>
  <comment id="WICComponentEnumerateOptions::WICComponentEnumerateRefresh">
    <summary>Force a read of the registry before enumerating components.</summary>
  </comment>
  <comment id="WICComponentEnumerateOptions::WICComponentEnumerateDisabled">
    <summary>Include disabled components in the enumeration. The set of disabled components is disjoint with the set of default enumerated components</summary>
  </comment>
  <comment id="WICComponentEnumerateOptions::WICComponentEnumerateUnsigned">
    <summary>Include unsigned components in the enumeration. This option has no effect.</summary>
  </comment>
  <comment id="WICComponentEnumerateOptions::WICComponentEnumerateBuiltInOnly">
    <summary>At the end of component enumeration, filter out any components that are not Windows provided.</summary>
  </comment>
  <comment id="IWICComponentFactory::CreateQueryWriterFromBlockWriter">
    <summary>
      <para>Creates a IWICMetadataQueryWriter from the given IWICMetadataBlockWriter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createquerywriterfromblockwriter" /></para>
      <param name="iBlockWriter">Pointer to the metadata block reader to base the metadata query writer on.</param>
      <param name="iQueryWriter">A pointer that receives a pointer to the new metadata query writer.</param>
    </summary>
  </comment>
  <comment id="ID2D1TessellationSink">
    <summary>
      <para>Populates an ID2D1Mesh object with triangles.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1tessellationsink" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ConcreteTransform::SetCached">
    <summary>
      <para>Sets whether the output of the specified transform is cached.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1concretetransform-setcached" /></para>
      <param name="isCached"><b>TRUE</b> if the output should be cached; otherwise,  <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapDecoder::GetDecoderInfo">
    <summary>
      <para>Retrieves an IWICBitmapDecoderInfo for the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getdecoderinfo" /></para>
      <param name="iDecoderInfo">A pointer that receives a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoderinfo">IWICBitmapDecoderInfo</a>.</param>
    </summary>
  </comment>
  <comment id="IDWritePixelSnapping::GetPixelsPerDip">
    <summary>
      <para>Gets the number of physical pixels per DIP.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritepixelsnapping-getpixelsperdip" /></para>
      <param name="clientDrawingContext">The drawing context passed to <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextlayout-draw">IDWriteTextLayout::Draw</a>.</param>
      <param name="pixelsPerDip">When this method returns, contains the number of physical pixels per DIP.</param>
    </summary>
  </comment>
  <comment id="WICPixelFormatNumericRepresentation">
    <summary>
      <para>Defines constants that specify a primitive type for numeric representation of a WIC pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpixelformatnumericrepresentation" /></para>
    </summary>
  </comment>
  <comment id="WICPixelFormatNumericRepresentation::WICPixelFormatNumericRepresentationUnspecified">
    <summary>The format is not specified.</summary>
  </comment>
  <comment id="WICPixelFormatNumericRepresentation::WICPixelFormatNumericRepresentationIndexed">
    <summary>Specifies that the format is indexed.</summary>
  </comment>
  <comment id="WICPixelFormatNumericRepresentation::WICPixelFormatNumericRepresentationUnsignedInteger">
    <summary>Specifies that the format is represented as an unsigned integer.</summary>
  </comment>
  <comment id="WICPixelFormatNumericRepresentation::WICPixelFormatNumericRepresentationSignedInteger">
    <summary>Specifies that the format is represented as a signed integer.</summary>
  </comment>
  <comment id="WICPixelFormatNumericRepresentation::WICPixelFormatNumericRepresentationFixed">
    <summary>Specifies that the format is represented as a fixed-point number.</summary>
  </comment>
  <comment id="WICPixelFormatNumericRepresentation::WICPixelFormatNumericRepresentationFloat">
    <summary>Specifies that the format is represented as a floating-point number.</summary>
  </comment>
  <comment id="WICPixelFormatNumericRepresentation::WICPixelFormatNumericRepresentation_FORCE_DWORD">
    <summary>This constant contains the maximum **DWORD** value.</summary>
  </comment>
  <comment id="ID2D1OffsetTransform::SetOffset">
    <summary>
      <para>Sets the offset in the current offset transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1offsettransform-setoffset" /></para>
      <param name="offset">The new offset to apply to the offset transform.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::GetTarget">
    <summary>
      <para>Gets the target currently associated with the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-gettarget" /></para>
      <param name="image">When this method returns, contains the address of a pointer to the target currently associated with the device context.</param>
    </summary>
  </comment>
  <comment id="WICGetMetadataContentSize">
    <summary>
      <para>Returns the size of the metadata content contained by the specified IWICMetadataWriter. The returned size accounts for the header and the length of the metadata.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-wicgetmetadatacontentsize" /></para>
      <param name="guidContainerFormat">The container GUID.</param>
      <param name="iWriter">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/nn-wincodecsdk-iwicmetadatawriter">IWICMetadataWriter</a> that contains the content.</param>
      <param name="pcbSize">A pointer that receives the size of the metadata content.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgStrokeDashArray">
    <summary>
      <para>Interface describing an SVG stroke-dasharray value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nn-d2d1svg-id2d1svgstrokedasharray" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer">
    <summary>
      <para>Analyzes various text properties for complex script processing such as bidirectional (bidi) support for languages like Arabic, determination of line break opportunities, glyph placement, and number substitution.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritetextanalyzer" /></para>
    </summary>
  </comment>
  <comment id="IDWriteRenderingParams2">
    <summary>
      <para>Represents text rendering settings for glyph rasterization and filtering.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nn-dwrite_2-idwriterenderingparams2" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontSetBuilder1">
    <summary>
      <para>Contains methods for building a font set.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontsetbuilder1" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Factory">
    <summary>
      <para>Creates Direct2D resources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1factory" /></para>
    </summary>
  </comment>
  <comment id="IWICImageEncoder::WriteFrameThumbnail">
    <summary>
      <para>Encodes the image as a thumbnail to the frame given by the IWICBitmapFrameEncode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimageencoder-writeframethumbnail" /></para>
      <param name="image">The Direct2D image that will be encoded.</param>
      <param name="frameEncode">The frame encoder on which the thumbnail is set.</param>
      <param name="imageParameters">Additional parameters to control encoding.</param>
    </summary>
  </comment>
  <comment id="WICBitmapDitherType">
    <summary>
      <para>Specifies the type of dither algorithm to apply when converting between image formats.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmapdithertype" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapDitherType::WICBitmapDitherTypeNone">
    <summary>A solid color algorithm without dither.</summary>
  </comment>
  <comment id="WICBitmapDitherType::WICBitmapDitherTypeSolid">
    <summary>A solid color algorithm without dither.</summary>
  </comment>
  <comment id="WICBitmapDitherType::WICBitmapDitherTypeOrdered4x4">
    <summary>A 4x4 ordered dither algorithm.</summary>
  </comment>
  <comment id="WICBitmapDitherType::WICBitmapDitherTypeOrdered8x8">
    <summary>An 8x8 ordered dither algorithm.</summary>
  </comment>
  <comment id="WICBitmapDitherType::WICBitmapDitherTypeOrdered16x16">
    <summary>A 16x16 ordered dither algorithm.</summary>
  </comment>
  <comment id="WICBitmapDitherType::WICBitmapDitherTypeSpiral4x4">
    <summary>A 4x4 spiral dither algorithm.</summary>
  </comment>
  <comment id="WICBitmapDitherType::WICBitmapDitherTypeSpiral8x8">
    <summary>An 8x8 spiral dither algorithm.</summary>
  </comment>
  <comment id="WICBitmapDitherType::WICBitmapDitherTypeDualSpiral4x4">
    <summary>A 4x4 dual spiral dither algorithm.</summary>
  </comment>
  <comment id="WICBitmapDitherType::WICBitmapDitherTypeDualSpiral8x8">
    <summary>An 8x8 dual spiral dither algorithm.</summary>
  </comment>
  <comment id="WICBitmapDitherType::WICBitmapDitherTypeErrorDiffusion">
    <summary>An error diffusion algorithm.</summary>
  </comment>
  <comment id="IDWriteTextFormat::GetFontCollection">
    <summary>
      <para>Gets the current font collection.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getfontcollection" /></para>
      <param name="fontCollection">When this method returns, contains an address of a pointer to the font collection being used for the current text.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapEncoder">
    <summary>
      <para>Defines methods for setting an encoder's properties such as thumbnails, frames, and palettes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapencoder" /></para>
    </summary>
  </comment>
  <comment id="IWICJpegFrameEncode::WriteScan">
    <summary>
      <para>Writes scan data to a JPEG frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframeencode-writescan" /></para>
      <param name="cbScanData">The size of the data in the <i>pbScanData</i> parameter.</param>
      <param name="pbScanData">The scan data to write.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderInfo::SetInputDescription">
    <summary>
      <para>Sets how a specific input to the transform should be handled by the renderer in terms of sampling.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1renderinfo-setinputdescription" /></para>
      <param name="inputIndex">The index of the input that will have the input description applied.</param>
      <param name="inputDescription">The description of the input to be applied to the transform.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::FindResourceTexture">
    <summary>
      <para>Finds the given resource texture if it has already been created with ID2D1EffectContext::CreateResourceTexture with the same GUID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-findresourcetexture" /></para>
      <param name="resourceId">The unique id that identifies the resource texture.</param>
      <param name="resourceTexture">The returned texture that can be used as a resource in a Direct2D effect.</param>
    </summary>
  </comment>
  <comment id="IWICPlanarBitmapSourceTransform">
    <summary>
      <para>Provides access to planar Y’CbCr pixel formats where pixel components are stored in separate component planes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicplanarbitmapsourcetransform" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::SetFlowDirection">
    <summary>
      <para>Sets the paragraph flow direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-setflowdirection" /></para>
      <param name="flowDirection">The paragraph flow direction; see <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_flow_direction">DWRITE_FLOW_DIRECTION</a> for more information.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory5::UnpackFontFile">
    <summary>
      <para>The UnpackFontFile method unpacks font data from a container file (WOFF or WOFF2) and returns the unpacked font data in the form of a font file stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefactory5-unpackfontfile" /></para>
      <param name="containerType">Container type returned by AnalyzeContainerType.</param>
      <param name="fileData">Pointer to the compressed data.</param>
      <param name="fileDataSize">Size of the compressed data, in bytes.</param>
      <param name="unpackedFontStream">Receives a pointer to a newly created font file stream containing the uncompressed data.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::SetTarget">
    <summary>
      <para>The bitmap or command list to which the Direct2D device context will now render.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-settarget" /></para>
      <param name="image">The surface or command list to which the Direct2D device context will render.</param>
    </summary>
  </comment>
  <comment id="ID2D1Ink::GetSegmentCount">
    <summary>
      <para>Returns the number of segments in this ink object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1ink-getsegmentcount" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace::GetGlyphCount">
    <summary>
      <para>Obtains the number of glyphs in the font face.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-getglyphcount" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapDecoderInfo::GetPatterns">
    <summary>
      <para>Retrieves the file pattern signatures supported by the decoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoderinfo-getpatterns" /></para>
      <param name="cbSizePatterns">The array size of the <i>pPatterns</i> array.</param>
      <param name="patterns">Receives a list of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ns-wincodec-wicbitmappattern">WICBitmapPattern</a> objects supported by the decoder.</param>
      <param name="pcPatterns">Receives the number of patterns the decoder supports.</param>
      <param name="pcbPatternsActual">Receives the actual buffer size needed to retrieve all pattern signatures supported by the decoder.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::SetPrimitiveBlend">
    <summary>
      <para>Sets a new primitive blend mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-setprimitiveblend" /></para>
      <param name="primitiveBlend">The primitive blend that will apply to subsequent primitives.</param>
    </summary>
  </comment>
  <comment id="D2D1_OPACITYMETADATA_PROP">
    <summary>
      <para>Identifiers for properties of the Opacity metadata effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_opacitymetadata_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_OPACITYMETADATA_PROP::D2D1_OPACITYMETADATA_PROP_INPUT_OPAQUE_RECT">
    <summary>The portion of the source image that is opaque. The default is the entire input image.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_4f">D2D1_VECTOR_4F</a>.

The default is {-FLT_MAX, -FLT_MAX, FLT_MAX, FLT_MAX}.</summary>
  </comment>
  <comment id="D2D1_POSTERIZE_PROP">
    <summary>
      <para>Identifiers for properties of the Posterize effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_posterize_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_POSTERIZE_PROP::D2D1_POSTERIZE_PROP_RED_VALUE_COUNT">
    <summary>The D2D1_POSTERIZE_PROP_RED_VALUE_COUNT property is an integer value specifying how many evenly spaced steps to divide the red channel range of 0.0 to 1.0 into.  
          For example, a value of 4 generates a table with 4 steps, [0.0, 0.33, 0.67, 1.0].  The allowed range for this property is 2 to 16.  The default value is 4.</summary>
  </comment>
  <comment id="D2D1_POSTERIZE_PROP::D2D1_POSTERIZE_PROP_GREEN_VALUE_COUNT">
    <summary>The D2D1_POSTERIZE_PROP_GREEN_VALUE_COUNT property is an integer value specifying how many evenly spaced steps to divide the green channel range of 0.0 to 1.0 into.  
          For example, a value of 4 generates a table with 4 steps, [0.0, 0.33, 0.67, 1.0].  The allowed range for this property is 2 to 16.  The default value is 4.</summary>
  </comment>
  <comment id="D2D1_POSTERIZE_PROP::D2D1_POSTERIZE_PROP_BLUE_VALUE_COUNT">
    <summary>The D2D1_POSTERIZE_PROP_BLUE_VALUE_COUNT property is an integer value specifying how many evenly spaced steps to divide the blue channel range of 0.0 to 1.0 into.  
          For example, a value of 4 generates a table with 4 steps, [0.0, 0.33, 0.67, 1.0].  The allowed range for this property is 2 to 16.  The default value is 4.</summary>
  </comment>
  <comment id="D2D1CreateFactory">
    <summary>
      <para>Creates a factory object that can be used to create Direct2D resources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-d2d1createfactory" /></para>
      <param name="factoryType">The threading model of the factory and the resources it creates.</param>
      <param name="riid">A reference to the IID of <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1factory">ID2D1Factory</a> that is obtained by using `__uuidof(ID2D1Factory)`.</param>
      <param name="factoryOptions">The level of detail provided to the debugging layer.</param>
      <param name="iFactory">When this method returns, contains the address to a pointer to the new factory.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFile::GetLoader">
    <summary>
      <para>Obtains the file loader associated with a font file object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfile-getloader" /></para>
      <param name="fontFileLoader">When this method returns, contains the address of  a pointer to the font file loader associated with the font file object.</param>
    </summary>
  </comment>
  <comment id="IWICJpegFrameDecode::GetFrameHeader">
    <summary>
      <para>Retrieves header data from the entire frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-getframeheader" /></para>
      <param name="frameHeader">A pointer that receives the frame header data.</param>
    </summary>
  </comment>
  <comment id="IWICPalette::GetColorCount">
    <summary>
      <para>Retrieves the number of colors in the color table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-getcolorcount" /></para>
      <param name="pcCount">Pointer that receives the number of colors in the color table.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::SetTextValue">
    <summary>
      <para>Sets the value of a text content element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-settextvalue" /></para>
      <param name="name">The new value of the text content element.</param>
      <param name="nameCount" />
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::HitTestTextPosition">
    <summary>
      <para>The application calls this function to get the pixel location relative to the top-left of the layout box given the text position and the logical side of the position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-hittesttextposition" /></para>
      <param name="textPosition">The text position used to get the pixel location.</param>
      <param name="isTrailingHit">A Boolean flag that indicates whether the pixel location is of the leading or the trailing side of the specified text position.</param>
      <param name="pointX">When this method returns, contains the output pixel location X, relative to the top-left location of the layout box.</param>
      <param name="pointY">When this method returns, contains the output pixel location Y, relative to the top-left location of the layout box.</param>
      <param name="hitTestMetrics">When this method returns, contains the output geometry fully enclosing the specified text position.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::SetPrimitiveBlend">
    <summary>
      <para>Changes the primitive blend mode that is used for all rendering operations in the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-setprimitiveblend" /></para>
      <param name="primitiveBlend">The primitive blend to use.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::DrawGeometry">
    <summary>
      <para>Indicates the geometry to be drawn to the command sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-drawgeometry" /></para>
      <param name="geometry">The geometry to be stroked.</param>
      <param name="brush">The brush that will be used to fill the stroked geometry.</param>
      <param name="strokeWidth">The width of the stroke.</param>
      <param name="strokeStyle">The style of the stroke.</param>
    </summary>
  </comment>
  <comment id="ID2D1GradientMesh">
    <summary>
      <para>Represents a device-dependent representation of a gradient mesh composed of patches. Use the ID2D1DeviceContext2::CreateGradientMesh method to create an instance of ID2D1GradientMesh.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1gradientmesh" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Ink::AddSegments">
    <summary>
      <para>Adds the given segments to the end of this ink object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1ink-addsegments" /></para>
      <param name="segments">A pointer to an array of segments to be added to this ink object.</param>
      <param name="segmentsCount">The number of segments to be added to this ink object.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataHandlerInfo::GetContainerFormats">
    <summary>
      <para>Retrieves the container formats supported by the metadata handler.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatahandlerinfo-getcontainerformats" /></para>
      <param name="cContainerFormats">The size of the <i>pguidContainerFormats</i> array.</param>
      <param name="pguidContainerFormats">Pointer to an array that receives the container formats supported by the metadata handler.</param>
      <param name="pcchActual">The actual number of GUIDs added to the array.
               

To obtain the number of supported container formats, pass <c>NULL</c> to <i>pguidContainerFormats</i>.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device2::FlushDeviceContexts">
    <summary>
      <para>Flush all device contexts that reference a given bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device2-flushdevicecontexts" /></para>
      <param name="bitmap">The bitmap, created on this device, for which all referencing device contexts will be flushed.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::GetContrast">
    <summary>
      <para>Gets the contrast value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getcontrast" /></para>
      <param name="contrast">A pointer that receives the contrast value of the raw image. The default value is the "as-shot" setting. The value range for contrast is 0.0 through 1.0. The 0.0 lower limit represents no contrast applied to the image, while the 1.0 upper limit represents the highest amount of contrast that can be applied.</param>
    </summary>
  </comment>
  <comment id="IDWriteBitmapRenderTarget::Resize">
    <summary>
      <para>Resizes the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritebitmaprendertarget-resize" /></para>
      <param name="width">The new bitmap width, in pixels.</param>
      <param name="height">The new bitmap height, in pixels.</param>
    </summary>
  </comment>
  <comment id="D2D1_BORDER_PROP">
    <summary>
      <para>Identifiers for properties of the Border effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_border_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BORDER_PROP::D2D1_BORDER_PROP_EDGE_MODE_X">
    <summary>The edge mode in the X direction for the effect. You can set this to clamp, wrap, or mirror.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_edge_mode">D2D1_BORDER_EDGE_MODE</a>.

The default value is D2D1_BORDER_EDGE_MODE_CLAMP.</summary>
  </comment>
  <comment id="D2D1_BORDER_PROP::D2D1_BORDER_PROP_EDGE_MODE_Y">
    <summary>The edge mode in the Y direction for the effect. You can set this to clamp, wrap, or mirror.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_edge_mode">D2D1_BORDER_EDGE_MODE</a>.

The default value is D2D1_BORDER_EDGE_MODE_CLAMP.</summary>
  </comment>
  <comment id="D2D1_ARITHMETICCOMPOSITE_PROP">
    <summary>
      <para>Identifiers for the properties of the Arithmetic composite effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_arithmeticcomposite_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_ARITHMETICCOMPOSITE_PROP::D2D1_ARITHMETICCOMPOSITE_PROP_COEFFICIENTS">
    <summary>The coefficients for the equation used to composite the two input images. The coefficients are unitless and unbounded.
            

Type is D2D1_VECTOR_4F.

Default value is {1.0f, 0.0f, 0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_ARITHMETICCOMPOSITE_PROP::D2D1_ARITHMETICCOMPOSITE_PROP_CLAMP_OUTPUT">
    <summary>The effect clamps color values to between 0 and 1 before the effect passes the values to the next effect in the graph.
            If you set this to TRUE the effect will clamp the values. If you set this to FALSE, the effect will not clamp the color values, 
            but other effects and the output surface may clamp the values if they are not of high enough precision.
            

Type is BOOL.

Default value is FALSE.</summary>
  </comment>
  <comment id="IDWriteLocalFontFileLoader::GetLastWriteTimeFromKey">
    <summary>
      <para>Obtains the last write time of the file from the font file reference key.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritelocalfontfileloader-getlastwritetimefromkey" /></para>
      <param name="fontFileReferenceKey">The font file reference key that uniquely identifies the local font file
    within the scope of the font loader being used.</param>
      <param name="fontFileReferenceKeySize">The size of font file reference key in bytes.</param>
      <param name="lastWriteTime">The time of the last font file modification.</param>
    </summary>
  </comment>
  <comment id="IDWriteBitmapRenderTarget1::SetTextAntialiasMode">
    <summary>
      <para>Sets the current text antialiasing mode of the bitmap render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritebitmaprendertarget1-settextantialiasmode" /></para>
      <param name="antialiasMode">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ne-dwrite_1-dwrite_text_antialias_mode">DWRITE_TEXT_ANTIALIAS_MODE</a>-typed value that specifies the antialiasing mode.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateComponentEnumerator">
    <summary>
      <para>Creates an IEnumUnknown object of the specified component types.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createcomponentenumerator" /></para>
      <param name="componentTypes">The types of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccomponenttype">WICComponentType</a> to enumerate.</param>
      <param name="options">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccomponentenumerateoptions">WICComponentEnumerateOptions</a> used to enumerate the given component types.</param>
      <param name="iEnumUnknown">A pointer that receives a pointer to a new component enumerator.</param>
    </summary>
  </comment>
  <comment id="IDWriteBitmapRenderTarget1">
    <summary>
      <para>Encapsulates a 32-bit device independent bitmap and device context, which you can use for rendering glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nn-dwrite_1-idwritebitmaprendertarget1" /></para>
    </summary>
  </comment>
  <comment id="D2D1_EXTEND_MODE">
    <summary>
      <para>Specifies how a brush paints areas outside of its normal content area.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_extend_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_EXTEND_MODE::D2D1_EXTEND_MODE_CLAMP">
    <summary>Repeat the edge pixels of the brush's content for all regions outside the normal content area.</summary>
  </comment>
  <comment id="D2D1_EXTEND_MODE::D2D1_EXTEND_MODE_WRAP">
    <summary>Repeat the brush's content.</summary>
  </comment>
  <comment id="D2D1_EXTEND_MODE::D2D1_EXTEND_MODE_MIRROR">
    <summary>The same as D2D1_EXTEND_MODE_WRAP, except that alternate tiles of the brush's content are flipped. (The brush's normal content is drawn untransformed.)</summary>
  </comment>
  <comment id="ID2D1Ink::RemoveSegmentsAtEnd">
    <summary>
      <para>Removes the given number of segments from the end of this ink object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1ink-removesegmentsatend" /></para>
      <param name="segmentsCount">The number of segments to be removed from the end of this ink object. Note that segmentsCount must be less or equal to the number of segments in the ink object.</param>
    </summary>
  </comment>
  <comment id="WICPlanarOptions">
    <summary>
      <para>Specifies additional options to an IWICPlanarBitmapSourceTransform implementation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicplanaroptions" /></para>
    </summary>
  </comment>
  <comment id="WICPlanarOptions::WICPlanarOptionsDefault">
    <summary>No options specified.  



WIC JPEG Decoder:  The default behavior for iDCT scaling is to preserve quality when downscaling by downscaling only the Y plane in some cases, and the image may change to 4:4:4 chroma subsampling.</summary>
  </comment>
  <comment id="WICPlanarOptions::WICPlanarOptionsPreserveSubsampling">
    <summary>Asks the source to preserve the size ratio between planes when scaling.

WIC JPEG Decoder:  Specifying this option causes the JPEG decoder to scale luma and chroma planes by the same amount, so a 4:2:0 chroma subsampled image outputs 4:2:0 data when downscaling by 2x, 4x, or 8x.</summary>
  </comment>
  <comment id="IWICBitmapEncoder::GetEncoderInfo">
    <summary>
      <para>Retrieves an IWICBitmapEncoderInfo for the encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-getencoderinfo" /></para>
      <param name="iEncoderInfo">A pointer that receives a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapencoderinfo">IWICBitmapEncoderInfo</a>.</param>
    </summary>
  </comment>
  <comment id="IDWritePixelSnapping::GetCurrentTransform">
    <summary>
      <para>Gets a transform that maps abstract coordinates to DIPs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritepixelsnapping-getcurrenttransform" /></para>
      <param name="clientDrawingContext">The drawing context passed to <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextlayout-draw">IDWriteTextLayout::Draw</a>.</param>
      <param name="transform">When this method returns, contains a structure which has transform information for  pixel snapping.</param>
    </summary>
  </comment>
  <comment id="ID2D1Factory1::GetRegisteredEffects">
    <summary>
      <para>Returns the class IDs of the currently registered effects and global effects on this factory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-getregisteredeffects" /></para>
      <param name="effects">When this method returns, contains an array of effects. <b>NULL</b> if no effects are retrieved.</param>
      <param name="effectsCount">The capacity of the <i>effects</i> array.</param>
      <param name="effectsReturned">When this method returns, contains the  number of effects copied into <i>effects</i>.</param>
      <param name="effectsRegistered">When this method returns, contains the number of effects currently registered in the system.</param>
    </summary>
  </comment>
  <comment id="IWICFormatConverterInfo">
    <summary>
      <para>Exposes methods that provide information about a pixel format converter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicformatconverterinfo" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace::GetGlyphRunOutline">
    <summary>
      <para>Computes the outline of a run of glyphs by calling back to the outline sink interface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-getglyphrunoutline" /></para>
      <param name="emSize">The logical size of the font in DIP units. A DIP ("device-independent pixel") equals 1/96 inch.</param>
      <param name="glyphIndices">An array of glyph indices. The glyphs are in logical order and the advance direction depends on the <i>isRightToLeft</i> parameter. The array must be allocated and be able to contain the number of elements specified by <i>glyphCount</i>.</param>
      <param name="glyphAdvances">An optional array of glyph advances in DIPs. The advance of a glyph is the amount to advance the position (in the direction of the baseline) after drawing the glyph. <i>glyphAdvances</i> contains the number of elements specified by <i>glyphCount</i>.</param>
      <param name="glyphOffsets">An optional array of glyph offsets, each of which specifies the offset along the baseline and offset perpendicular to the baseline of a glyph relative to the current pen position.   <i>glyphOffsets</i> contains the number of elements specified by <i>glyphCount</i>.</param>
      <param name="glyphCount">The number of glyphs in the run.</param>
      <param name="isSideways">If <b>TRUE</b>, the ascender of the glyph runs alongside the baseline. If <b>FALSE</b>, the glyph ascender runs perpendicular to the baseline. For example, an English alphabet on a vertical baseline would have <i>isSideways</i> set to <b>FALSE</b>.

A client can render a vertical run by setting <i>isSideways</i> to <b>TRUE</b> and rotating the resulting geometry 90 degrees to the
     right using a transform. The <i>isSideways</i> and <i>isRightToLeft</i> parameters cannot both be true.</param>
      <param name="isRightToLeft">The visual order of the glyphs. If this parameter is <b>FALSE</b>, then glyph advances are from left to right. If <b>TRUE</b>, the advance direction is right to left. By default, the advance direction
     is left to right.</param>
      <param name="geometrySink">A pointer to the interface that is called back to perform outline drawing operations.</param>
    </summary>
  </comment>
  <comment id="ID2D1VertexBuffer::Unmap">
    <summary>
      <para>Unmaps the vertex buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1vertexbuffer-unmap" /></para>
    </summary>
  </comment>
  <comment id="IWICFormatConverter::Initialize">
    <summary>
      <para>Initializes the format converter.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicformatconverter-initialize" /></para>
      <param name="iSource">The input bitmap to convert</param>
      <param name="dstFormat">The destination pixel format GUID.</param>
      <param name="dither">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapdithertype">WICBitmapDitherType</a> used for conversion.</param>
      <param name="iPalette">The palette to use for conversion.</param>
      <param name="alphaThresholdPercent">The alpha threshold to use for conversion.</param>
      <param name="paletteTranslate">The palette translation type to use for conversion.</param>
    </summary>
  </comment>
  <comment id="D2D1_SWEEP_DIRECTION">
    <summary>
      <para>Defines the direction that an elliptical arc is drawn.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_sweep_direction" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SWEEP_DIRECTION::D2D1_SWEEP_DIRECTION_COUNTER_CLOCKWISE">
    <summary>Arcs are drawn in a counterclockwise (negative-angle) direction.</summary>
  </comment>
  <comment id="D2D1_SWEEP_DIRECTION::D2D1_SWEEP_DIRECTION_CLOCKWISE">
    <summary>Arcs are drawn in a clockwise (positive-angle) direction.</summary>
  </comment>
  <comment id="ID2D1DeviceContext::IsBufferPrecisionSupported">
    <summary>
      <para>Indicates whether the buffer precision is supported by the underlying Direct3D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-isbufferprecisionsupported" /></para>
      <param name="bufferPrecision">The buffer precision to check.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::CreateColorContext">
    <summary>
      <para>Creates a color context from a color space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createcolorcontext" /></para>
      <param name="space">The space  of color context to create.</param>
      <param name="profile">A buffer containing the ICC profile bytes used to initialize the color context when <i>space</i> is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/ne-d2d1_1-d2d1_color_space">D2D1_COLOR_SPACE_CUSTOM</a>.  For other types, the parameter is ignored and should be set to <b>NULL</b>.</param>
      <param name="profileSize">The size in bytes of <i>Profile</i>.</param>
      <param name="colorContext">When this method returns, contains the address of a pointer to a new color context object.</param>
    </summary>
  </comment>
  <comment id="ID2D1StrokeStyle::GetLineJoin">
    <summary>
      <para>Retrieves the type of joint used at the vertices of a shape's outline.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getlinejoin" /></para>
    </summary>
  </comment>
  <comment id="IDWriteLocalizedStrings::GetStringLength">
    <summary>
      <para>Gets the length in characters (not including the null terminator) of the string with the specified index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritelocalizedstrings-getstringlength" /></para>
      <param name="index">A zero-based index of the language/string pair.</param>
      <param name="length">The length in characters of the string, not including the null terminator, from the language/string pair.</param>
    </summary>
  </comment>
  <comment id="ID2D1Transform::MapInvalidRect">
    <summary>
      <para>Sets the input rectangles for this rendering pass into the transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transform-mapinvalidrect" /></para>
      <param name="inputIndex">The index of the input rectangle.</param>
      <param name="invalidInputRect">The invalid input rectangle.</param>
      <param name="invalidOutputRect">The output rectangle to which the input rectangle must be mapped.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace5">
    <summary>
      <para>Contains font face type, appropriate file references, and face identification data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontface5" /></para>
    </summary>
  </comment>
  <comment id="WICRawParameterSet">
    <summary>
      <para>Specifies the parameter set used by a raw codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicrawparameterset" /></para>
    </summary>
  </comment>
  <comment id="WICRawParameterSet::WICAsShotParameterSet">
    <summary>An as shot parameter set.</summary>
  </comment>
  <comment id="WICRawParameterSet::WICUserAdjustedParameterSet">
    <summary>A user adjusted parameter set.</summary>
  </comment>
  <comment id="WICRawParameterSet::WICAutoAdjustedParameterSet">
    <summary>A codec adjusted parameter set.</summary>
  </comment>
  <comment id="ID2D1GeometryGroup">
    <summary>
      <para>Represents a composite geometry, composed of other ID2D1Geometry objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1geometrygroup" /></para>
    </summary>
  </comment>
  <comment id="IDWriteGdiInterop">
    <summary>
      <para>Provides interoperability with GDI, such as methods to convert a font face to a LOGFONT structure, or to convert a GDI font description into a font face. It is also used to create bitmap render target objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritegdiinterop" /></para>
    </summary>
  </comment>
  <comment id="WICPersistOptions">
    <summary>
      <para>Specifies Windows Imaging Component (WIC) options that are used when initializing a component with a stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/ne-wincodecsdk-wicpersistoptions" /></para>
    </summary>
  </comment>
  <comment id="WICPersistOptions::WICPersistOptionDefault">
    <summary>The default persist options. The default is <b>WICPersistOptionLittleEndian</b>.</summary>
  </comment>
  <comment id="WICPersistOptions::WICPersistOptionLittleEndian">
    <summary>The data byte order is little endian.</summary>
  </comment>
  <comment id="WICPersistOptions::WICPersistOptionBigEndian">
    <summary>The data byte order is big endian.</summary>
  </comment>
  <comment id="WICPersistOptions::WICPersistOptionStrictFormat">
    <summary>The data format must strictly conform to the specification.

<div class="alert"><b>Warning</b>  This option is inconsistently implement and should not be relied on.</div>
<div> </div></summary>
  </comment>
  <comment id="WICPersistOptions::WICPersistOptionNoCacheStream">
    <summary>No cache for the metadata stream.

Certain operations, such as <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createmetadatawriterfromreader">IWICComponentFactory::CreateMetadataWriterFromReader</a> require that the reader have a stream. Therefore, these operations will be unavailable if the reader is initialized with <b>WICPersistOptionNoCacheStream</b>.</summary>
  </comment>
  <comment id="WICPersistOptions::WICPersistOptionPreferUTF8">
    <summary>Use UTF8 instead of the default UTF16.

<div class="alert"><b>Note</b>  This option is currently unused by WIC.</div>
<div> </div></summary>
  </comment>
  <comment id="WICPersistOptions::WICPersistOptionMask">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicpersistoptions">WICPersistOptions</a> mask.</summary>
  </comment>
  <comment id="IDWriteTextFormat::GetLocaleNameLength">
    <summary>
      <para>Gets the length of the locale name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getlocalenamelength" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::SetParagraphAlignment">
    <summary>
      <para>Sets the alignment option of a paragraph relative to the layout box's top and bottom edge.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-setparagraphalignment" /></para>
      <param name="paragraphAlignment">The paragraph alignment option being set for a paragraph; see <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_paragraph_alignment">DWRITE_PARAGRAPH_ALIGNMENT</a> for more information.</param>
    </summary>
  </comment>
  <comment id="IDWriteBitmapRenderTarget::GetCurrentTransform">
    <summary>
      <para>Gets the transform that maps abstract coordinates to DIPs. By default this is the identity transform. Note that this is unrelated to the world transform of the underlying device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritebitmaprendertarget-getcurrenttransform" /></para>
      <param name="transform">When this method returns, contains a transform matrix.</param>
    </summary>
  </comment>
  <comment id="ID2D1Brush::SetOpacity">
    <summary>
      <para>Sets the degree of opacity of this brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1brush-setopacity" /></para>
      <param name="opacity">A value between zero and 1 that indicates the opacity of the brush. This value is a constant multiplier that linearly scales the alpha value of all pixels filled by the brush. The opacity values are clamped in the range 0–1 before they are multipled together.</param>
    </summary>
  </comment>
  <comment id="ID2D1Brush::GetTransform">
    <summary>
      <para>Gets the transform applied to this brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1brush-gettransform" /></para>
      <param name="transform">The transform applied to this brush.</param>
    </summary>
  </comment>
  <comment id="ID2D1GradientStopCollection::GetGradientStopCount">
    <summary>
      <para>Retrieves the number of gradient stops in the collection.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1gradientstopcollection-getgradientstopcount" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Ink::SetSegments">
    <summary>
      <para>Updates the specified segments in this ink object with new control points.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1ink-setsegments" /></para>
      <param name="startSegment">The index of the first segment in this ink object to update.</param>
      <param name="segments">A pointer to the array of segment data to be used in the update.</param>
      <param name="segmentsCount">The number of segments in this ink object that will be updated with new data. Note that segmentsCount must be less than or equal to the number of segments in the ink object minus startSegment.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::SetMaxWidth">
    <summary>
      <para>Sets the layout maximum width.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-setmaxwidth" /></para>
      <param name="maxWidth">A value that indicates the maximum width of the layout box.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgAttribute::GetElement">
    <summary>
      <para>Returns the element on which this attribute is set. Returns null if the attribute is not set on any element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgattribute-getelement" /></para>
      <param name="element">When this method completes, this will contain a pointer to the element on which this attribute is set.</param>
    </summary>
  </comment>
  <comment id="D2D1_HUEROTATION_PROP">
    <summary>
      <para>Identifiers for properties of the Hue rotate effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_huerotation_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_HUEROTATION_PROP::D2D1_HUEROTATION_PROP_ANGLE">
    <summary>The angle to rotate the hue, in degrees.
          

The type is FLOAT.

The default is 0.0f.</summary>
  </comment>
  <comment id="ID2D1DeviceContext::CreateColorContextFromWicColorContext">
    <summary>
      <para>Creates a color context from an IWICColorContext. The D2D1ColorContext space of the resulting context varies, see Remarks for more info.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-createcolorcontextfromwiccolorcontext" /></para>
      <param name="wicColorContext">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> used to initialize the color context.</param>
      <param name="colorContext">When this method returns, contains the address of a pointer to a new color context.</param>
    </summary>
  </comment>
  <comment id="ID2D1RadialGradientBrush::GetGradientOriginOffset">
    <summary>
      <para>Retrieves the offset of the gradient origin relative to the gradient ellipse's center.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-getgradientoriginoffset" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFont3::GetLocality">
    <summary>
      <para>Gets the current locality of the font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefont3-getlocality" /></para>
    </summary>
  </comment>
  <comment id="IWICFastMetadataEncoder">
    <summary>
      <para>Exposes methods used for in-place metadata editing. A fast metadata encoder enables you to add and remove metadata to an image without having to fully re-encode the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicfastmetadataencoder" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat1::SetVerticalGlyphOrientation">
    <summary>
      <para>Sets the orientation of a text format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextformat1-setverticalglyphorientation" /></para>
      <param name="glyphOrientation">The orientation to apply to the text format.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontSetBuilder2">
    <summary>
      <para>Contains methods for building a font set.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontsetbuilder2" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ComputeInfo::SetResourceTexture">
    <summary>
      <para>Sets the resource texture corresponding to the given shader texture index to the given texture resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1computeinfo-setresourcetexture" /></para>
      <param name="textureIndex">The index to set the resource texture on.</param>
      <param name="resourceTexture">The resource texture object to set on the shader texture index.</param>
    </summary>
  </comment>
  <comment id="D2D1_DPICOMPENSATION_PROP">
    <summary>
      <para>Identifiers for properties of the DPI compensation effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_dpicompensation_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DPICOMPENSATION_PROP::D2D1_DPICOMPENSATION_PROP_INTERPOLATION_MODE">
    <summary>The interpolation mode the effect uses to scale the image.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_dpicompensation_interpolation_mode">D2D1_DPICOMPENSATION_INTERPOLATION_MODE</a>.

The default value is D2D1_DPICOMPENSATION_INTERPOLATION_MODE_LINEAR.</summary>
  </comment>
  <comment id="D2D1_DPICOMPENSATION_PROP::D2D1_DPICOMPENSATION_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard. See Border modes for more info.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_mode">D2D1_BORDER_MODE</a>.

The default value is D2D1_BORDER_MODE_SOFT.</summary>
  </comment>
  <comment id="D2D1_DPICOMPENSATION_PROP::D2D1_DPICOMPENSATION_PROP_INPUT_DPI">
    <summary>The DPI of the input image.
            

The type is FLOAT.

The default value is 96.0f.</summary>
  </comment>
  <comment id="IDWriteFontFace::GetType">
    <summary>
      <para>Obtains the file format type of a font face.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-gettype" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::BeginDraw">
    <summary>
      <para>Initiates drawing on this render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-begindraw" /></para>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::GetTint">
    <summary>
      <para>Gets the tint value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-gettint" /></para>
      <param name="tint">A pointer that receives the tint value of the raw image. The default value is the "as-shot" setting if it exists or 0.0. The value range for sharpness is -1.0 through +1.0. The -1.0 lower limit represents a full green bias to the image, while the 1.0 upper limit represents a full magenta bias.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataReader::GetValue">
    <summary>
      <para>Gets the metadata item value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareader-getvalue" /></para>
      <param name="pvarSchema">Pointer to the metadata item's schema property.</param>
      <param name="pvarId">Pointer to the metadata item's id.</param>
      <param name="pvarValue">Pointer that receives the metadata value.</param>
    </summary>
  </comment>
  <comment id="D2D1_EXPOSURE_PROP">
    <summary>
      <para>Identifiers for properties of the Exposure effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_exposure_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_EXPOSURE_PROP::D2D1_EXPOSURE_PROP_EXPOSURE_VALUE">
    <summary>The D2D1_EXPOSURE_PROP_EXPOSURE_VALUE property is a float value that specifies how much to increase or decrease the exposure of the image. The allowed range is -2.0 to 2.0. The default value is 0.0 (no change).</summary>
  </comment>
  <comment id="ID2D1DrawInfo">
    <summary>
      <para>This interface is used to describe a GPU rendering pass on a vertex or pixel shader. It is passed to ID2D1DrawTransform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1drawinfo" /></para>
    </summary>
  </comment>
  <comment id="WICProgressOperation">
    <summary>
      <para>Specifies the progress operations to receive notifications for.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicprogressoperation" /></para>
    </summary>
  </comment>
  <comment id="WICProgressOperation::WICProgressOperationCopyPixels">
    <summary>Receive copy pixel operation.</summary>
  </comment>
  <comment id="WICProgressOperation::WICProgressOperationWritePixels">
    <summary>Receive write pixel operation.</summary>
  </comment>
  <comment id="WICProgressOperation::WICProgressOperationAll">
    <summary>Receive all progress operations available.</summary>
  </comment>
  <comment id="IWICJpegFrameEncode::GetAcHuffmanTable">
    <summary>
      <para>Retrieves a copy of the AC Huffman table for the specified scan and table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframeencode-getachuffmantable" /></para>
      <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
      <param name="tableIndex">The index of the AC Huffman table to retrieve.</param>
      <param name="acHuffmanTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFaceReference::GetFileTime">
    <summary>
      <para>Get the last modified date.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfacereference-getfiletime" /></para>
      <param name="lastWriteTime">Returns the last modified date. The time may be zero if the font file loader does not expose file time.</param>
    </summary>
  </comment>
  <comment id="ID2D1InkStyle::SetNibShape">
    <summary>
      <para>Sets the pre-transform nib shape for this style.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1inkstyle-setnibshape" /></para>
      <param name="nibShape">The pre-transform nib shape to use in this style.</param>
    </summary>
  </comment>
  <comment id="ID2D1Bitmap::CopyFromMemory">
    <summary>
      <para>Copies the specified region from memory into the current bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmap-copyfrommemory" /></para>
      <param name="dstRect">In the current bitmap, the rectangle to which the region specified by <i>srcRect</i> is copied.</param>
      <param name="srcData">The data to copy.</param>
      <param name="pitch">The stride, or pitch, of the source bitmap stored in <i>srcData</i>. The stride is the byte count of a scanline (one row of pixels in memory). The stride can be computed from the following formula: pixel width * bytes per pixel + memory padding.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalysisSource::GetTextBeforePosition">
    <summary>
      <para>Gets a block of text immediately preceding the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalysissource-gettextbeforeposition" /></para>
      <param name="textPosition">The position immediately after the last position of the block of text to obtain.</param>
      <param name="textString">When this method returns, contains an address of a pointer to the block of text, as an array of characters from the specified range.  The text range will be from <i>textPosition</i> to the front of the block.</param>
      <param name="textLength">Number of UTF16 units of the retrieved block.
         The length returned is from the specified position to the front of
         the block.</param>
    </summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_PROP">
    <summary>
      <para>Identifiers for properties of the Point-specular lighting effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_pointspecular_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_PROP::D2D1_POINTSPECULAR_PROP_LIGHT_POSITION">
    <summary>The light position of the point light source. The property is a D2D1_VECTOR_3F defined as (x, y, z). The units are in device-independent pixels (DIPs) and the values are unitless and unbounded.
            

The type is D2D1_VECTOR_3F.

The default value is {0.0f, 0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_PROP::D2D1_POINTSPECULAR_PROP_SPECULAR_EXPONENT">
    <summary>The exponent for the specular term in the Phong lighting equation. A larger value corresponds to a more reflective surface. This value is unitless and must be between 1.0 and 128.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_PROP::D2D1_POINTSPECULAR_PROP_SPECULAR_CONSTANT">
    <summary>The ratio of specular reflection to the incoming light. The value is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_PROP::D2D1_POINTSPECULAR_PROP_SURFACE_SCALE">
    <summary>The scale factor in the Z direction for generating a height map. The value is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_PROP::D2D1_POINTSPECULAR_PROP_COLOR">
    <summary>The color of the incoming light. This property is exposed as a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a> – (R, G, B) and used to compute LR, LG, LB.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_3f">D2D1_VECTOR_3F</a>.

The default value is {1.0f, 1.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_PROP::D2D1_POINTSPECULAR_PROP_KERNEL_UNIT_LENGTH">
    <summary>The size of an element in the Sobel kernel used to generate the surface normal in the X and Y directions. This property maps to the dx and dy values in the Sobel gradient. 
            This property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>(Kernel Unit Length X, Kernel Unit Length Y) and is defined in (DIPs/Kernel Unit). 
            The effect uses bilinear interpolation to scale the bitmap to match size of kernel elements.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is {1.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_POINTSPECULAR_PROP::D2D1_POINTSPECULAR_PROP_SCALE_MODE">
    <summary>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_pointspecular_scale_mode">D2D1_POINTSPECULAR_SCALE_MODE</a>.

The default value is D2D1_POINTSPECULAR_SCALE_MODE_LINEAR.</summary>
  </comment>
  <comment id="IWICBitmapLock::GetStride">
    <summary>
      <para>Provides access to the stride value for the memory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmaplock-getstride" /></para>
      <param name="pcbStride" />
    </summary>
  </comment>
  <comment id="D2D1_GRADIENT_STOP">
    <summary>
      <para>Contains the position and color of a gradient stop.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_gradient_stop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_GRADIENT_STOP::position">
    <summary>A value that indicates the relative position of the gradient stop in the brush. This value must be in the [0.0f, 1.0f] range if the gradient stop is to be seen explicitly.</summary>
  </comment>
  <comment id="D2D1_GRADIENT_STOP::color">
    <summary>The color of the gradient stop.</summary>
  </comment>
  <comment id="ID2D1Factory3">
    <summary>
      <para>Creates Direct2D resources. This interface also enables the creation of ID2D1Device2 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1factory3" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgAttribute::Clone">
    <summary>
      <para>Creates a clone of this attribute value. On creation, the cloned attribute is not set on any element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgattribute-clone" /></para>
      <param name="attribute">Specifies the attribute value to clone.</param>
    </summary>
  </comment>
  <comment id="IWICPalette::InitializeCustom">
    <summary>
      <para>Initializes a palette to the custom color entries provided.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-initializecustom" /></para>
      <param name="colors">Pointer to the color array.</param>
      <param name="cCount">The number of colors in <i>pColors</i>.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory::CreateTypography">
    <summary>
      <para>Creates a typography object for use in a text layout.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-createtypography" /></para>
      <param name="typography">When this method returns, contains the address of  a pointer to a newly created typography object, or <b>NULL</b> in case of failure.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapCodecInfo::GetDeviceManufacturer">
    <summary>
      <para>Retrieves the name of the device manufacture associated with the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-getdevicemanufacturer" /></para>
      <param name="cchDeviceManufacturer">The size of the device manufacture's name. Use <c>0</c> on first call to determine needed buffer size.</param>
      <param name="wzDeviceManufacturer">Receives the device manufacture's name. Use <c>NULL</c> on first call to determine needed buffer size.</param>
      <param name="pcchActual">The actual buffer size needed to retrieve the device manufacture's name.</param>
    </summary>
  </comment>
  <comment id="ID2D1BitmapBrush::SetBitmap">
    <summary>
      <para>Specifies the bitmap source that this brush uses to paint.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-setbitmap" /></para>
      <param name="bitmap">The bitmap source used by the brush.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::SetNoiseReduction">
    <summary>
      <para>Sets the noise reduction value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setnoisereduction" /></para>
      <param name="noiseReduction">The noise reduction value of the raw image.  The default value is the "as-shot" setting if it exists or 0.0. The value range for noise reduction is 0.0 through 1.0. The 0.0 lower limit represents no noise reduction applied to the image, while the 1.0 upper limit represents highest noise reduction amount that can be applied.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext2::DrawGradientMesh">
    <summary>
      <para>Renders a given gradient mesh to the target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext2-drawgradientmesh" /></para>
      <param name="gradientMesh">The gradient mesh to be rendered.</param>
    </summary>
  </comment>
  <comment id="IDWriteFont::GetSimulations">
    <summary>
      <para>Gets a value that indicates what simulations are applied to the specified font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefont-getsimulations" /></para>
    </summary>
  </comment>
  <comment id="IDWriteLocalizedStrings::GetLocaleNameLength">
    <summary>
      <para>Gets the length in characters (not including the null terminator) of the locale name with the specified index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritelocalizedstrings-getlocalenamelength" /></para>
      <param name="index">Zero-based index of the locale name to be retrieved.</param>
      <param name="length">When this method returns, contains the length in characters of the locale name, not including the null terminator.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext5::CreateSvgDocument">
    <summary>
      <para>Creates an SVG document from a stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext5-createsvgdocument" /></para>
      <param name="inputXmlStream">An input stream containing the SVG XML document. If null, an empty document is created.</param>
      <param name="viewportSize">Size of the initial viewport of the document.</param>
      <param name="svgDocument">When this method returns, contains a pointer to the created SVG document.</param>
    </summary>
  </comment>
  <comment id="D2D1_FIGURE_END">
    <summary>
      <para>Indicates whether a specific ID2D1SimplifiedGeometrySink figure is open or closed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_figure_end" /></para>
    </summary>
  </comment>
  <comment id="D2D1_FIGURE_END::D2D1_FIGURE_END_OPEN">
    <summary>The figure is open.</summary>
  </comment>
  <comment id="D2D1_FIGURE_END::D2D1_FIGURE_END_CLOSED">
    <summary>The figure is closed.</summary>
  </comment>
  <comment id="IDWriteFactory::GetSystemFontCollection">
    <summary>
      <para>Gets an object which represents the set of installed fonts.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-getsystemfontcollection" /></para>
      <param name="fontCollection">When this method returns, contains the address of a pointer to the system font collection object, or <b>NULL</b> in case of failure.</param>
      <param name="checkForUpdates">If this parameter is nonzero, the function performs an immediate check for changes to the set of
    installed fonts. If this parameter is <b>FALSE</b>, the function will still detect changes if the font cache service is running, but
     there may be some latency. For example, an application might specify <b>TRUE</b> if it has itself just installed a font and wants to 
     be sure the font collection contains that font.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapFlipRotator::Initialize">
    <summary>
      <para>Initializes the bitmap flip rotator with the provided parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapfliprotator-initialize" /></para>
      <param name="iSource">The input bitmap source.</param>
      <param name="options">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmaptransformoptions">WICBitmapTransformOptions</a> to flip or rotate the image.</param>
    </summary>
  </comment>
  <comment id="D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES">
    <summary>
      <para>Defines a vertex shader and the input element description to define the input layout.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_custom_vertex_buffer_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::shaderBufferWithInputSignature">
    <summary>A pointer to the buffer.</summary>
  </comment>
  <comment id="D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::shaderBufferSize">
    <summary>The size of the buffer.</summary>
  </comment>
  <comment id="D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::inputElements">
    <summary>An array of input assembler stage data types.</summary>
  </comment>
  <comment id="D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::elementCount">
    <summary>The number of input elements in the vertex shader.</summary>
  </comment>
  <comment id="D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::stride">
    <summary>The vertex stride.</summary>
  </comment>
  <comment id="IDWriteFontFileStream::ReadFileFragment">
    <summary>
      <para>Reads a fragment from a font file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfilestream-readfilefragment" /></para>
      <param name="fragmentStart">When this method returns, contains an address of a  pointer to the start of the font file fragment.  This parameter is passed uninitialized.</param>
      <param name="fileOffset">The offset of the fragment, in bytes, from the beginning of the font file.</param>
      <param name="fragmentSize">The size of the file fragment, in bytes.</param>
      <param name="fragmentContext">When this method returns, contains the address of a pointer to a pointer to the client-defined context to be passed to <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritefontfilestream-releasefilefragment">ReleaseFileFragment</a>.</param>
    </summary>
  </comment>
  <comment id="D2D1_BLEND_DESCRIPTION">
    <summary>
      <para>Defines a blend description to be used in a particular blend transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_blend_description" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BLEND_DESCRIPTION::sourceBlend">
    <summary>Specifies the first RGB data source and includes an optional preblend operation.</summary>
  </comment>
  <comment id="D2D1_BLEND_DESCRIPTION::destinationBlend">
    <summary>Specifies the second RGB data source and includes an optional preblend operation.</summary>
  </comment>
  <comment id="D2D1_BLEND_DESCRIPTION::blendOperation">
    <summary>Specifies how to combine the RGB data sources.</summary>
  </comment>
  <comment id="D2D1_BLEND_DESCRIPTION::sourceBlendAlpha">
    <summary>Specifies the first alpha data source and includes an optional preblend operation. Blend options that end in _COLOR are not allowed.</summary>
  </comment>
  <comment id="D2D1_BLEND_DESCRIPTION::destinationBlendAlpha">
    <summary>Specifies the second alpha data source and includes an optional preblend operation. Blend options that end in _COLOR are not allowed.</summary>
  </comment>
  <comment id="D2D1_BLEND_DESCRIPTION::blendOperationAlpha">
    <summary>Specifies how to combine the alpha data sources.</summary>
  </comment>
  <comment id="D2D1_BLEND_DESCRIPTION::blendFactor">
    <summary>Parameters to the blend operations. The blend must use <b>D2D1_BLEND_BLEND_FACTOR</b> for this to be used.</summary>
  </comment>
  <comment id="WICDdsParameters">
    <summary>
      <para>Specifies the DDS image dimension, DXGI_FORMAT and alpha mode of contained data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicddsparameters" /></para>
    </summary>
  </comment>
  <comment id="WICDdsParameters::Width">
    <summary>The width, in pixels, of the texture at the largest mip size (mip level 0).</summary>
  </comment>
  <comment id="WICDdsParameters::Height">
    <summary>The height, in pixels, of the texture at the largest mip size (mip level 0). When the DDS image contains a 1-dimensional texture, this value is equal to 1.</summary>
  </comment>
  <comment id="WICDdsParameters::Depth">
    <summary>The number of slices in the 3D texture. This is equivalent to the depth, in pixels, of the 3D texture at the largest mip size (mip level 0). When the DDS image contains a 1- or 2-dimensional texture, this value is equal to 1.</summary>
  </comment>
  <comment id="WICDdsParameters::MipLevels">
    <summary>The number of mip levels contained in the DDS image.</summary>
  </comment>
  <comment id="WICDdsParameters::ArraySize">
    <summary>The number of textures in the array in the DDS image.</summary>
  </comment>
  <comment id="WICDdsParameters::DxgiFormat">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> of the DDS pixel data.</summary>
  </comment>
  <comment id="WICDdsParameters::Dimension">
    <summary>Specifies the dimension type of the data contained in DDS image (1D, 2D, 3D or cube texture).</summary>
  </comment>
  <comment id="WICDdsParameters::AlphaMode">
    <summary>Specifies the alpha behavior of the DDS image.</summary>
  </comment>
  <comment id="IDWriteTextLayout::SetLocaleName">
    <summary>
      <para>Sets the locale name for text within a specified text range.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-setlocalename" /></para>
      <param name="localeName">A null-terminated locale name string.</param>
      <param name="textRange">Text range to which this change applies.</param>
    </summary>
  </comment>
  <comment id="IDWriteLocalFontFileLoader">
    <summary>
      <para>A built-in implementation of the IDWriteFontFileLoader interface, that operates on local font files and exposes local font file information from the font file reference key.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritelocalfontfileloader" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::DetermineMinWidth">
    <summary>
      <para>Determines the minimum possible width the layout can be set to without emergency breaking between the characters of whole words occurring.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-determineminwidth" /></para>
      <param name="minWidth">Minimum width.</param>
    </summary>
  </comment>
  <comment id="IWICFormatConverter::CanConvert">
    <summary>
      <para>Determines if the source pixel format can be converted to the destination pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicformatconverter-canconvert" /></para>
      <param name="srcPixelFormat">The source pixel format.</param>
      <param name="dstPixelFormat">The destionation pixel format.</param>
      <param name="pfCanConvert">A pointer that receives a value indicating whether the source pixel format can be converted to the destination pixel format.</param>
    </summary>
  </comment>
  <comment id="ID2D1GdiMetafileSink::ProcessRecord">
    <summary>
      <para>This method is called once for each record stored in a metafile.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gdimetafilesink-processrecord" /></para>
      <param name="recordType">The type of the record.</param>
      <param name="recordData">The data for the record.</param>
      <param name="recordDataSize">The byte size of the record data.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::SetTextRenderingParams">
    <summary>
      <para>Specifies text rendering options to be applied to all subsequent text and glyph drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-settextrenderingparams" /></para>
      <param name="textRenderingParams">The text rendering options to be applied to all subsequent text and glyph drawing operations; <b>NULL</b> to clear current text rendering options.</param>
    </summary>
  </comment>
  <comment id="D2D1_FILL_MODE">
    <summary>
      <para>Specifies how the intersecting areas of geometries or figures are combined to form the area of the composite geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_fill_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_FILL_MODE::D2D1_FILL_MODE_ALTERNATE">
    <summary>Determines whether a point is in the fill region by drawing a ray from that point to infinity in any direction, and then counting the number of path segments within the given shape that the ray crosses. If this number is odd, the point is in the fill region; if even, the point is outside the fill region.</summary>
  </comment>
  <comment id="D2D1_FILL_MODE::D2D1_FILL_MODE_WINDING">
    <summary>Determines whether a point is in the fill region of the path by drawing a ray from that point to infinity in any direction, and then examining the places where a segment of the shape crosses the ray. Starting with a count of zero, add one each time a segment crosses the ray from left to right and subtract one each time a path segment crosses the ray from right to left,  as long as left and right are seen from the perspective of the ray. After counting the crossings, if the result is zero, then the point is outside the path. Otherwise, it is inside the path.</summary>
  </comment>
  <comment id="IDWriteTextLayout::SetInlineObject">
    <summary>
      <para>Sets the inline object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-setinlineobject" /></para>
      <param name="inlineObject">An application-defined inline object.</param>
      <param name="textRange">Text range to which this change applies.</param>
    </summary>
  </comment>
  <comment id="ID2D1Effect::GetInput">
    <summary>
      <para>Gets the given input image by index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1effect-getinput" /></para>
      <param name="index">The index of the image to retrieve.</param>
      <param name="input">When this method returns, contains the address of a pointer to the image that is identified by <i>Index</i>.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::GetSharpness">
    <summary>
      <para>Gets the sharpness value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getsharpness" /></para>
      <param name="sharpness">A pointer that receives the sharpness value of the raw image. The default value is the "as-shot" setting. The value range for sharpness is 0.0 through 1.0. The 0.0 lower limit represents no sharpening applied to the image, while the 1.0 upper limit represents the highest amount of sharpness that can be applied.</param>
    </summary>
  </comment>
  <comment id="IWICComponentFactory::CreateMetadataWriterFromReader">
    <summary>
      <para>Creates an IWICMetadataWriter from the given IWICMetadataReader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createmetadatawriterfromreader" /></para>
      <param name="iReader">Pointer to the metadata reader to base the metadata writer on.</param>
      <param name="pguidVendor">Pointer to the GUID of the desired metadata reader vendor.</param>
      <param name="iWriter">A pointer that receives a pointer to the new metadata writer.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapCodecInfo::GetMimeTypes">
    <summary>
      <para>Retrieves a comma delimited sequence of mime types associated with the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-getmimetypes" /></para>
      <param name="cchMimeTypes">The size of the mime types buffer.  Use <c>0</c> on first call to determine needed buffer size.</param>
      <param name="wzMimeTypes">Receives the mime types associated with the codec. Use <c>NULL</c> on first call to determine needed buffer size.</param>
      <param name="pcchActual">The actual buffer size needed to retrieve all mime types associated with the codec.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink3">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1CommandSink2 interface. It also enables access to sprite batch rendering.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1commandsink3" /></para>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::CreateOffsetTransform">
    <summary>
      <para>Creates and returns an offset transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createoffsettransform" /></para>
      <param name="offset">The offset amount.</param>
      <param name="transform">When this method returns, contains the address of a pointer to an offset transform object.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory::CreateTextLayout">
    <summary>
      <para>Takes a string, text format, and associated constraints, and produces an object that represents the fully analyzed and formatted result.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-createtextlayout" /></para>
      <param name="string">An array of characters that contains the string to create a new <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritetextlayout">IDWriteTextLayout</a> object from. This array must be of length <i>stringLength</i> and can contain embedded <b>NULL</b> characters.</param>
      <param name="stringLength">The number of characters in  the string.</param>
      <param name="textFormat">A pointer to an object that indicates the format to apply to the string.</param>
      <param name="maxWidth">The width of the layout box.</param>
      <param name="maxHeight">The height of the layout box.</param>
      <param name="textLayout">When this method returns, contains an address of a pointer to the resultant text layout object.</param>
    </summary>
  </comment>
  <comment id="ID2D1GdiMetafile::Stream">
    <summary>
      <para>This method streams the contents of the command to the given metafile sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gdimetafile-stream" /></para>
      <param name="sink">The sink into which Direct2D  will call back.</param>
    </summary>
  </comment>
  <comment id="ID2D1Properties::GetPropertyIndex">
    <summary>
      <para>Gets the index corresponding to the given property name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1properties-getpropertyindex" /></para>
      <param name="name">The name of the property to retrieve.</param>
    </summary>
  </comment>
  <comment id="D2D1_SVG_DISPLAY">
    <summary>
      <para>Specifies a value for the SVG display property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_display" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_DISPLAY::D2D1_SVG_DISPLAY_INLINE">
    <summary>The element uses the default display behavior.</summary>
  </comment>
  <comment id="D2D1_SVG_DISPLAY::D2D1_SVG_DISPLAY_NONE">
    <summary>The element and all children are not rendered directly.</summary>
  </comment>
  <comment id="IWICPlanarFormatConverter">
    <summary>
      <para>Allows a format converter to be initialized with a planar source.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicplanarformatconverter" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFont::GetWeight">
    <summary>
      <para>Gets the weight, or stroke thickness, of the specified font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefont-getweight" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SpriteBatch::AddSprites">
    <summary>
      <para>Adds the given sprites to the end of this sprite batch.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1spritebatch-addsprites" /></para>
      <param name="spriteCount">The number of sprites to be added. This determines how many strides into each given array Direct2D will read.</param>
      <param name="destinationRectangles">A pointer to an array containing the destination rectangles specifying where to draw the sprites on the destination device context.</param>
      <param name="sourceRectangles">A pointer to an array containing the source rectangles specifying the regions of the source bitmap to draw as sprites.
          Direct2D will use the entire source bitmap for sprites that are assigned a null value or the InfiniteRectU. 
          If this parameter is omitted entirely or set to a null value, then Direct2D will use the entire source bitmap for all the added sprites.</param>
      <param name="colors">A pointer to an array containing the colors to apply to each sprite. 
          The output color is the result of component-wise multiplication of the source bitmap color and the provided color. 
          The output color is not clamped.

          

Direct2D will not change the color of sprites that are assigned a null value. If this parameter is omitted entirely or set to a null value, 
          then Direct2D will not change the color of any of the added sprites.</param>
      <param name="transforms">A pointer to an array containing the transforms to apply to each sprite’s destination rectangle.
            

Direct2D will not transform the destination rectangle of any sprites that are assigned a null value. 
            If this parameter is omitted entirely or set to a null value, 
            then Direct2D will not transform the destination rectangle of any of the added sprites.</param>
      <param name="destinationRectanglesStride">Specifies the distance, in bytes, between each rectangle in the destinationRectangles array. 
          If you provide a stride of 0, then the same destination rectangle will be used for each added sprite.</param>
      <param name="sourceRectanglesStride">Specifies the distance, in bytes, between each rectangle in the sourceRectangles array (if that array is given). 
          If you provide a stride of 0, then the same source rectangle will be used for each added sprite.</param>
      <param name="colorsStride">Specifies the distance, in bytes, between each color in the colors array (if that array is given). 
          If you provide a stride of 0, then the same color will be used for each added sprite.</param>
      <param name="transformsStride">Specifies the distance, in bytes, between each transform in the transforms array (if that array is given). 
          If you provide a stride of 0, then the same transform will be used for each added sprite.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapClipper">
    <summary>
      <para>Exposes methods that produce a clipped version of the input bitmap for a specified rectangular region of interest.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapclipper" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ColorContext1::GetColorContextType">
    <summary>
      <para>Retrieves the color context type.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1colorcontext1-getcolorcontexttype" /></para>
    </summary>
  </comment>
  <comment id="IWICMetadataWriter::RemoveValueByIndex">
    <summary>
      <para>Removes the metadata item at the specified index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatawriter-removevaluebyindex" /></para>
      <param name="nIndex">The index of the metadata item to remove.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::GetFlowDirection">
    <summary>
      <para>Gets the direction that text lines flow.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getflowdirection" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapSourceTransform::GetClosestSize">
    <summary>
      <para>Returns the closest dimensions the implementation can natively scale to given the desired dimensions.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsourcetransform-getclosestsize" /></para>
      <param name="puiWidth">The desired width. A pointer that receives the closest supported width.</param>
      <param name="puiHeight">The desired height. A pointer that receives the closest supported height.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataHandlerInfo::GetDeviceManufacturer">
    <summary>
      <para>Retrieves the device manufacturer of the metadata handler.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatahandlerinfo-getdevicemanufacturer" /></para>
      <param name="cchDeviceManufacturer">The size of the <i>wzDeviceManufacturer</i> buffer.</param>
      <param name="wzDeviceManufacturer">Pointer to the buffer that receives the name of the device manufacturer.</param>
      <param name="pcchActual">The actual string buffer length needed to obtain the entire name of the device manufacturer.</param>
    </summary>
  </comment>
  <comment id="IDWriteFont3">
    <summary>
      <para>Represents a font in a font collection.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefont3" /></para>
    </summary>
  </comment>
  <comment id="IWICFormatConverterInfo::CreateInstance">
    <summary>
      <para>Creates a new IWICFormatConverter instance.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicformatconverterinfo-createinstance" /></para>
      <param name="iConverter">A pointer that receives a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicformatconverter">IWICFormatConverter</a> instance.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontCollection::GetFontFamily">
    <summary>
      <para>Creates a font family object given a zero-based font family index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontcollection-getfontfamily" /></para>
      <param name="index">Zero-based index of the font family.</param>
      <param name="fontFamily">When this method returns, contains the address of   a pointer to the newly created font family object.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFaceReference::EnqueueCharacterDownloadRequest">
    <summary>
      <para>Adds a request to the font download queue (IDWriteFontDownloadQueue).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfacereference-enqueuecharacterdownloadrequest" /></para>
      <param name="characters">Array of characters to download.</param>
      <param name="characterCount">The number of elements in the character array.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::SetDpi">
    <summary>
      <para>Sets the dots per inch (DPI) of the render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-setdpi" /></para>
      <param name="dpiX">A value greater than or equal to zero that specifies the horizontal DPI of the render target.</param>
      <param name="dpiY">A value greater than or equal to zero that specifies the vertical DPI of the render target.</param>
    </summary>
  </comment>
  <comment id="ID2D1TransformGraph::SetPassthroughGraph">
    <summary>
      <para>Uses the specified input as the effect output.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-setpassthroughgraph" /></para>
      <param name="effectInputIndex">The index of the input to the effect.</param>
    </summary>
  </comment>
  <comment id="D2D1_ATLAS_PROP">
    <summary>
      <para>Identifiers for properties of the Atlas effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_atlas_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_ATLAS_PROP::D2D1_ATLAS_PROP_INPUT_RECT">
    <summary>The portion of the image passed to the next effect.
            Type is D2D1_VECTOR_4F.
            Default value is (-FLT_MAX, -FLT_MAX, FLT_MAX, FLT_MAX).</summary>
  </comment>
  <comment id="D2D1_ATLAS_PROP::D2D1_ATLAS_PROP_INPUT_PADDING_RECT">
    <summary>The maximum size sampled for the output rectangle.
            Type is D2D1_VECTOR_4F.
            Default value is (-FLT_MAX, -FLT_MAX, FLT_MAX, FLT_MAX).</summary>
  </comment>
  <comment id="ID2D1SvgElement::GetTagNameLength">
    <summary>
      <para>Gets the string length of the tag name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-gettagnamelength" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::FillGeometry">
    <summary>
      <para>Paints the interior of the specified geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-fillgeometry" /></para>
      <param name="geometry">The geometry to paint.</param>
      <param name="brush">The brush used to paint the geometry's interior.</param>
      <param name="opacityBrush">The opacity mask to apply to the geometry, or <b>NULL</b> for no opacity mask. If an opacity mask (the <i>opacityBrush</i> parameter) is specified, <i>brush</i> must be an <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1bitmapbrush">ID2D1BitmapBrush</a> that has   its x- and y-extend modes set to <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_extend_mode">D2D1_EXTEND_MODE_CLAMP</a>. For more information, see the Remarks section.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapFrameEncode::SetPixelFormat">
    <summary>
      <para>Requests that the encoder use the specified pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-setpixelformat" /></para>
      <param name="pixelFormat">On input, the requested pixel format GUID. On output, the closest pixel format GUID supported by the encoder; this may be different than the requested format. For a list of pixel format GUIDs, see <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-native-pixel-formats">Native Pixel Formats</a>.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::CreateResourceTexture">
    <summary>
      <para>Creates or finds the given resource texture, depending on whether a resource id is specified.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createresourcetexture" /></para>
      <param name="resourceId">An optional pointer to the unique id that identifies the lookup table.</param>
      <param name="resourceTextureProperties">The properties used to create the resource texture.</param>
      <param name="data">The optional data to be loaded into the resource texture.</param>
      <param name="strides">An optional pointer to the stride to advance through the resource texture, according to dimension.</param>
      <param name="dataSize">The size, in bytes, of the data.</param>
      <param name="resourceTexture">The returned texture that can be used as a resource in a Direct2D effect.</param>
    </summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP">
    <summary>
      <para>Identifiers for properties of the Gamma transfer effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_gammatransfer_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_RED_AMPLITUDE">
    <summary>The amplitude of the gamma transfer function for the Red channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_RED_EXPONENT">
    <summary>The exponent of the gamma transfer function for the Red channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_RED_OFFSET">
    <summary>The offset of the gamma transfer function for the Red channel.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_RED_DISABLE">
    <summary>If you set this to TRUE it does not apply the transfer function to the Red channel. An identity transfer function is used.
            If you set this to FALSE it applies the gamma transfer function to the Red channel.
            

The type is BOOL.

The default value is FALSE.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_GREEN_AMPLITUDE">
    <summary>The amplitude of the gamma transfer function for the Green channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_GREEN_EXPONENT">
    <summary>The exponent of the gamma transfer function for the Green channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_GREEN_OFFSET">
    <summary>The offset of the gamma transfer function for the Green channel.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_GREEN_DISABLE">
    <summary>If you set this to TRUE it does not apply the transfer function to the Green channel. An identity transfer function is used.
            If you set this to FALSE it applies the gamma transfer function to the Green channel.
            

The type is BOOL.

The default value is FALSE.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_BLUE_AMPLITUDE">
    <summary>The amplitude of the gamma transfer function for the Blue channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_BLUE_EXPONENT">
    <summary>The exponent of the gamma transfer function for the Blue channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_BLUE_OFFSET">
    <summary>The offset of the gamma transfer function for the Blue channel.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_BLUE_DISABLE">
    <summary>If you set this to TRUE it does not apply the transfer function to the Blue channel. An identity transfer function is used.
            If you set this to FALSE it applies the gamma transfer function to the Blue channel.
            

The type is BOOL.

The default value is FALSE.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_ALPHA_AMPLITUDE">
    <summary>The amplitude of the gamma transfer function for the Alpha channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_ALPHA_EXPONENT">
    <summary>The exponent of the gamma transfer function for the Alpha channel.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_ALPHA_OFFSET">
    <summary>The offset of the gamma transfer function for the Alpha channel.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_ALPHA_DISABLE">
    <summary>If you set this to TRUE it does not apply the transfer function to the Alpha channel. An identity transfer function is used.
            If you set this to FALSE it applies the gamma transfer function to the Alpha channel.
            

The type is BOOL.

The default value is FALSE.</summary>
  </comment>
  <comment id="D2D1_GAMMATRANSFER_PROP::D2D1_GAMMATRANSFER_PROP_CLAMP_OUTPUT">
    <summary>Whether the effect clamps color values to between 0 and 1 before the effect passes the values to the next effect in the graph.
            The effect clamps the values before it premultiplies the alpha.
            

If you set this to TRUE the effect will clamp the values. If you set this to FALSE, the effect will not clamp the color values,
              but other effects and the output surface may clamp the values if they are not of high enough precision.
            

The type is BOOL.

The default value is FALSE.</summary>
  </comment>
  <comment id="ID2D1GradientStopCollection1::GetPostInterpolationSpace">
    <summary>
      <para>Gets the color space after interpolation has occurred.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gradientstopcollection1-getpostinterpolationspace" /></para>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw">
    <summary>
      <para>Exposes methods that provide access to the capabilites of a raw codec format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicdevelopraw" /></para>
    </summary>
  </comment>
  <comment id="WICRawRotationCapabilities">
    <summary>
      <para>Specifies the rotation capabilities of the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicrawrotationcapabilities" /></para>
    </summary>
  </comment>
  <comment id="WICRawRotationCapabilities::WICRawRotationCapabilityNotSupported">
    <summary>Rotation is not supported.</summary>
  </comment>
  <comment id="WICRawRotationCapabilities::WICRawRotationCapabilityGetSupported">
    <summary>Set operations for rotation is not supported.</summary>
  </comment>
  <comment id="WICRawRotationCapabilities::WICRawRotationCapabilityNinetyDegreesSupported">
    <summary>90 degree rotations are supported.</summary>
  </comment>
  <comment id="WICRawRotationCapabilities::WICRawRotationCapabilityFullySupported">
    <summary>All rotation angles are supported.</summary>
  </comment>
  <comment id="ID2D1SvgGlyphStyle::SetStroke">
    <summary>
      <para>Provides values to an SVG glyph for stroke properties. The brush with opacity set to 1 is used as the 'context-stroke'. The opacity of the brush is used as the 'context-stroke-opacity' value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1svgglyphstyle-setstroke" /></para>
      <param name="brush">Describes how the stroke is painted. A null brush will cause the context-stroke value to be none.</param>
      <param name="strokeWidth">Specifies the 'context-value' for the 'stroke-width' property.</param>
      <param name="dashes">Specifies the 'context-value' for the 'stroke-dasharray'
          property. A null value will cause the stroke-dasharray to be set to 'none'.</param>
      <param name="dashesCount">The the number of dashes in the dash array.</param>
      <param name="dashOffset">Specifies the 'context-value' for the 'stroke-dashoffset' property.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::GetRotation">
    <summary>
      <para>Gets the current rotation angle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getrotation" /></para>
      <param name="rotation">A pointer that receives the current rotation angle.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontList::GetFontCollection">
    <summary>
      <para>Gets the font collection that contains the fonts in the font list.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontlist-getfontcollection" /></para>
      <param name="fontCollection">When this method returns, contains the address of a pointer to the current <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefontcollection">IDWriteFontCollection</a> object.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontSetBuilder::CreateFontSet">
    <summary>
      <para>Creates a font set from all the font face references added so far with AddFontFaceReference.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontsetbuilder-createfontset" /></para>
      <param name="fontSet">Contains the newly created font set object, or nullptr in case of failure.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextRenderer1::DrawGlyphRun">
    <summary>
      <para>IDWriteTextLayout::Draw calls this function to instruct the client to render a run of glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextrenderer1-drawglyphrun" /></para>
      <param name="clientDrawingContext">The application-defined drawing context passed to 
     <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextlayout-draw">IDWriteTextLayout::Draw</a>.</param>
      <param name="baselineOriginX">The pixel location (X-coordinate) at the baseline origin of the glyph run.</param>
      <param name="baselineOriginY">The pixel location (Y-coordinate) at the baseline origin of the glyph run.</param>
      <param name="orientationAngle">Orientation of the glyph run.</param>
      <param name="measuringMode">The measuring method for glyphs in the run, used with the other properties to determine the rendering mode.</param>
      <param name="glyphRun">Pointer to the glyph run instance to render.</param>
      <param name="glyphRunDescription">A pointer to the glyph run description instance which contains properties of the characters 
     associated with this run.</param>
      <param name="clientDrawingEffect">Application-defined drawing effects for the glyphs to render. Usually this argument represents effects such as the foreground brush filling the interior of text.</param>
    </summary>
  </comment>
  <comment id="IDWriteTypography::GetFontFeature">
    <summary>
      <para>Gets the font feature at the specified index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetypography-getfontfeature" /></para>
      <param name="fontFeatureIndex">The zero-based index of the font feature to retrieve.</param>
      <param name="fontFeature">When this method returns, contains the font feature which is at the specified index.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateBitmapFromSource">
    <summary>
      <para>Creates a IWICBitmap from a IWICBitmapSource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsource" /></para>
      <param name="iBitmapSource">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> to create the bitmap from.</param>
      <param name="option">The cache options of the new bitmap.  This can be one of the values in the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapcreatecacheoption">WICBitmapCreateCacheOption</a> enumeration.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id="WICBitmapNoCache"></a><a id="wicbitmapnocache"></a><a id="WICBITMAPNOCACHE"></a><dl>
<dt><b>WICBitmapNoCache</b></dt>
</dl>
</td>
<td width="60%">
Do not create a system memory copy. Share the bitmap with the source.


</td>
</tr>
<tr>
<td width="40%"><a id="WICBitmapCacheOnDemand"></a><a id="wicbitmapcacheondemand"></a><a id="WICBITMAPCACHEONDEMAND"></a><dl>
<dt><b>WICBitmapCacheOnDemand</b></dt>
</dl>
</td>
<td width="60%">
Create a system memory copy when the bitmap is first used.


</td>
</tr>
<tr>
<td width="40%"><a id="WICBitmapCacheOnLoad"></a><a id="wicbitmapcacheonload"></a><a id="WICBITMAPCACHEONLOAD"></a><dl>
<dt><b>WICBitmapCacheOnLoad</b></dt>
</dl>
</td>
<td width="60%">
Create a system memory copy when this method is called.


</td>
</tr>
</table></param>
      <param name="iBitmap">A pointer that receives a pointer to the new bitmap.</param>
    </summary>
  </comment>
  <comment id="ID2D1Bitmap1">
    <summary>
      <para>Represents a bitmap that can be used as a surface for an ID2D1DeviceContext or mapped into system memory, and can contain additional color context information.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1bitmap1" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFallbackBuilder">
    <summary>
      <para>Allows you to create Unicode font fallback mappings and create a font fall back object from those mappings.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nn-dwrite_2-idwritefontfallbackbuilder" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::RestoreDrawingState">
    <summary>
      <para>Sets the render target's drawing state to that of the specified ID2D1DrawingStateBlock.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-restoredrawingstate" /></para>
      <param name="drawingStateBlock">The new drawing state of the render target.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory2::CreateGlyphRunAnalysis">
    <summary>
      <para>Creates a glyph run analysis object, which encapsulates information used to render a glyph run.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefactory2-createglyphrunanalysis" /></para>
      <param name="glyphRun">Structure specifying the properties of the glyph run.</param>
      <param name="transform">Optional transform applied to the glyphs and their positions. This transform is applied after the
          scaling specified by the emSize and pixelsPerDip.</param>
      <param name="renderingMode">Specifies the rendering mode, which must be one of the raster rendering modes (i.e., not default
          and not outline).</param>
      <param name="measuringMode">Specifies the method to measure glyphs.</param>
      <param name="gridFitMode">How to grid-fit glyph outlines. This must be non-default.</param>
      <param name="antialiasMode">Specifies the antialias mode.</param>
      <param name="baselineOriginX">Horizontal position of the baseline origin, in DIPs.</param>
      <param name="baselineOriginY">Vertical position of the baseline origin, in DIPs.</param>
      <param name="glyphRunAnalysis">Receives a pointer to the newly created object.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgDocument::GetRoot">
    <summary>
      <para>Gets the root element of the document.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-getroot" /></para>
      <param name="root">Outputs the root element of the document.</param>
    </summary>
  </comment>
  <comment id="ID2D1TransformedGeometry">
    <summary>
      <para>Represents a geometry that has been transformed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1transformedgeometry" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmap">
    <summary>
      <para>Defines methods that add the concept of writeability and static in-memory representations of bitmaps to IWICBitmapSource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmap" /></para>
    </summary>
  </comment>
  <comment id="D2D1_MORPHOLOGY_MODE">
    <summary>
      <para>The mode for the Morphology effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_morphology_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_MORPHOLOGY_MODE::D2D1_MORPHOLOGY_MODE_ERODE">
    <summary>The maximum value from each RGB channel in the kernel is used.</summary>
  </comment>
  <comment id="D2D1_MORPHOLOGY_MODE::D2D1_MORPHOLOGY_MODE_DILATE">
    <summary>The minimum value from each RGB channel in the kernel is used.</summary>
  </comment>
  <comment id="IDWriteTextLayout2::GetMetrics">
    <summary>
      <para>Retrieves overall metrics for the formatted string.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextlayout2-getmetrics" /></para>
      <param name="textMetrics">When this method returns, contains the measured distances of text and associated content after being formatted.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace3::GetWeight">
    <summary>
      <para>Gets the weight of this font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface3-getweight" /></para>
    </summary>
  </comment>
  <comment id="WICJpegYCrCbSubsamplingOption">
    <summary>
      <para>Specifies the JPEG YCrCB subsampling options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicjpegycrcbsubsamplingoption" /></para>
    </summary>
  </comment>
  <comment id="WICJpegYCrCbSubsamplingOption::WICJpegYCrCbSubsamplingDefault">
    <summary>The default subsampling option.</summary>
  </comment>
  <comment id="WICJpegYCrCbSubsamplingOption::WICJpegYCrCbSubsampling420">
    <summary>Subsampling option that uses both horizontal and vertical decimation.</summary>
  </comment>
  <comment id="WICJpegYCrCbSubsamplingOption::WICJpegYCrCbSubsampling422">
    <summary>Subsampling option that uses horizontal decimation  .</summary>
  </comment>
  <comment id="WICJpegYCrCbSubsamplingOption::WICJpegYCrCbSubsampling444">
    <summary>Subsampling option that uses no decimation.</summary>
  </comment>
  <comment id="WICJpegYCrCbSubsamplingOption::WICJpegYCrCbSubsampling440">
    <summary>Subsampling option that uses 2x vertical downsampling only. This option is only available in Windows 8.1 and later.</summary>
  </comment>
  <comment id="ID2D1Device2">
    <summary>
      <para>Represents a resource domain whose objects and device contexts can be used together. This interface performs all the same functions as the existing ID2D1Device1 interface. It also enables the creation of ID2D1DeviceContext2 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1device2" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgPointCollection">
    <summary>
      <para>Interface describing an SVG points value in a polyline or polygon element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nn-d2d1svg-id2d1svgpointcollection" /></para>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext5::CreateColorContextFromDxgiColorSpace">
    <summary>
      <para>Creates a color context from a DXGI color space type. It is only valid to use this with the Color Management Effect in 'Best' mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext5-createcolorcontextfromdxgicolorspace" /></para>
      <param name="colorSpace">The color space to create the color context from.</param>
      <param name="colorContext">The created color context.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout2::SetOpticalAlignment">
    <summary>
      <para>Set how the glyphs align to the edges the margin.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextlayout2-setopticalalignment" /></para>
      <param name="opticalAlignment">Optical alignment option.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetLocaleNameLength">
    <summary>
      <para>Gets the length of the locale name of the text at the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getlocalenamelength" /></para>
      <param name="currentPosition">The position of the text to inspect.</param>
      <param name="nameLength">Size of the character array, in character count, not including the terminated <b>NULL</b> character.</param>
      <param name="textRange">The range of text that has the same  formatting as the text at the position specified by <i>currentPosition</i>.  This means the run has the exact  formatting as the position specified, including but not limited to the locale name.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapCodecInfo::GetPixelFormats">
    <summary>
      <para>Retrieves the pixel formats the codec supports.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-getpixelformats" /></para>
      <param name="cFormats">The size of the <i>pguidPixelFormats</i> array. Use <c>0</c> on first call to determine the needed array size.</param>
      <param name="pguidPixelFormats">Receives the supported pixel formats. Use <c>NULL</c> on first call to determine needed array size.</param>
      <param name="pcActual">The array size needed to retrieve all supported pixel formats.</param>
    </summary>
  </comment>
  <comment id="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE">
    <summary>
      <para>The interpolation mode to be used with the 2D affine transform effect to scale the image. There are 6 scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_2daffinetransform_interpolation_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE::D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </comment>
  <comment id="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE::D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode uses more processing time than the nearest neighbor mode, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE::D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE::D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </comment>
  <comment id="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE::D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </comment>
  <comment id="D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE::D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </comment>
  <comment id="ID2D1SvgDocument::Deserialize">
    <summary>
      <para>Deserializes a subtree from the stream. The stream must have only one root element, but that root element need not be an 'svg' element. The output element is not inserted into this document tree.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-deserialize" /></para>
      <param name="inputXmlStream">An input stream containing the SVG XML subtree.</param>
      <param name="subtree">The root of the subtree.</param>
    </summary>
  </comment>
  <comment id="ID2D1Bitmap1::Unmap">
    <summary>
      <para>Unmaps the bitmap from memory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1bitmap1-unmap" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Bitmap::CopyFromBitmap">
    <summary>
      <para>Copies the specified region from the specified bitmap into the current bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmap-copyfrombitmap" /></para>
      <param name="destPoint">In the current bitmap, the upper-left corner of the area to which the region specified by <i>srcRect</i> is copied.</param>
      <param name="bitmap">The bitmap to copy from.</param>
      <param name="srcRect">The area of <i>bitmap</i> to copy.</param>
    </summary>
  </comment>
  <comment id="ID2D1StrokeStyle::GetDashesCount">
    <summary>
      <para>Retrieves the number of entries in the dashes array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getdashescount" /></para>
    </summary>
  </comment>
  <comment id="IWICMetadataQueryReader::GetEnumerator">
    <summary>
      <para>Gets an enumerator of all metadata items at the current relative location within the metadata hierarchy.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataqueryreader-getenumerator" /></para>
      <param name="iEnumString">A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/objidl/nn-objidl-ienumstring">IEnumString</a> interface for the enumerator that contains query strings that can be used in the current <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataqueryreader">IWICMetadataQueryReader</a>.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace::GetGdiCompatibleGlyphMetrics">
    <summary>
      <para>Obtains glyph metrics in font design units with the return values compatible with what GDI would produce.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-getgdicompatibleglyphmetrics" /></para>
      <param name="emSize">The ogical size of the font in DIP units.</param>
      <param name="pixelsPerDip">The number of physical pixels per DIP.</param>
      <param name="transform">An optional transform applied to the glyphs and their positions. This transform is applied after the
    scaling specified by the font size and <i>pixelsPerDip</i>.</param>
      <param name="useGdiNatural">When set to <b>FALSE</b>, the metrics are the same as the metrics of GDI aliased text.  When set to <b>TRUE</b>, the metrics are the same as the metrics of text measured by GDI using a font created with <b>CLEARTYPE_NATURAL_QUALITY</b>.</param>
      <param name="glyphIndices">An array of glyph indices for which to compute the metrics.</param>
      <param name="glyphCount">The number of elements in the <i>glyphIndices</i> array.</param>
      <param name="glyphMetrics">An array of <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ns-dwrite-dwrite_glyph_metrics">DWRITE_GLYPH_METRICS</a> structures filled by this function. The metrics are in font design units.</param>
      <param name="isSideways">A BOOL value that indicates whether the font is being used in a sideways run.  This can affect the glyph metrics if the font has oblique simulation because sideways oblique simulation differs from non-sideways oblique simulation.</param>
    </summary>
  </comment>
  <comment id="D2D1_PIXEL_OPTIONS">
    <summary>
      <para>Indicates how pixel shader sampling will be restricted.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_pixel_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_PIXEL_OPTIONS::D2D1_PIXEL_OPTIONS_NONE">
    <summary>The pixel shader is not restricted in its sampling.</summary>
  </comment>
  <comment id="D2D1_PIXEL_OPTIONS::D2D1_PIXEL_OPTIONS_TRIVIAL_SAMPLING">
    <summary>The pixel shader samples inputs only at the same scene coordinate as the output pixel and returns transparent black whenever the input pixels are also transparent black.</summary>
  </comment>
  <comment id="IWICProgressiveLevelControl">
    <summary>
      <para>Exposes methods for obtaining information about and controlling progressive decoding.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicprogressivelevelcontrol" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontList::GetFont">
    <summary>
      <para>Gets a font given its zero-based index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontlist-getfont" /></para>
      <param name="index">Zero-based index of the font in the font list.</param>
      <param name="font">When this method returns, contains the address of a pointer to the newly created <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefont">IDWriteFont</a> object.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device3">
    <summary>
      <para>Represents a resource domain whose objects and device contexts can be used together. This interface performs all the same functions as the ID2D1Device2 interface. It also enables the creation of ID2D1DeviceContext3 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1device3" /></para>
    </summary>
  </comment>
  <comment id="IDWriteInMemoryFontFileLoader::CreateInMemoryFontFileReference">
    <summary>
      <para>Creates a font file reference (IDWriteFontFile object) from an array of bytes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwriteinmemoryfontfileloader-createinmemoryfontfilereference" /></para>
      <param name="factory">Factory object used to create the font file reference.</param>
      <param name="fontData">Pointer to a memory block containing the font data.</param>
      <param name="fontDataSize">Size of the font data.</param>
      <param name="ownerObject">Optional object that owns the memory specified by the fontData parameter. If this parameter is not NULL, the method stores a
          pointer to the font data and adds a reference to the owner object. The fontData pointer must remain valid until the owner object is released. If
          this parameter is NULL, the method makes a copy of the font data.</param>
      <param name="fontFile">Receives a pointer to the newly-created font file reference.</param>
    </summary>
  </comment>
  <comment id="D2D1_BLEND_MODE">
    <summary>
      <para>The blend mode used for the Blend effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_blend_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_MULTIPLY">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a mutiply effect." src="./images/blend_mode_multiply_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_SCREEN">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a screen effect." src="./images/blend_mode_screen_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_DARKEN">
    <summary>Basic blend formula for alpha only.  

<img alt="mathematical formula for a darken effect." src="./images/blend_mode_darken_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_LIGHTEN">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a lighten effect." src="./images/blend_mode_lighten_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_DISSOLVE">
    <summary>Given:
            

<ul>
<li>A scene coordinate XY for the current pixel</li>
<li>A deterministic pseudo-random number generator rand(XY) based on seed coordinate XY, with unbiased distribution of values from [0, 1]</li>
</ul>
<img alt="Mathematical formula for a dissolve blend effect." src="./images/blend_mode_dissolve_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_COLOR_BURN">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) =  

<img alt="Mathematical formula for a coor burn effect." src="./images/blend_mode_colorburn_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_LINEAR_BURN">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) =  

<img alt="Mathematical formula for a linear burn effect." src="./images/blend_mode_linearburn_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_DARKER_COLOR">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formla for a darken color effect." src="./images/blend_mode_darkencolor_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_LIGHTER_COLOR">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a lighter color effect." src="./images/blend_mode_lightercolor_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_COLOR_DODGE">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) =  

<img alt="Mathematical formula for a color dodge effect." src="./images/blend_mode_colordodge_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_LINEAR_DODGE">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for a linear dodge effect." src="./images/blend_mode_lineardodge_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_OVERLAY">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for an overlay effect." src="./images/blend_mode_overlay_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_SOFT_LIGHT">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for a soft light effect." src="./images/blend_mode_softlight_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_HARD_LIGHT">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for a hard light effect." src="./images/blend_mode_hardlight_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_VIVID_LIGHT">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for a vivid light effect." src="./images/blend_mode_vividlight_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_LINEAR_LIGHT">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for a linear light effect." src="./images/blend_mode_linearlight_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_PIN_LIGHT">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for a pin light effect." src="./images/blend_mode_pinlight_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_HARD_MIX">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = 

<img alt="Mathematical formula for a hard mix effect." src="./images/blend_mode_hardmix_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_DIFFERENCE">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = abs(F<sub>RGB</sub> - B<sub>RGB</sub>)</summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_EXCLUSION">
    <summary>Basic blend formulas with <i>f</i>(F<sub>RGB</sub>, B<sub>RGB</sub>) = F<sub>RGB</sub> + B<sub>RGB</sub> – 2 * F<sub>RGB</sub> * B<sub>RGB</sub></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_HUE">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a hue blend effect." src="./images/blend_mode_hue_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_SATURATION">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a sturation blend effect." src="./images/blend_mode_saturation_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_COLOR">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a color blend effect." src="./images/blend_mode_color_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_LUMINOSITY">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a luminosity blend effect." src="./images/blend_mode_luminosity_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_SUBTRACT">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a subtract blend effect." src="./images/blend_mode_subtract_1.png"/></summary>
  </comment>
  <comment id="D2D1_BLEND_MODE::D2D1_BLEND_MODE_DIVISION">
    <summary>Basic blend formula for alpha only. 

<img alt="Mathematical formula for a division blend effect." src="./images/blend_mode_division_1.png"/></summary>
  </comment>
  <comment id="D2D1_HUETORGB_INPUT_COLOR_SPACE">
    <summary>
      <para>Values for the D2D1_HUETORGB_PROP_INPUT_COLOR_SPACE property of the Hue to RGB effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_huetorgb_input_color_space" /></para>
    </summary>
  </comment>
  <comment id="D2D1_HUETORGB_INPUT_COLOR_SPACE::D2D1_HUETORGB_INPUT_COLOR_SPACE_HUE_SATURATION_VALUE">
    <summary>The effect converts from Hue Saturation Value (HSV) to RGB.</summary>
  </comment>
  <comment id="D2D1_HUETORGB_INPUT_COLOR_SPACE::D2D1_HUETORGB_INPUT_COLOR_SPACE_HUE_SATURATION_LIGHTNESS">
    <summary>The effect converts from Hue Saturation Lightness (HSL) to RGB.</summary>
  </comment>
  <comment id="ID2D1CommandSink4::SetPrimitiveBlend2">
    <summary>
      <para>Sets a new primitive blend mode. Allows access to the MAX primitive blend mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1commandsink4-setprimitiveblend2" /></para>
      <param name="primitiveBlend">The primitive blend that will apply to subsequent primitives.</param>
    </summary>
  </comment>
  <comment id="ID2D1DrawingStateBlock::SetTextRenderingParams">
    <summary>
      <para>Specifies the text-rendering configuration of the drawing state.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1drawingstateblock-settextrenderingparams" /></para>
      <param name="textRenderingParams">The text-rendering configuration of the drawing state, or NULL to use default settings.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat2::SetLineSpacing">
    <summary>
      <para>Set line spacing.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritetextformat2-setlinespacing" /></para>
      <param name="lineSpacingOptions">How to manage space between lines.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPathData::GetSegmentDataCount">
    <summary>
      <para>Gets the size of the segment data array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-getsegmentdatacount" /></para>
    </summary>
  </comment>
  <comment id="D2D1_ANTIALIAS_MODE">
    <summary>
      <para>Specifies how the edges of nontext primitives are rendered.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_antialias_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_ANTIALIAS_MODE::D2D1_ANTIALIAS_MODE_PER_PRIMITIVE">
    <summary>Edges are antialiased using the Direct2D per-primitive method of high-quality antialiasing.</summary>
  </comment>
  <comment id="D2D1_ANTIALIAS_MODE::D2D1_ANTIALIAS_MODE_ALIASED">
    <summary>Objects are aliased in most cases. Objects are antialiased only when they are drawn to a render target created by the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1factory-createdxgisurfacerendertarget(idxgisurface_constd2d1_render_target_properties__id2d1rendertarget)">CreateDxgiSurfaceRenderTarget</a> method and  Direct3D multisampling has been enabled on the backing DirectX Graphics Infrastructure (DXGI) surface.</summary>
  </comment>
  <comment id="ID2D1SvgDocument::FindElementById">
    <summary>
      <para>Gets the SVG element with the specified ID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-findelementbyid" /></para>
      <param name="id">ID of the element to retrieve.</param>
      <param name="svgElement">The element matching the specified ID. If the element cannot be found, the returned element will be null.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapEncoder::SetThumbnail">
    <summary>
      <para>Sets the global thumbnail for the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-setthumbnail" /></para>
      <param name="iThumbnail">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> to set as the global thumbnail.</param>
    </summary>
  </comment>
  <comment id="ID2D1RadialGradientBrush::SetRadiusY">
    <summary>
      <para>Specifies the y-radius of the gradient ellipse, in the brush's coordinate space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-setradiusy" /></para>
      <param name="radiusY">The y-radius of the gradient ellipse. This value is in the brush's coordinate space.</param>
    </summary>
  </comment>
  <comment id="IWICEnumMetadataItem::Skip">
    <summary>
      <para>Skips to given number of objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicenummetadataitem-skip" /></para>
      <param name="celt">The number of objects to skip.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::GetParent">
    <summary>
      <para>Gets the parent element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getparent" /></para>
      <param name="parent">Outputs the parent element.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::GetSpecifiedAttributeName">
    <summary>
      <para>Gets the name of the attribute at the given index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getspecifiedattributename" /></para>
      <param name="index">The index of the attribute.</param>
      <param name="name">Outputs the name of the attribute.</param>
      <param name="nameCount">Length of the string returned in the name argument.</param>
      <param name="inherited">Outputs whether the attribute is set to the inherit value.</param>
    </summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_PROP">
    <summary>
      <para>Identifiers for the properties of the Color management effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_colormanagement_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_PROP::D2D1_COLORMANAGEMENT_PROP_SOURCE_COLOR_CONTEXT">
    <summary>The source color space information. 
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nn-d2d1_1-id2d1colorcontext">ID2D1ColorContext</a>.

The default value is NULL.</summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_PROP::D2D1_COLORMANAGEMENT_PROP_SOURCE_RENDERING_INTENT">
    <summary>Which ICC rendering intent to use. 
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_colormanagement_rendering_intent">D2D1_COLORMANAGEMENT_RENDERING_INTENT</a>.

The default value is D2D1_COLORMANAGEMENT_RENDERING_INTENT_PERCEPTUAL.</summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_PROP::D2D1_COLORMANAGEMENT_PROP_DESTINATION_COLOR_CONTEXT">
    <summary>The destination color space information. 
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nn-d2d1_1-id2d1colorcontext">ID2D1ColorContext</a>.

The default value is NULL.</summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_PROP::D2D1_COLORMANAGEMENT_PROP_DESTINATION_RENDERING_INTENT">
    <summary>Which ICC rendering intent to use. 
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_colormanagement_rendering_intent">D2D1_COLORMANAGEMENT_RENDERING_INTENT</a>.

The default value is D2D1_COLORMANAGEMENT_RENDERING_INTENT_PERCEPTUAL.</summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_PROP::D2D1_COLORMANAGEMENT_PROP_ALPHA_MODE">
    <summary>How to interpret alpha data that is contained in the input image. 
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_colormanagement_alpha_mode">D2D1_COLORMANAGEMENT_ALPHA_MODE</a>.

The default value is D2D1_COLORMANAGEMENT_ALPHA_MODE_PREMULTIPLIED.</summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_PROP::D2D1_COLORMANAGEMENT_PROP_QUALITY">
    <summary>The quality level of the transform. 
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_colormanagement_quality">D2D1_COLORMANAGEMENT_QUALITY</a>.

The default value is D2D1_COLORMANAGEMENT_QUALITY_NORMAL.</summary>
  </comment>
  <comment id="IDWriteGlyphRunAnalysis::GetAlphaBlendParams">
    <summary>
      <para>Gets alpha blending properties required for ClearType blending.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwriteglyphrunanalysis-getalphablendparams" /></para>
      <param name="renderingParams">An object that specifies the ClearType level and enhanced contrast, gamma, pixel geometry, and rendering mode. In most cases, the values returned by the output
     parameters of this method are based on the properties of this object, unless a GDI-compatible rendering mode
     was specified.</param>
      <param name="blendGamma">When this method returns, contains  the gamma value to use for gamma correction.</param>
      <param name="blendEnhancedContrast">When this method returns, contains the enhanced contrast value to be used for blending.</param>
      <param name="blendClearTypeLevel">When this method returns, contains  the ClearType level used in the alpha blending.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory3::GetSystemFontCollection">
    <summary>
      <para>Retrieves a weight/width/slope tree of system fonts.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefactory3-getsystemfontcollection" /></para>
      <param name="includeDownloadableFonts">Indicates whether to include cloud fonts or only locally installed fonts.</param>
      <param name="fontCollection">Holds the newly created font collection object, or NULL in case of failure.</param>
      <param name="checkForUpdates">If this parameter is TRUE, the function performs an immediate check for changes       
           to the set of system fonts. If this parameter is FALSE, the function will still detect changes if the font      
           cache service is running, but there may be some latency. For example, an application might specify TRUE if      
           it has just installed a font and wants to be sure the font collection contains that font.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext2">
    <summary>
      <para>This interface performs all the same functions as the ID2D1DeviceContext1 interface, plus it enables functionality such as ink rendering, gradient mesh rendering, and improved image loading.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1devicecontext2" /></para>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateColorContext">
    <summary>
      <para>Creates a new instance of the IWICColorContext class.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createcolorcontext" /></para>
      <param name="iWICColorContext">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextRenderer::DrawStrikethrough">
    <summary>
      <para>IDWriteTextLayout::Draw calls this function to instruct the client to draw a strikethrough.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextrenderer-drawstrikethrough" /></para>
      <param name="clientDrawingContext">The application-defined drawing context passed to 
     IDWriteTextLayout::<a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwriteinlineobject-draw">Draw</a>.</param>
      <param name="baselineOriginX">The pixel location (X-coordinate) at the baseline origin of the run where strikethrough applies.</param>
      <param name="baselineOriginY">The pixel location (Y-coordinate) at the baseline origin of the run where strikethrough applies.</param>
      <param name="strikethrough">Pointer to  a structure containing strikethrough logical information.</param>
      <param name="clientDrawingEffect">Application-defined effect to apply to the strikethrough.  Usually this argument represents effects such as the foreground brush filling the interior of a line.</param>
    </summary>
  </comment>
  <comment id="ID2D1LinearGradientBrush::GetGradientStopCollection">
    <summary>
      <para>Retrieves the ID2D1GradientStopCollection associated with this linear gradient brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-getgradientstopcollection" /></para>
      <param name="gradientStopCollection">The  <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1gradientstopcollection">ID2D1GradientStopCollection</a> object associated with this linear gradient brush object. This parameter is passed uninitialized.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFamily::GetFamilyNames">
    <summary>
      <para>Creates a localized strings object that contains the family names for the font family, indexed by locale name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getfamilynames" /></para>
      <param name="names">The address of a pointer to the newly created <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritelocalizedstrings">IDWriteLocalizedStrings</a> object.</param>
    </summary>
  </comment>
  <comment id="IWICComponentFactory">
    <summary>
      <para>Exposes methods that create components used by component developers. This includes metadata readers, writers and other services for use by codec and metadata handler developers.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwiccomponentfactory" /></para>
    </summary>
  </comment>
  <comment id="D2D1_FEATURE_LEVEL">
    <summary>
      <para>Describes the minimum DirectX support required for hardware rendering by a render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_feature_level" /></para>
    </summary>
  </comment>
  <comment id="D2D1_FEATURE_LEVEL::D2D1_FEATURE_LEVEL_DEFAULT">
    <summary>Direct2D determines whether the video card provides adequate hardware rendering support.</summary>
  </comment>
  <comment id="D2D1_FEATURE_LEVEL::D2D1_FEATURE_LEVEL_9">
    <summary>The video card must support DirectX 9.</summary>
  </comment>
  <comment id="D2D1_FEATURE_LEVEL::D2D1_FEATURE_LEVEL_10">
    <summary>The video card must support DirectX 10.</summary>
  </comment>
  <comment id="ID2D1ColorContext1::GetSimpleColorProfile">
    <summary>
      <para>Retrieves a set simple color profile.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1colorcontext1-getsimplecolorprofile" /></para>
      <param name="simpleProfile">Pointer to a D2D1_SIMPLE_COLOR_PROFILE that will contain the simple color profile when the method returns.</param>
    </summary>
  </comment>
  <comment id="ID2D1DrawingStateBlock::GetTextRenderingParams">
    <summary>
      <para>Retrieves the text-rendering configuration of the drawing state.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1drawingstateblock-gettextrenderingparams" /></para>
      <param name="textRenderingParams">When this method returns, contains the address of a pointer to an <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwriterenderingparams">IDWriteRenderingParams</a> object that describes the text-rendering configuration of the drawing state.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::GetKelvinRangeInfo">
    <summary>
      <para>Gets the information about the current Kelvin range of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getkelvinrangeinfo" /></para>
      <param name="minKelvinTemp">A pointer that receives the minimum Kelvin temperature.</param>
      <param name="maxKelvinTemp">A pointer that receives the maximum Kelvin temperature.</param>
      <param name="kelvinTempStepValue">A pointer that receives the Kelvin step value.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::SetFontWeight">
    <summary>
      <para>Sets the font weight for text within a text range specified by a DWRITE_TEXT_RANGE structure.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-setfontweight" /></para>
      <param name="fontWeight">The font weight to be set for text within the range specified by <i>textRange</i>.</param>
      <param name="textRange">Text range to which this change applies.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::LoadVertexShader">
    <summary>
      <para>Loads the given shader by its unique ID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-loadvertexshader" /></para>
      <param name="resourceId">The unique id that identifies the shader.</param>
      <param name="shaderBuffer">The buffer that contains the shader to register.</param>
      <param name="shaderBufferCount">The size of the shader buffer in bytes.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory5::AnalyzeContainerType">
    <summary>
      <para>The AnalyzeContainerType method analyzes the specified file data to determine whether it is a known font container format (e.g., WOFF or WOFF2).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefactory5-analyzecontainertype" /></para>
      <param name="fileData">Pointer to the file data to analyze.</param>
      <param name="fileDataSize">Size of the buffer passed in fileData.</param>
    </summary>
  </comment>
  <comment id="WICGifLogicalScreenDescriptorProperties">
    <summary>
      <para>Specifies the logical screen descriptor properties for Graphics Interchange Format (GIF) metadata.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicgiflogicalscreendescriptorproperties" /></para>
    </summary>
  </comment>
  <comment id="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenSignature">
    <summary>[VT_UI1 | VT_VECTOR] Indicates the signature property.</summary>
  </comment>
  <comment id="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorWidth">
    <summary>[VT_UI2] Indicates the width in pixels.</summary>
  </comment>
  <comment id="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorHeight">
    <summary>[VT_UI2] Indicates the height in pixels.</summary>
  </comment>
  <comment id="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorGlobalColorTableFlag">
    <summary>[VT_BOOL] Indicates the  global color table flag. <b>TRUE</b> if a global color table is present; otherwise, <b>FALSE</b>.</summary>
  </comment>
  <comment id="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorColorResolution">
    <summary>[VT_UI1] Indicates the color resolution in bits per pixel.</summary>
  </comment>
  <comment id="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorSortFlag">
    <summary>[VT_BOOL] Indicates the sorted color table flag. <b>TRUE</b> if the table is sorted; otherwise, <b>FALSE</b>.</summary>
  </comment>
  <comment id="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorGlobalColorTableSize">
    <summary>[VT_UI1] Indicates the value used to calculate the number of bytes contained in the global color table. 

To calculate the actual size of the color table, raise 2 to the value of the field + 1.</summary>
  </comment>
  <comment id="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorBackgroundColorIndex">
    <summary>[VT_UI1] Indicates the index within the color table to use for the background (pixels not defined in the image).</summary>
  </comment>
  <comment id="WICGifLogicalScreenDescriptorProperties::WICGifLogicalScreenDescriptorPixelAspectRatio">
    <summary>[VT_UI1] Indicates the factor used to compute an approximation of the aspect ratio.</summary>
  </comment>
  <comment id="ID2D1Factory5">
    <summary>
      <para>Creates Direct2D resources. This interface also enables the creation of ID2D1Device4 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1factory5" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapDecoderInfo::CreateInstance">
    <summary>
      <para>Creates a new IWICBitmapDecoder instance.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoderinfo-createinstance" /></para>
      <param name="iBitmapDecoder">A pointer that receives a pointer to a new instance of the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoder">IWICBitmapDecoder</a>.</param>
    </summary>
  </comment>
  <comment id="ID2D1ConcreteTransform::SetOutputBuffer">
    <summary>
      <para>Sets the properties of the output buffer of the specified transform node.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1concretetransform-setoutputbuffer" /></para>
      <param name="bufferPrecision">The number of bits and the type of the output buffer.</param>
      <param name="channelDepth">The number of channels in the output buffer (1 or 4).</param>
    </summary>
  </comment>
  <comment id="IDWriteBitmapRenderTarget::SetPixelsPerDip">
    <summary>
      <para>Sets the number of bitmap pixels per DIP (device-independent pixel). A DIP is 1/96 inch, so this value is the number if pixels per inch divided by 96.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritebitmaprendertarget-setpixelsperdip" /></para>
      <param name="pixelsPerDip">A value that specifies the number of pixels per DIP.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgDocument::SetRoot">
    <summary>
      <para>Sets the root element of the document.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-setroot" /></para>
      <param name="root">The new root element of the document.</param>
    </summary>
  </comment>
  <comment id="ID2D1StrokeStyle">
    <summary>
      <para>Describes the caps, miter limit, line join, and dash information for a stroke.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1strokestyle" /></para>
    </summary>
  </comment>
  <comment id="IWICComponentInfo::GetSigningStatus">
    <summary>
      <para>Retrieves the signing status of the component.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getsigningstatus" /></para>
      <param name="status">A pointer that receives the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wiccomponentsigning">WICComponentSigning</a> status of the component.</param>
    </summary>
  </comment>
  <comment id="D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA">
    <summary>
      <para>Values for the D2D1_HIGHLIGHTSANDSHADOWS_PROP_INPUT_GAMMA property of the Highlights and Shadows effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_highlightsandshadows_input_gamma" /></para>
    </summary>
  </comment>
  <comment id="D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA::D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA_LINEAR">
    <summary>Indicates the input image is in linear gamma space.</summary>
  </comment>
  <comment id="D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA::D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA_SRGB">
    <summary>Indicates the input image is sRGB gamma space.</summary>
  </comment>
  <comment id="IDWriteGlyphRunAnalysis::GetAlphaTextureBounds">
    <summary>
      <para>Gets the bounding rectangle of the physical pixels affected by the glyph run.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwriteglyphrunanalysis-getalphatexturebounds" /></para>
      <param name="textureType">Specifies the type of texture requested. If a bi-level texture is requested, the
     bounding rectangle includes only bi-level glyphs. Otherwise, the bounding rectangle includes only antialiased
     glyphs.</param>
      <param name="textureBounds">When this method returns, contains the bounding rectangle of the physical pixels affected by the glyph run, or an empty rectangle if there are no glyphs
     of the specified texture type.</param>
    </summary>
  </comment>
  <comment id="D2D1_INK_BEZIER_SEGMENT">
    <summary>
      <para>Represents a Bezier segment to be used in the creation of an ID2D1Ink object. This structure differs from D2D1_BEZIER_SEGMENT in that it is composed of D2D1_INK_POINTs, which contain a radius in addition to x- and y-coordinates.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ns-d2d1_3-d2d1_ink_bezier_segment" /></para>
    </summary>
  </comment>
  <comment id="D2D1_INK_BEZIER_SEGMENT::point1">
    <summary>The first control point for the Bezier segment.</summary>
  </comment>
  <comment id="D2D1_INK_BEZIER_SEGMENT::point2">
    <summary>The second control point for the Bezier segment.</summary>
  </comment>
  <comment id="D2D1_INK_BEZIER_SEGMENT::point3">
    <summary>The end point for the Bezier segment.</summary>
  </comment>
  <comment id="WICPngSrgbProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) sRGB chunk metadata properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpngsrgbproperties" /></para>
    </summary>
  </comment>
  <comment id="WICPngSrgbProperties::WICPngSrgbRenderingIntent">
    <summary>[VT_UI1] Indicates the rendering intent for an sRGB color space image. The rendering intents have the following meaning.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td>0</td>
<td>Perceptual</td>
</tr>
<tr>
<td>1</td>
<td>Relative colorimetric</td>
</tr>
<tr>
<td>2</td>
<td>Saturation</td>
</tr>
<tr>
<td>3</td>
<td>Absolute colorimetric</td>
</tr>
</table></summary>
  </comment>
  <comment id="IWICStreamProvider">
    <summary>
      <para>Exposes methods for a stream provider.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicstreamprovider" /></para>
    </summary>
  </comment>
  <comment id="IWICMetadataBlockReader::GetContainerFormat">
    <summary>
      <para>Retrieves the container format of the decoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockreader-getcontainerformat" /></para>
      <param name="pguidContainerFormat">The container format of the decoder. The native container format GUIDs are listed in <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-guids-clsids">WIC GUIDs and CLSIDs</a>.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontSet2">
    <summary>
      <para>Represents a font set.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontset2" /></para>
    </summary>
  </comment>
  <comment id="D2D1_ARC_SIZE">
    <summary>
      <para>Specifies whether an arc should be greater than 180 degrees.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_arc_size" /></para>
    </summary>
  </comment>
  <comment id="D2D1_ARC_SIZE::D2D1_ARC_SIZE_SMALL">
    <summary>An arc's sweep should be 180 degrees or less.</summary>
  </comment>
  <comment id="D2D1_ARC_SIZE::D2D1_ARC_SIZE_LARGE">
    <summary>An arc's sweep should be 180 degrees or greater.</summary>
  </comment>
  <comment id="ID2D1SvgPointCollection::GetPointsCount">
    <summary>
      <para>Gets the number of points in the array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpointcollection-getpointscount" /></para>
    </summary>
  </comment>
  <comment id="D2D1_HWND_RENDER_TARGET_PROPERTIES">
    <summary>
      <para>Contains the HWND, pixel size, and presentation options for an ID2D1HwndRenderTarget.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_hwnd_render_target_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_HWND_RENDER_TARGET_PROPERTIES::hwnd">
    <summary>The HWND to which the render target issues the output from its drawing commands.</summary>
  </comment>
  <comment id="D2D1_HWND_RENDER_TARGET_PROPERTIES::pixelSize">
    <summary>The size of the render target, in pixels.</summary>
  </comment>
  <comment id="D2D1_HWND_RENDER_TARGET_PROPERTIES::presentOptions">
    <summary>A value that specifies whether the render target retains the frame after it is presented and whether the render target waits for the device to refresh before presenting.</summary>
  </comment>
  <comment id="ID2D1SimplifiedGeometrySink::EndFigure">
    <summary>
      <para>Ends the current figure; optionally, closes it.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1simplifiedgeometrysink-endfigure" /></para>
      <param name="figureEnd">A value that indicates whether the current figure is closed. If the figure is closed, a line is drawn between the current point and the start point specified by <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1simplifiedgeometrysink-beginfigure">BeginFigure</a>.</param>
    </summary>
  </comment>
  <comment id="ID2D1BitmapBrush1">
    <summary>
      <para>Paints an area with a bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1bitmapbrush1" /></para>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::InvalidateEffectInputRectangle">
    <summary>
      <para>This indicates that a portion of an effect's input is invalid. This method can be called many times.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-invalidateeffectinputrectangle" /></para>
      <param name="effect">The effect to invalidate.</param>
      <param name="input">The input index.</param>
      <param name="inputRectangle">The rect to invalidate.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateBitmapClipper">
    <summary>
      <para>Creates a new instance of an IWICBitmapClipper object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapclipper" /></para>
      <param name="iBitmapClipper">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapclipper">IWICBitmapClipper</a>.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateColorTransformer">
    <summary>
      <para>Creates a new instance of the IWICColorTransform class.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createcolortransformer" /></para>
      <param name="iWICColorTransform">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolortransform">IWICColorTransform</a>.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataWriterInfo">
    <summary>
      <para>Exposes methods that provide basic information about the registered metadata writer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicmetadatawriterinfo" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapCodecProgressNotification::RegisterProgressNotification">
    <summary>
      <para>Registers a progress notification callback function.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecprogressnotification-registerprogressnotification" /></para>
      <param name="pfnProgressNotification">A function pointer to the application defined progress notification callback function. See <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nc-wincodec-pfnprogressnotification">ProgressNotificationCallback</a> for the callback signature.</param>
      <param name="pvData">A pointer to component data for the callback method.</param>
      <param name="dwProgressFlags">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicprogressoperation">WICProgressOperation</a> and <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicprogressnotification">WICProgressNotification</a> flags to use for progress notification.</param>
    </summary>
  </comment>
  <comment id="D2D1_ORIENTATION">
    <summary>
      <para>Specifies the flip and rotation at which an image appears.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_orientation" /></para>
    </summary>
  </comment>
  <comment id="D2D1_ORIENTATION::D2D1_ORIENTATION_DEFAULT">
    <summary>The orientation is unchanged.</summary>
  </comment>
  <comment id="D2D1_ORIENTATION::D2D1_ORIENTATION_FLIP_HORIZONTAL">
    <summary>The image is flipped horizontally.</summary>
  </comment>
  <comment id="D2D1_ORIENTATION::D2D1_ORIENTATION_ROTATE_CLOCKWISE180">
    <summary>The image is rotated clockwise 180 degrees.</summary>
  </comment>
  <comment id="D2D1_ORIENTATION::D2D1_ORIENTATION_ROTATE_CLOCKWISE180_FLIP_HORIZONTAL">
    <summary>The image is rotated clockwise 180 degrees, then flipped horizontally.</summary>
  </comment>
  <comment id="D2D1_ORIENTATION::D2D1_ORIENTATION_ROTATE_CLOCKWISE90_FLIP_HORIZONTAL">
    <summary>The image is rotated clockwise 90 degrees, then flipped horizontally.</summary>
  </comment>
  <comment id="D2D1_ORIENTATION::D2D1_ORIENTATION_ROTATE_CLOCKWISE270">
    <summary>The image is rotated clockwise 270 degrees.</summary>
  </comment>
  <comment id="D2D1_ORIENTATION::D2D1_ORIENTATION_ROTATE_CLOCKWISE270_FLIP_HORIZONTAL">
    <summary>The image is rotated clockwise 270 degrees, then flipped horizontally.</summary>
  </comment>
  <comment id="D2D1_ORIENTATION::D2D1_ORIENTATION_ROTATE_CLOCKWISE90">
    <summary>The image is rotated clockwise 90 degrees.</summary>
  </comment>
  <comment id="ID2D1GradientStopCollection::GetColorInterpolationGamma">
    <summary>
      <para>Indicates the gamma space in which the gradient stops are interpolated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1gradientstopcollection-getcolorinterpolationgamma" /></para>
    </summary>
  </comment>
  <comment id="ID2D1BitmapBrush::GetBitmap">
    <summary>
      <para>Gets the bitmap source that this brush uses to paint.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-getbitmap" /></para>
      <param name="bitmap">When this method returns, contains the address to a pointer to the bitmap with which this brush paints.</param>
    </summary>
  </comment>
  <comment id="IWICImageEncoder::WriteThumbnail">
    <summary>
      <para>Encodes the given image as the thumbnail to the given WIC bitmap encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimageencoder-writethumbnail" /></para>
      <param name="image">The Direct2D image that will be encoded.</param>
      <param name="encoder">The encoder on which the thumbnail is set.</param>
      <param name="imageParameters">Additional parameters to control encoding.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataWriter::RemoveValue">
    <summary>
      <para>Removes the metadata item that matches the given parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatawriter-removevalue" /></para>
      <param name="pvarSchema">Pointer to the metadata schema property.</param>
      <param name="pvarId">Pointer to the metadata id property.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFaceReference::GetFontFile">
    <summary>
      <para>Obtains the font file representing a font face.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfacereference-getfontfile" /></para>
      <param name="fontFile" />
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::SetTags">
    <summary>
      <para>Specifies a label for subsequent drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-settags" /></para>
      <param name="tag1">A label to apply to subsequent drawing operations.</param>
      <param name="tag2">A label to apply to subsequent drawing operations.</param>
    </summary>
  </comment>
  <comment id="D2D1InvertMatrix">
    <summary>
      <para>Tries to invert the specified matrix.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-d2d1invertmatrix" /></para>
      <param name="matrix">The matrix to invert.</param>
    </summary>
  </comment>
  <comment id="IWICComponentFactory::CreateMetadataWriter">
    <summary>
      <para>Creates an IWICMetadataWriter based on the given parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createmetadatawriter" /></para>
      <param name="guidMetadataFormat">The GUID of the desired metadata format.</param>
      <param name="pguidVendor">Pointer to the GUID of the desired metadata reader vendor.</param>
      <param name="dwMetadataOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicpersistoptions">WICPersistOptions</a> and <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicmetadatacreationoptions">WICMetadataCreationOptions</a> options to use when creating the metadata reader.</param>
      <param name="iWriter">A pointer that receives a pointer to the new metadata writer.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer1">
    <summary>
      <para>Analyzes various text properties for complex script processing.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nn-dwrite_1-idwritetextanalyzer1" /></para>
    </summary>
  </comment>
  <comment id="D2D1_ALPHA_MODE">
    <summary>
      <para>Specifies how the alpha value of a bitmap or render target should be treated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dcommon/ne-dcommon-d2d1_alpha_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_ALPHA_MODE::D2D1_ALPHA_MODE_UNKNOWN">
    <summary>The alpha value might not be meaningful.</summary>
  </comment>
  <comment id="D2D1_ALPHA_MODE::D2D1_ALPHA_MODE_PREMULTIPLIED">
    <summary>The alpha value has been premultiplied. Each color is first scaled by the alpha value. The alpha value itself is the same in both straight and premultiplied alpha. Typically, no color channel value is greater than the alpha channel value.  If a color channel value in a premultiplied format is greater than the alpha channel, the standard source-over blending math results in an additive blend.</summary>
  </comment>
  <comment id="D2D1_ALPHA_MODE::D2D1_ALPHA_MODE_STRAIGHT">
    <summary>The alpha value has not been premultiplied. The alpha channel indicates the transparency of the color.</summary>
  </comment>
  <comment id="D2D1_ALPHA_MODE::D2D1_ALPHA_MODE_IGNORE">
    <summary>The alpha value is ignored.</summary>
  </comment>
  <comment id="IDWriteTextFormat1::SetOpticalAlignment">
    <summary>
      <para>Sets the optical margin alignment for the text format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextformat1-setopticalalignment" /></para>
      <param name="opticalAlignment">The optical alignment to set.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory2">
    <summary>
      <para>An extension of the WIC factory interface that includes the ability to create an IWICImageEncoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicimagingfactory2" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapSourceTransform::CopyPixels">
    <summary>
      <para>Copies pixel data using the supplied input parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsourcetransform-copypixels" /></para>
      <param name="prc">The rectangle of pixels to copy.</param>
      <param name="uiWidth">The width to scale the source bitmap. This parameter must equal the value obtainable through <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsourcetransform-getclosestsize">IWICBitmapSourceTransform::GetClosestSize</a>.</param>
      <param name="uiHeight">The height to scale the source bitmap. This parameter must equal the value obtainable through <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsourcetransform-getclosestsize">IWICBitmapSourceTransform::GetClosestSize</a>.</param>
      <param name="pguidDstFormat">The GUID of desired pixel format in which the pixels should be returned. 
               

This GUID must be a format obtained through an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsourcetransform-getclosestpixelformat">GetClosestPixelFormat</a> call.</param>
      <param name="dstTransform">The desired rotation or flip to perform prior to the pixel copy.
               

The transform must be an operation supported by an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsourcetransform-doessupporttransform">DoesSupportTransform</a> call.

If a <i>dstTransform</i> is specified, <i>nStride</i> is the <i>transformed stride</i> and is based on the <i>pguidDstFormat</i> pixel format, not the original source's pixel format.</param>
      <param name="nStride">The <a href="https://docs.microsoft.com/">stride</a> of the destination buffer.</param>
      <param name="cbBufferSize">The size of the destination buffer.</param>
      <param name="pbBuffer">The output buffer.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device4">
    <summary>
      <para>Represents a resource domain whose objects and device contexts can be used together. This interface performs all the same functions as the ID2D1Device3 interface. It also enables the creation of ID2D1DeviceContext4 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1device4" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ImageSource::TryReclaimResources">
    <summary>
      <para>Restores access to resources that were previously offered by calling OfferResources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1imagesource-tryreclaimresources" /></para>
      <param name="resourcesDiscarded">Returns with TRUE if the corresponding resource’s content was discarded and is now undefined, or FALSE if the corresponding resource’s old content is still intact.
            The caller can pass in NULL, if the caller intends to fill the resources with new content regardless of whether the old content was discarded.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace4::ReleaseGlyphImageData">
    <summary>
      <para>Releases the table data obtained from ReadGlyphData.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface4-releaseglyphimagedata" /></para>
      <param name="glyphDataContext">Opaque context from ReadGlyphData.</param>
    </summary>
  </comment>
  <comment id="IDWriteRenderingParams::GetRenderingMode">
    <summary>
      <para>Gets the rendering mode of the rendering parameters object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwriterenderingparams-getrenderingmode" /></para>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::LoadComputeShader">
    <summary>
      <para>Loads the given shader by its unique ID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-loadcomputeshader" /></para>
      <param name="resourceId">The unique id that identifies the shader.</param>
      <param name="shaderBuffer">The buffer that contains the shader to register.</param>
      <param name="shaderBufferCount">The size of the shader buffer in bytes.</param>
    </summary>
  </comment>
  <comment id="IWICPalette::InitializePredefined">
    <summary>
      <para>Initializes the palette to one of the pre-defined palettes specified by WICBitmapPaletteType and optionally adds a transparent color.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-initializepredefined" /></para>
      <param name="ePaletteType">The desired pre-defined palette type.</param>
      <param name="fAddTransparentColor">The optional transparent color to add to the palette. If no transparent color is needed, use 0. When initializing to a grayscale or black and white palette, set this parameter to <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataBlockWriter::AddWriter">
    <summary>
      <para>Adds a top-level metadata block by adding a IWICMetadataWriter for it.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockwriter-addwriter" /></para>
      <param name="iMetadataWriter">A pointer to the metadata writer to add to the image.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontCollection3">
    <summary>
      <para>This interface encapsulates a set of fonts, such as the set of fonts installed on the system, or the set of fonts in a particular directory. The font collection API can be used to discover what font families and fonts are available, and to obtain some metadata about the fonts.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontcollection3" /></para>
    </summary>
  </comment>
  <comment id="ID2D1TransformGraph::ConnectNode">
    <summary>
      <para>Connects two nodes inside the transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-connectnode" /></para>
      <param name="fromNode">The node from which the connection will be made.</param>
      <param name="toNode">The node to which the connection will be made.</param>
      <param name="toNodeInputIndex">The node input that will be connected.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::SetWhitePointKelvin">
    <summary>
      <para>Sets the white point Kelvin value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setwhitepointkelvin" /></para>
      <param name="whitePointKelvin">The white point Kelvin value. Acceptable Kelvin values are 1,500 through 30,000.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::GetTags">
    <summary>
      <para>Gets the label for subsequent drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-gettags" /></para>
      <param name="tag1">When this method returns, contains the first label for subsequent drawing operations. This parameter is passed uninitialized. If <b>NULL</b> is specified, no value is retrieved for this parameter.</param>
      <param name="tag2">When this method returns, contains the second label for subsequent drawing operations. This parameter is passed uninitialized. If <b>NULL</b> is specified, no value is retrieved for this parameter.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device::ClearResources">
    <summary>
      <para>Clears all of the rendering resources used by Direct2D.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1device-clearresources" /></para>
      <param name="millisecondsSinceUse">Discards only resources that haven't been used for greater than the specified time in milliseconds. The default is 0 milliseconds.</param>
    </summary>
  </comment>
  <comment id="D2D1_RENDERING_CONTROLS">
    <summary>
      <para>Describes limitations to be applied to an imaging effect renderer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_rendering_controls" /></para>
    </summary>
  </comment>
  <comment id="D2D1_RENDERING_CONTROLS::bufferPrecision">
    <summary>The buffer precision used by default if the buffer precision is not otherwise specified by the effect or by the transform.</summary>
  </comment>
  <comment id="D2D1_RENDERING_CONTROLS::tileSize">
    <summary>The tile allocation size to be used by the imaging effect renderer.</summary>
  </comment>
  <comment id="IWICPlanarFormatConverter::CanConvert">
    <summary>
      <para>Query if the format converter can convert from one format to another.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicplanarformatconverter-canconvert" /></para>
      <param name="srcPixelFormats">An array of WIC pixel formats that represents source image planes.</param>
      <param name="cSrcPlanes">The number of source pixel formats specified by the <i>pSrcFormats</i> parameter.</param>
      <param name="dstPixelFormat">The destination interleaved pixel format.</param>
      <param name="pfCanConvert">True if the conversion is supported.</param>
    </summary>
  </comment>
  <comment id="IDWriteGdiInterop::ConvertFontFaceToLOGFONT">
    <summary>
      <para>Initializes a LOGFONT structure based on the GDI-compatible properties of the specified font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritegdiinterop-convertfontfacetologfont" /></para>
      <param name="font">An <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefontface">IDWriteFontFace</a> object to be converted into a GDI-compatible LOGFONT structure.</param>
      <param name="logFont">When this method returns, contains a pointer to a structure that receives a GDI-compatible font description.</param>
    </summary>
  </comment>
  <comment id="ID2D1Ink::GetStartPoint">
    <summary>
      <para>Retrieves the starting point for this ink object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1ink-getstartpoint" /></para>
    </summary>
  </comment>
  <comment id="D2D1_RGBTOHUE_PROP">
    <summary>
      <para>Indentifiers for properties of the RGB to Hue effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_rgbtohue_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_RGBTOHUE_PROP::D2D1_RGBTOHUE_PROP_OUTPUT_COLOR_SPACE">
    <summary>The D2D1_RGBTOHUE_PROP_OUTPUT_COLOR_SPACE property is an enumeration value which indicates the color space to convert to. 
          The default value for the property is D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE_HUE_SATURATION_VALUE.
          See the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_2/ne-d2d1effects_2-d2d1_rgbtohue_output_color_space">D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE</a> enumeration for more information.</summary>
  </comment>
  <comment id="IDWriteTextFormat::SetTextAlignment">
    <summary>
      <para>Sets the alignment of text in a paragraph, relative to the leading and trailing edge of a layout box for a IDWriteTextFormat interface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-settextalignment" /></para>
      <param name="textAlignment">The text alignment option being set for the paragraph of type DWRITE_TEXT_ALIGNMENT.  For more information, see Remarks.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::LoadPixelShader">
    <summary>
      <para>Loads the given shader by its unique ID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-loadpixelshader" /></para>
      <param name="shaderId">The unique id that identifies the shader.</param>
      <param name="shaderBuffer">The buffer that contains the shader to register.</param>
      <param name="shaderBufferCount">The size of the shader buffer in bytes.</param>
    </summary>
  </comment>
  <comment id="WICJpegChrominanceProperties">
    <summary>
      <para>Specifies the JPEG chrominance table property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicjpegchrominanceproperties" /></para>
    </summary>
  </comment>
  <comment id="WICJpegChrominanceProperties::WICJpegChrominanceTable">
    <summary>[VT_UI2|VT_VECTOR] Indicates the metadata property is a chrominance table.</summary>
  </comment>
  <comment id="IWICMetadataWriter::SetValue">
    <summary>
      <para>Sets the given metadata item.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatawriter-setvalue" /></para>
      <param name="pvarSchema">Pointer to the schema property of the metadata item.</param>
      <param name="pvarId">Pointer to the id property of the metadata item.</param>
      <param name="pvarValue">Pointer to the metadata value to set</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::DrawRectangle">
    <summary>
      <para>Draws a rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-drawrectangle" /></para>
      <param name="rect">The rectangle to be drawn to the command sink.</param>
      <param name="brush">The brush used to stroke the geometry.</param>
      <param name="strokeWidth">The width of the stroke.</param>
      <param name="strokeStyle">The style of the stroke.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::CreateColorContextFromWicColorContext">
    <summary>
      <para>Creates a color context from an IWICColorContext. The D2D1ColorContext space of the resulting context varies, see Remarks for more info.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createcolorcontextfromwiccolorcontext" /></para>
      <param name="wicColorContext">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> used to initialize the color context.</param>
      <param name="colorContext">When this method returns, contains the address of a pointer to a new color context.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::DrawGlyphRun">
    <summary>
      <para>Draws a series of glyphs to the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-drawglyphrun" /></para>
      <param name="baselineOrigin">Origin of first glyph in the series.</param>
      <param name="glyphRun">The glyphs to render.</param>
      <param name="glyphRunDescription">Supplementary glyph series information.</param>
      <param name="foregroundBrush">The brush that defines the text color.</param>
      <param name="measuringMode">The measuring mode of the glyph series, used to determine the advances and offsets. The default value is DWRITE_MEASURING_MODE_NATURAL.</param>
    </summary>
  </comment>
  <comment id="D2D1_BEZIER_SEGMENT">
    <summary>
      <para>Represents a cubic bezier segment drawn between two points.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_bezier_segment" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BEZIER_SEGMENT::point1">
    <summary>The first control point for the Bezier segment.</summary>
  </comment>
  <comment id="D2D1_BEZIER_SEGMENT::point2">
    <summary>The second control point for the Bezier segment.</summary>
  </comment>
  <comment id="D2D1_BEZIER_SEGMENT::point3">
    <summary>The end point for the Bezier segment.</summary>
  </comment>
  <comment id="ID2D1SimplifiedGeometrySink::BeginFigure">
    <summary>
      <para>Starts a new figure at the specified point.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1simplifiedgeometrysink-beginfigure" /></para>
      <param name="startPoint">The point at which to begin the new figure.</param>
      <param name="figureBegin">Whether the new figure should be hollow or filled.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace1">
    <summary>
      <para>Contains font face type, appropriate file references, and face identification data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nn-dwrite_1-idwritefontface1" /></para>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::SetTint">
    <summary>
      <para>Sets the tint value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-settint" /></para>
      <param name="tint">The tint value of the raw image. The default value is the "as-shot" setting if it exists or 0.0. The value range for sharpness is -1.0 through +1.0. The -1.0 lower limit represents a full green bias to the image, while the 1.0 upper limit represents a full magenta bias.</param>
    </summary>
  </comment>
  <comment id="ID2D1Mesh::Open">
    <summary>
      <para>Opens the mesh for population.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1mesh-open" /></para>
      <param name="tessellationSink">When this method returns, contains a pointer to a pointer to an <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1tessellationsink">ID2D1TessellationSink</a> that is used to populate the mesh. This parameter is passed uninitialized.</param>
    </summary>
  </comment>
  <comment id="IWICPixelFormatInfo2::GetNumericRepresentation">
    <summary>
      <para>TBD</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpixelformatinfo2-getnumericrepresentation" /></para>
      <param name="numericRepresentation">The address of a <a href="https://docs.microsoft.com/windows/win32/api/wincodec/ne-wincodec-wicpixelformatnumericrepresentation">WICPixelFormatNumericRepresentation</a> variable that you've defined. On successful completion, the function sets your variable to the **WICPixelFormatNumericRepresentation** of the pixel format.</param>
    </summary>
  </comment>
  <comment id="ID2D1ImageBrush::GetExtendModeX">
    <summary>
      <para>Gets the extend mode of the image brush on the x-axis.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-getextendmodex" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout3::GetLineMetrics">
    <summary>
      <para>Retrieves properties of each line.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritetextlayout3-getlinemetrics" /></para>
      <param name="lineMetrics">The array to fill with line information.</param>
      <param name="maxLineCount">The maximum size of the lineMetrics array.</param>
      <param name="actualLineCount">The actual size of the lineMetrics    
     array that is needed.</param>
    </summary>
  </comment>
  <comment id="ID2D1Bitmap1::GetColorContext">
    <summary>
      <para>Gets the color context information associated with the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1bitmap1-getcolorcontext" /></para>
      <param name="colorContext">When this method returns, contains the address of a pointer to the  color context interface associated with the bitmap.</param>
    </summary>
  </comment>
  <comment id="ID2D1BorderTransform">
    <summary>
      <para>Extends the input rectangle to infinity using the specified extend modes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1bordertransform" /></para>
    </summary>
  </comment>
  <comment id="D2D1_OPACITY_MASK_CONTENT">
    <summary>
      <para>Describes whether an opacity mask contains graphics or text. Direct2D uses this information to determine which gamma space to use when blending the opacity mask.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_opacity_mask_content" /></para>
    </summary>
  </comment>
  <comment id="D2D1_OPACITY_MASK_CONTENT::D2D1_OPACITY_MASK_CONTENT_GRAPHICS">
    <summary>The opacity mask contains graphics. The opacity mask is blended in the gamma 2.2 color space.</summary>
  </comment>
  <comment id="D2D1_OPACITY_MASK_CONTENT::D2D1_OPACITY_MASK_CONTENT_TEXT_NATURAL">
    <summary>The opacity mask contains non-GDI text. The gamma space used for blending is obtained from the render target's text rendering parameters. (<a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1rendertarget-settextrenderingparams">ID2D1RenderTarget::SetTextRenderingParams</a>).</summary>
  </comment>
  <comment id="D2D1_OPACITY_MASK_CONTENT::D2D1_OPACITY_MASK_CONTENT_TEXT_GDI_COMPATIBLE">
    <summary>The opacity mask contains text rendered using the GDI-compatible rendering mode. The opacity mask is blended using the gamma for GDI rendering.</summary>
  </comment>
  <comment id="IDWriteTextFormat2::GetLineSpacing">
    <summary>
      <para>Gets the line spacing adjustment set for a multiline text paragraph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritetextformat2-getlinespacing" /></para>
      <param name="lineSpacingOptions">A structure describing how the space between lines is managed for the paragraph.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFamily">
    <summary>
      <para>Represents a family of related fonts.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritefontfamily" /></para>
    </summary>
  </comment>
  <comment id="ID2D1EffectImpl::PrepareForRender">
    <summary>
      <para>Prepares an effect for the rendering process.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectimpl-prepareforrender" /></para>
      <param name="changeType">Indicates the type of change the effect should expect.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::LoadParameterSet">
    <summary>
      <para>Sets the desired WICRawParameterSet option.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-loadparameterset" /></para>
      <param name="parameterSet">The desired <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawparameterset">WICRawParameterSet</a> option.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::PushLayer">
    <summary>
      <para>Pushes a layer onto the clip and layer stack.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-pushlayer" /></para>
      <param name="layerParameters1">The parameters that define the layer.</param>
      <param name="layer">The layer resource that receives subsequent drawing operations.</param>
    </summary>
  </comment>
  <comment id="ID2D1GradientStopCollection::GetExtendMode">
    <summary>
      <para>Indicates the behavior of the gradient outside the normalized gradient range.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1gradientstopcollection-getextendmode" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Bitmap::GetPixelFormat">
    <summary>
      <para>Retrieves the pixel format and alpha mode of the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmap-getpixelformat" /></para>
    </summary>
  </comment>
  <comment id="WICMetadataCreationOptions">
    <summary>
      <para>Specifies metadata creation options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/ne-wincodecsdk-wicmetadatacreationoptions" /></para>
    </summary>
  </comment>
  <comment id="WICMetadataCreationOptions::WICMetadataCreationDefault">
    <summary>The default metadata creation options. The default value is <b>WICMetadataCreationAllowUnknown</b>.</summary>
  </comment>
  <comment id="WICMetadataCreationOptions::WICMetadataCreationAllowUnknown">
    <summary>Allow unknown metadata creation.</summary>
  </comment>
  <comment id="WICMetadataCreationOptions::WICMetadataCreationFailUnknown">
    <summary>Fail on unknown metadata creation.</summary>
  </comment>
  <comment id="WICMetadataCreationOptions::WICMetadataCreationMask">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicmetadatacreationoptions">WICMetadataCreationOptions</a> mask.</summary>
  </comment>
  <comment id="IDWriteTextLayout1">
    <summary>
      <para>Represents a block of text after it has been fully analyzed and formatted.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nn-dwrite_1-idwritetextlayout1" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat1::GetFontFallback">
    <summary>
      <para>Gets the current fallback. If none was ever set since creating the layout, it will be nullptr.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextformat1-getfontfallback" /></para>
      <param name="fontFallback">Contains an address of a pointer to the the current font fallback object.</param>
    </summary>
  </comment>
  <comment id="ID2D1LinearGradientBrush::GetEndPoint">
    <summary>
      <para>Retrieves the ending coordinates of the linear gradient.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-getendpoint" /></para>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::SetNamedWhitePoint">
    <summary>
      <para>Sets the named white point of the raw file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setnamedwhitepoint" /></para>
      <param name="whitePoint">A bitwise combination of the enumeration values.</param>
    </summary>
  </comment>
  <comment id="IWICColorContext::GetProfileBytes">
    <summary>
      <para>Retrieves the color context profile.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolorcontext-getprofilebytes" /></para>
      <param name="cbBuffer">The size of the <i>pbBuffer</i> buffer.</param>
      <param name="pbBuffer">A pointer that receives the color context profile.</param>
      <param name="pcbActual">A pointer that receives the actual buffer size needed to retrieve the entire color context profile.</param>
    </summary>
  </comment>
  <comment id="ID2D1SourceTransform">
    <summary>
      <para>Represents a CPU-based rasterization stage in the transform pipeline graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1sourcetransform" /></para>
    </summary>
  </comment>
  <comment id="D2D1_ARC_SEGMENT">
    <summary>
      <para>Describes an elliptical arc between two points.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_arc_segment" /></para>
    </summary>
  </comment>
  <comment id="D2D1_ARC_SEGMENT::point">
    <summary>The end point of the arc.</summary>
  </comment>
  <comment id="D2D1_ARC_SEGMENT::size">
    <summary>The x-radius and y-radius of the arc.</summary>
  </comment>
  <comment id="D2D1_ARC_SEGMENT::rotationAngle">
    <summary>A value that specifies how many degrees in the clockwise direction the ellipse is rotated relative to the current coordinate system.</summary>
  </comment>
  <comment id="D2D1_ARC_SEGMENT::sweepDirection">
    <summary>A value that specifies whether the arc sweep is clockwise or counterclockwise.</summary>
  </comment>
  <comment id="D2D1_ARC_SEGMENT::arcSize">
    <summary>A value that specifies whether the given arc is larger than 180 degrees.</summary>
  </comment>
  <comment id="IDWriteRemoteFontFileLoader::GetLocalityFromKey">
    <summary>
      <para>Gets the locality of the file resource identified by the unique key.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwriteremotefontfileloader-getlocalityfromkey" /></para>
      <param name="fontFileReferenceKey">Font file reference key that uniquely identifies the font file resource within the scope of the font loader being used.</param>
      <param name="fontFileReferenceKeySize">Size of font file reference key in bytes.</param>
      <param name="locality">Locality of the file.</param>
    </summary>
  </comment>
  <comment id="WICRawToneCurvePoint">
    <summary>
      <para>Represents a raw image tone curve point.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicrawtonecurvepoint" /></para>
    </summary>
  </comment>
  <comment id="WICRawToneCurvePoint::Input">
    <summary>The tone curve input.</summary>
  </comment>
  <comment id="WICRawToneCurvePoint::Output">
    <summary>The tone curve output.</summary>
  </comment>
  <comment id="ID2D1BitmapBrush::GetInterpolationMode">
    <summary>
      <para>Gets the interpolation method used when the brush bitmap is scaled or rotated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-getinterpolationmode" /></para>
    </summary>
  </comment>
  <comment id="IWICStream::InitializeFromIStream">
    <summary>
      <para>Initializes a stream from another stream. Access rights are inherited from the underlying stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicstream-initializefromistream" /></para>
      <param name="iStream">The initialize stream.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateBitmapFlipRotator">
    <summary>
      <para>Creates a new instance of an IWICBitmapFlipRotator object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapfliprotator" /></para>
      <param name="iBitmapFlipRotator">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapfliprotator">IWICBitmapFlipRotator</a>.</param>
    </summary>
  </comment>
  <comment id="ID2D1SpriteBatch::Clear">
    <summary>
      <para>Removes all sprites from this sprite batch.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1spritebatch-clear" /></para>
    </summary>
  </comment>
  <comment id="IWICMetadataQueryReader::GetMetadataByName">
    <summary>
      <para>Retrieves the metadata block or item identified by a metadata query expression.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataqueryreader-getmetadatabyname" /></para>
      <param name="wzName">The query expression to the requested metadata block or item.</param>
      <param name="pvarValue">When this method returns, contains the metadata block or item requested.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::SetSaturation">
    <summary>
      <para>Sets the saturation value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setsaturation" /></para>
      <param name="saturation">The saturation value of the raw image. The value range for saturation is 0.0 through 1.0. A value of 0.0 represents an image with a fully de-saturated image, while a value of 1.0 represents the highest amount of saturation that can be applied.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace2::GetColorPaletteCount">
    <summary>
      <para>Gets the number of color palettes defined by the font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefontface2-getcolorpalettecount" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::GetParagraphAlignment">
    <summary>
      <para>Gets the alignment option of a paragraph which is relative to the top and bottom edges of a layout box.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getparagraphalignment" /></para>
    </summary>
  </comment>
  <comment id="D2D1_CHANGE_TYPE">
    <summary>
      <para>Describes flags that influence how the renderer interacts with a custom vertex shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_change_type" /></para>
    </summary>
  </comment>
  <comment id="D2D1_CHANGE_TYPE::D2D1_CHANGE_TYPE_NONE">
    <summary>There were no changes.</summary>
  </comment>
  <comment id="D2D1_CHANGE_TYPE::D2D1_CHANGE_TYPE_PROPERTIES">
    <summary>The properties of the effect changed.</summary>
  </comment>
  <comment id="D2D1_CHANGE_TYPE::D2D1_CHANGE_TYPE_CONTEXT">
    <summary>The context state changed.</summary>
  </comment>
  <comment id="D2D1_CHANGE_TYPE::D2D1_CHANGE_TYPE_GRAPH">
    <summary>The effect’s transform graph has changed.  This happens only when an effect supports a variable input count.</summary>
  </comment>
  <comment id="IWICBitmapEncoderInfo">
    <summary>
      <para>Exposes methods that provide information about an encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapencoderinfo" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::GetPreviousChild">
    <summary>
      <para>Gets the previous sibling of the referenceChild element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getpreviouschild" /></para>
      <param name="referenceChild">The referenceChild must be an immediate child of this element.</param>
      <param name="previousChild">The output previousChild element will be non-null if the referenceChild has a previous sibling. If the referenceChild is the first child, the output is null.</param>
    </summary>
  </comment>
  <comment id="D2D1_DIRECTIONALBLUR_OPTIMIZATION">
    <summary>
      <para>Specifies the optimization mode for the Directional blur effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_directionalblur_optimization" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DIRECTIONALBLUR_OPTIMIZATION::D2D1_DIRECTIONALBLUR_OPTIMIZATION_SPEED">
    <summary>Applies internal optimizations such as pre-scaling at relatively small radii. Uses linear filtering.</summary>
  </comment>
  <comment id="D2D1_DIRECTIONALBLUR_OPTIMIZATION::D2D1_DIRECTIONALBLUR_OPTIMIZATION_BALANCED">
    <summary>Uses the same optimization thresholds as Speed mode, but uses trilinear filtering.</summary>
  </comment>
  <comment id="D2D1_DIRECTIONALBLUR_OPTIMIZATION::D2D1_DIRECTIONALBLUR_OPTIMIZATION_QUALITY">
    <summary>Only uses internal optimizations with large blur radii, where approximations are less likely to be visible. Uses trilinear filtering.</summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_TYPE">
    <summary>
      <para>Describes whether a render target uses hardware or software rendering, or if Direct2D should select the rendering mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_render_target_type" /></para>
    </summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_TYPE::D2D1_RENDER_TARGET_TYPE_DEFAULT">
    <summary>The render target uses hardware rendering, if available; otherwise, it uses software rendering.</summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_TYPE::D2D1_RENDER_TARGET_TYPE_SOFTWARE">
    <summary>The render target uses software rendering only.</summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_TYPE::D2D1_RENDER_TARGET_TYPE_HARDWARE">
    <summary>The render target uses hardware rendering only.</summary>
  </comment>
  <comment id="ID2D1PathGeometry::GetFigureCount">
    <summary>
      <para>Retrieves the number of figures in the path geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1pathgeometry-getfigurecount" /></para>
      <param name="count">A pointer that receives the number of figures in the path geometry when this method returns. You must allocate storage for this parameter.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapEncoder::GetContainerFormat">
    <summary>
      <para>Retrieves the encoder's container format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-getcontainerformat" /></para>
      <param name="pguidContainerFormat">A pointer that receives the encoder's container format GUID.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::SetContrast">
    <summary>
      <para>Sets the contrast value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setcontrast" /></para>
      <param name="contrast">The contrast value of the raw image.  The default value is the "as-shot" setting. The value range for contrast is 0.0 through 1.0. The 0.0 lower limit represents no contrast applied to the image, while the 1.0 upper limit represents the highest amount of contrast that can be applied.</param>
    </summary>
  </comment>
  <comment id="IWICBitmap::SetResolution">
    <summary>
      <para>Changes the physical resolution of the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmap-setresolution" /></para>
      <param name="dpiX">The horizontal resolution.</param>
      <param name="dpiY">The vertical resolution.</param>
    </summary>
  </comment>
  <comment id="D2D1_PRINT_CONTROL_PROPERTIES">
    <summary>
      <para>The creation properties for a ID2D1PrintControl object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_print_control_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_PRINT_CONTROL_PROPERTIES::fontSubset">
    <summary>The mode to use for subsetting fonts for printing, defaults to <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/ne-d2d1_1-d2d1_print_font_subset_mode">D2D1_PRINT_FONT_SUBSET_MODE_DEFAULT</a>.</summary>
  </comment>
  <comment id="D2D1_PRINT_CONTROL_PROPERTIES::rasterDPI">
    <summary>DPI for rasterization of all unsupported Direct2D commands or options, defaults to 150.0.</summary>
  </comment>
  <comment id="D2D1_PRINT_CONTROL_PROPERTIES::colorSpace">
    <summary>Color space for vector graphics, defaults to <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/ne-d2d1_1-d2d1_color_space">D2D1_COLOR_SPACE_SRGB</a>.</summary>
  </comment>
  <comment id="IDWriteFontFaceReference::CreateFontFace">
    <summary>
      <para>Creates a font face from the reference for use with layout, shaping, or rendering.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfacereference-createfontface" /></para>
      <param name="fontFace">Newly created font face object, or nullptr in the case of failure.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontList2">
    <summary>
      <para>Represents a list of fonts. **IDWriteFontList2** adds new facilities, including retrieving the underlying font set used by the list.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontlist2" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgDocument::CreatePointCollection">
    <summary>
      <para>Creates a points object which can be used to set a points attribute on a polygon or polyline element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-createpointcollection" /></para>
      <param name="points">The points in the point collection.</param>
      <param name="pointsCount">The number of points in the points argument.</param>
      <param name="pointCollection">The created <a href="https://docs.microsoft.com/windows/desktop/api/d2d1svg/nn-d2d1svg-id2d1svgpointcollection">ID2D1SvgPointCollection</a> object.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataReader">
    <summary>
      <para>Exposes methods that provide access to underlining metadata content. This interface is implemented by independent software vendors (ISVs) to create new metadata readers.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicmetadatareader" /></para>
    </summary>
  </comment>
  <comment id="IDWriteRemoteFontFileStream::GetLocalFileSize">
    <summary>
      <para>GetLocalFileSize returns the number of bytes of the font file that are currently local, which should always be less than or equal to the full file size returned by GetFileSize.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwriteremotefontfilestream-getlocalfilesize" /></para>
      <param name="localFileSize">Receives the local size of the file.</param>
    </summary>
  </comment>
  <comment id="ID2D1BitmapBrush::SetInterpolationMode">
    <summary>
      <para>Specifies the interpolation mode used when the brush bitmap is scaled or rotated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-setinterpolationmode" /></para>
      <param name="interpolationMode">The interpolation mode used when the brush bitmap is scaled or rotated.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFaceReference::GetFileSize">
    <summary>
      <para>Get the total size of the font face in bytes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfacereference-getfilesize" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ImageBrush">
    <summary>
      <para>Represents a brush based on an ID2D1Image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1imagebrush" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SpriteBatch::GetSpriteCount">
    <summary>
      <para>Retrieves the number of sprites in this sprite batch.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1spritebatch-getspritecount" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer2">
    <summary>
      <para>Analyzes various text properties for complex script processing.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nn-dwrite_2-idwritetextanalyzer2" /></para>
    </summary>
  </comment>
  <comment id="WICMapSchemaToName">
    <summary>
      <para>Obtains the name associated with a given schema.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-wicmapschematoname" /></para>
      <param name="guidMetadataFormat">The metadata format GUID.</param>
      <param name="pwzSchema">The URI string of the schema for which the name is to be retrieved.</param>
      <param name="cchName">The size of the <i>wzName</i> buffer.</param>
      <param name="wzName">A pointer to a buffer that receives the schema's name.

To obtain the required buffer size, call <b>WICMapSchemaToName</b> with <i>cchName</i> set to 0 and <i>wzName</i> set to <b>NULL</b>.</param>
      <param name="pcchActual">The actual buffer size needed to retrieve the entire schema name.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer::GetGlyphs">
    <summary>
      <para>Parses the input text string and maps it to the set of glyphs and associated glyph data according to the font and the writing system's rendering rules.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalyzer-getglyphs" /></para>
      <param name="textString">An array of characters to convert to glyphs.</param>
      <param name="textLength">The length of <i>textString</i>.</param>
      <param name="fontFace">The font face that is the source of the output glyphs.</param>
      <param name="isSideways">A Boolean flag set to <b>TRUE</b> if the text is intended to be
     drawn vertically.</param>
      <param name="isRightToLeft">A Boolean flag set to <b>TRUE</b> for right-to-left text.</param>
      <param name="scriptAnalysis">A pointer to a Script analysis result from an <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-analyzescript">AnalyzeScript</a> call.</param>
      <param name="localeName">The locale to use when selecting glyphs.
     For example the same character may map to different glyphs for ja-jp versus zh-chs.
     If this is <b>NULL</b>, then the default mapping based on the script is used.</param>
      <param name="numberSubstitution">A pointer to an optional number substitution which selects the appropriate glyphs for digits and related numeric characters, depending on the results obtained from <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-analyzenumbersubstitution">AnalyzeNumberSubstitution</a>. Passing <b>NULL</b> indicates that no substitution is needed and that the digits should receive nominal glyphs.</param>
      <param name="features">An array of pointers to the sets of typographic 
     features to use in each feature range.</param>
      <param name="featureRangeLengths">The length of each feature range, in characters.  
     The sum of all lengths should be equal to <i>textLength</i>.</param>
      <param name="featureRanges">The number of feature ranges.</param>
      <param name="maxGlyphCount">The maximum number of glyphs that can be
     returned.</param>
      <param name="clusterMap">When this method returns, contains the mapping from character ranges to glyph 
     ranges.</param>
      <param name="textProps">When this method returns, contains a pointer to an array of structures that contains  shaping properties for each character.</param>
      <param name="glyphIndices">The output glyph indices.</param>
      <param name="glyphProps">When this method returns, contains a pointer to an array of structures that contain  shaping properties for each output glyph.</param>
      <param name="actualGlyphCount">When this method returns, contains the actual number of glyphs returned if
     the call succeeds.</param>
    </summary>
  </comment>
  <comment id="ID2D1EllipseGeometry">
    <summary>
      <para>Represents an ellipse.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1ellipsegeometry" /></para>
    </summary>
  </comment>
  <comment id="IWICPersistStream::SaveEx">
    <summary>
      <para>Saves the IWICPersistStream to the given input IStream using the given parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicpersiststream-saveex" /></para>
      <param name="iStream">The stream to save to.</param>
      <param name="dwPersistOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicpersistoptions">WICPersistOptions</a>  to use when saving.</param>
      <param name="fClearDirty">Indicates whether the "dirty" value will be cleared from all metadata after saving.</param>
    </summary>
  </comment>
  <comment id="ID2D1Multithread::GetMultithreadProtected">
    <summary>
      <para>Returns whether the Direct2D factory was created with the D2D1_FACTORY_TYPE_MULTI_THREADED flag.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1multithread-getmultithreadprotected" /></para>
    </summary>
  </comment>
  <comment id="WICGifApplicationExtensionProperties">
    <summary>
      <para>Specifies the application extension metadata properties for a Graphics Interchange Format (GIF) image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicgifapplicationextensionproperties" /></para>
    </summary>
  </comment>
  <comment id="WICGifApplicationExtensionProperties::WICGifApplicationExtensionApplication">
    <summary>[VT_UI1 | VT_VECTOR] Indicates a string that identifies the application.</summary>
  </comment>
  <comment id="WICGifApplicationExtensionProperties::WICGifApplicationExtensionData">
    <summary>[VT_UI1 \| VT_VECTOR] Indicates data that is exposed by the application.</summary>
  </comment>
  <comment id="ID2D1RenderInfo::SetOutputBuffer">
    <summary>
      <para>Allows a caller to control the output precision and channel-depth of the transform in which the render information is encapsulated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1renderinfo-setoutputbuffer" /></para>
      <param name="bufferPrecision">The type of buffer that should be used as an output from this transform.</param>
      <param name="channelDepth">The number of channels that will be used on the output buffer.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink2::DrawGradientMesh">
    <summary>
      <para>Renders a given gradient mesh to the target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1commandsink2-drawgradientmesh" /></para>
      <param name="gradientMesh">The gradient mesh to be rendered.</param>
    </summary>
  </comment>
  <comment id="IDWriteBitmapRenderTarget::GetPixelsPerDip">
    <summary>
      <para>Gets the number of bitmap pixels per DIP.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritebitmaprendertarget-getpixelsperdip" /></para>
    </summary>
  </comment>
  <comment id="D2D1ComputeMaximumScaleFactor">
    <summary>
      <para>Computes the maximum factor by which a given transform can stretch any vector.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-d2d1computemaximumscalefactor" /></para>
      <param name="matrix">The input transform matrix.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace2">
    <summary>
      <para>Contains font face type, appropriate file references, and face identification data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nn-dwrite_2-idwritefontface2" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgGlyphStyle::GetStroke">
    <summary>
      <para>Returns the requested stroke parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1svgglyphstyle-getstroke" /></para>
      <param name="brush">Describes how the stroke is painted.</param>
      <param name="strokeWidth">The 'context-value' for the 'stroke-width' property.</param>
      <param name="dashes">The 'context-value' for the 'stroke-dasharray'
          property.</param>
      <param name="dashesCount">The the number of dashes in the dash array.</param>
      <param name="dashOffset">The 'context-value' for the 'stroke-dashoffset' property.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandList::Stream">
    <summary>
      <para>Streams the contents of the command list to the specified command sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandlist-stream" /></para>
      <param name="sink">The sink into which the command list will be streamed.</param>
    </summary>
  </comment>
  <comment id="ID2D1BorderTransform::SetExtendModeY">
    <summary>
      <para>Sets the extend mode in the y direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1bordertransform-setextendmodey" /></para>
      <param name="extendMode">The extend mode in the y direction.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::PopAxisAlignedClip">
    <summary>
      <para>Removes an axis-aligned clip from the layer and clip stack.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-popaxisalignedclip" /></para>
    </summary>
  </comment>
  <comment id="WICConvertBitmapSource">
    <summary>
      <para>Obtains a IWICBitmapSource in the desired pixel format from a given IWICBitmapSource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-wicconvertbitmapsource" /></para>
      <param name="dstFormat">The pixel format to convert to.</param>
      <param name="iSrc">The source bitmap.</param>
      <param name="iDst">A pointer to the <b>null</b>-initialized destination bitmap pointer.</param>
    </summary>
  </comment>
  <comment id="D2D1_BLEND_PROP">
    <summary>
      <para>Identifiers for properties of the Blend effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_blend_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BLEND_PROP::D2D1_BLEND_PROP_MODE">
    <summary>The blend mode used for the effect.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_blend_mode">D2D1_BLEND_MODE</a>.

The default value is D2D1_BLEND_MODE_MULTIPLY.</summary>
  </comment>
  <comment id="ID2D1SvgGlyphStyle">
    <summary>
      <para>This object supplies the values for context-fill, context-stroke, and context-value that are used when rendering SVG glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1svgglyphstyle" /></para>
    </summary>
  </comment>
  <comment id="IDWriteGlyphRunAnalysis::CreateAlphaTexture">
    <summary>
      <para>Creates an alpha texture of the specified type for glyphs within a specified bounding rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwriteglyphrunanalysis-createalphatexture" /></para>
      <param name="textureType">A value that specifies the type of texture requested. This can be <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_texture_type">DWRITE_TEXTURE_BILEVEL_1x1</a> or <b>DWRITE_TEXTURE_CLEARTYPE_3x1</b>. If a bi-level texture is requested, the
     texture contains only bi-level glyphs. Otherwise, the texture contains only antialiased glyphs.</param>
      <param name="textureBounds">The bounding rectangle of the texture, which can be different than
     the bounding rectangle returned by <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwriteglyphrunanalysis-getalphatexturebounds">GetAlphaTextureBounds</a>.</param>
      <param name="alphaValues">When this method returns, contains  the array of alpha values from the texture. The buffer allocated for this array must be at least the size of <i>bufferSize</i>.</param>
      <param name="bufferSize">The size of the <i>alphaValues</i> array, in bytes. The minimum size depends on the dimensions of the
     rectangle and the type of texture requested.</param>
    </summary>
  </comment>
  <comment id="D2D1MakeRotateMatrix">
    <summary>
      <para>Creates a rotation transformation that rotates by the specified angle about the specified point.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-d2d1makerotatematrix" /></para>
      <param name="angle">The clockwise rotation angle, in degrees.</param>
      <param name="center">The point about which to rotate.</param>
      <param name="matrix">When this method returns, contains the new rotation transformation. You must allocate storage for this parameter.</param>
    </summary>
  </comment>
  <comment id="D2D1_GAUSSIANBLUR_PROP">
    <summary>
      <para>Identifiers for properties of the Gaussian blur effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_gaussianblur_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_GAUSSIANBLUR_PROP::D2D1_GAUSSIANBLUR_PROP_STANDARD_DEVIATION">
    <summary>The amount of blur to be applied to the image. You can compute the blur radius of the kernel by multiplying the standard deviation by 3.
            The units of both the standard deviation and blur radius are DIPs. A value of zero DIPs disables this effect entirely.
            

The type is FLOAT.

The default value is 3.0f.</summary>
  </comment>
  <comment id="D2D1_GAUSSIANBLUR_PROP::D2D1_GAUSSIANBLUR_PROP_OPTIMIZATION">
    <summary>The optimization mode.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_gaussianblur_optimization">D2D1_GAUSSIANBLUR_OPTIMIZATION</a>.

The default value is D2D1_GAUSSIANBLUR_OPTIMIZATION_BALANCED.</summary>
  </comment>
  <comment id="D2D1_GAUSSIANBLUR_PROP::D2D1_GAUSSIANBLUR_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_gaussianblur_optimization">D2D1_GAUSSIANBLUR_OPTIMIZATION</a>.

The default value is D2D1_BORDER_MODE_SOFT.</summary>
  </comment>
  <comment id="D2D1_COLORMATRIX_ALPHA_MODE">
    <summary>
      <para>The alpha mode of the output of the Color matrix effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_colormatrix_alpha_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COLORMATRIX_ALPHA_MODE::D2D1_COLORMATRIX_ALPHA_MODE_PREMULTIPLIED">
    <summary>The effect un-premultiplies the input, applies the color matrix, and premultiplies the output.</summary>
  </comment>
  <comment id="D2D1_COLORMATRIX_ALPHA_MODE::D2D1_COLORMATRIX_ALPHA_MODE_STRAIGHT">
    <summary>The effect applies the color matrix directly to the input, and doesn't premultiply the output.</summary>
  </comment>
  <comment id="ID2D1DeviceContext::SetUnitMode">
    <summary>
      <para>Sets what units will be used to interpret values passed into the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-setunitmode" /></para>
      <param name="unitMode">An enumeration defining how passed-in units will be interpreted by the device context.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataBlockWriter::SetWriterByIndex">
    <summary>
      <para>Replaces the metadata writer at the specified index location.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockwriter-setwriterbyindex" /></para>
      <param name="nIndex">The index position at which to place the metadata writer. This index is zero-based.</param>
      <param name="iMetadataWriter">A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/nn-wincodecsdk-iwicmetadatawriter">IWICMetadataWriter</a>.</param>
    </summary>
  </comment>
  <comment id="D2D1_SVG_PAINT_TYPE">
    <summary>
      <para>Specifies the paint type for an SVG fill or stroke.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_paint_type" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_PAINT_TYPE::D2D1_SVG_PAINT_TYPE_NONE">
    <summary>The fill or stroke is not rendered.</summary>
  </comment>
  <comment id="D2D1_SVG_PAINT_TYPE::D2D1_SVG_PAINT_TYPE_COLOR">
    <summary>A solid color is rendered.</summary>
  </comment>
  <comment id="D2D1_SVG_PAINT_TYPE::D2D1_SVG_PAINT_TYPE_CURRENT_COLOR">
    <summary>The current color is rendered.</summary>
  </comment>
  <comment id="D2D1_SVG_PAINT_TYPE::D2D1_SVG_PAINT_TYPE_URI">
    <summary>A paint server, defined by another element in the SVG document, is used.</summary>
  </comment>
  <comment id="D2D1_SVG_PAINT_TYPE::D2D1_SVG_PAINT_TYPE_URI_NONE">
    <summary>A paint server, defined by another element in the SVG document, is used. If the paint server reference is invalid, fall back to D2D1_SVG_PAINT_TYPE_NONE.</summary>
  </comment>
  <comment id="D2D1_SVG_PAINT_TYPE::D2D1_SVG_PAINT_TYPE_URI_COLOR">
    <summary>A paint server, defined by another element in the SVG document, is used. If the paint server reference is invalid, fall back to D2D1_SVG_PAINT_TYPE_COLOR.</summary>
  </comment>
  <comment id="D2D1_SVG_PAINT_TYPE::D2D1_SVG_PAINT_TYPE_URI_CURRENT_COLOR">
    <summary>A paint server, defined by another element in the SVG document, is used. If the paint server reference is invalid, fall back to D2D1_SVG_PAINT_TYPE_CURRENT_COLOR.</summary>
  </comment>
  <comment id="ID2D1DrawInfo::SetVertexShaderConstantBuffer">
    <summary>
      <para>Sets the constant buffer for this transform's vertex shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1drawinfo-setvertexshaderconstantbuffer" /></para>
      <param name="buffer">The data applied to the constant buffer</param>
      <param name="bufferCount">The number of bytes of data in the constant buffer.</param>
    </summary>
  </comment>
  <comment id="IDWriteRemoteFontFileLoader">
    <summary>
      <para>Represents a font file loader that can access remote (i.e., downloadable) fonts.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwriteremotefontfileloader" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Device3::CreateDeviceContext">
    <summary>
      <para>Creates a new ID2D1DeviceContext3 from this Direct2D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device3-createdevicecontext" /></para>
      <param name="options">The options to be applied to the created device context.</param>
      <param name="deviceContext3">When this method returns, contains a pointer to the new device context.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFileEnumerator::GetCurrentFontFile">
    <summary>
      <para>Gets a reference to the current font file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfileenumerator-getcurrentfontfile" /></para>
      <param name="fontFile">When this method returns, the address of a pointer to the newly created <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefontfile">IDWriteFontFile</a>  object.</param>
    </summary>
  </comment>
  <comment id="D2D1_INK_POINT">
    <summary>
      <para>Represents a point, radius pair that makes up part of a D2D1_INK_BEZIER_SEGMENT.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ns-d2d1_3-d2d1_ink_point" /></para>
    </summary>
  </comment>
  <comment id="D2D1_INK_POINT::x">
    <summary>The x-coordinate of the point.</summary>
  </comment>
  <comment id="D2D1_INK_POINT::y">
    <summary>The y-coordinate of the point.</summary>
  </comment>
  <comment id="D2D1_INK_POINT::radius">
    <summary>The radius of this point. Corresponds to the width of the ink stroke at this point in the stroke.</summary>
  </comment>
  <comment id="WICGifCommentExtensionProperties">
    <summary>
      <para>Specifies the comment extension metadata properties for a Graphics Interchange Format (GIF) image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicgifcommentextensionproperties" /></para>
    </summary>
  </comment>
  <comment id="WICGifCommentExtensionProperties::WICGifCommentExtensionText">
    <summary>[VT_LPSTR] Indicates the comment text.</summary>
  </comment>
  <comment id="ID2D1Factory7">
    <summary>
      <para>Creates Direct2D resources. This interface performs all the same functions as the ID2D1Factory6 interface, plus it enables the creation of ID2D1Device6 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1factory7" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::SaveDrawingState">
    <summary>
      <para>Saves the current drawing state to the specified ID2D1DrawingStateBlock.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-savedrawingstate" /></para>
      <param name="drawingStateBlock">When this method returns, contains the current drawing state of the render target. This parameter must be initialized before passing it to the method.</param>
    </summary>
  </comment>
  <comment id="IDWriteFont1::GetMetrics">
    <summary>
      <para>Obtains design units and common metrics for the font face. These metrics are applicable to all the glyphs within a font face and are used by applications for layout calculations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefont1-getmetrics" /></para>
      <param name="fontMetrics"> A filled  <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ns-dwrite_1-dwrite_font_metrics1">DWRITE_FONT_METRICS1</a> structure that has font metrics for the current font face. The metrics returned by this method are in font design units.</param>
    </summary>
  </comment>
  <comment id="IDWriteLocalFontFileLoader::GetFilePathFromKey">
    <summary>
      <para>Obtains the absolute font file path from the font file reference key.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritelocalfontfileloader-getfilepathfromkey" /></para>
      <param name="fontFileReferenceKey">The font file reference key that uniquely identifies the local font file
    within the scope of the font loader being used.</param>
      <param name="fontFileReferenceKeySize">The size of font file reference key in bytes.</param>
      <param name="filePath">The character array that receives the local file path.</param>
      <param name="filePathSize">The length of the file path character array.</param>
    </summary>
  </comment>
  <comment id="D2D1_LINEARTRANSFER_PROP">
    <summary>
      <para>Identifiers for properties of the Linear transfer effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_lineartransfer_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_RED_Y_INTERCEPT">
    <summary>The Y-intercept of the linear function for the Red channel. 
          

The type is FLOAT.

The default is 0.0f.</summary>
  </comment>
  <comment id="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_RED_SLOPE">
    <summary>The slope of the linear function for the Red channel.
          

The type is FLOAT.

The default is 1.0f.</summary>
  </comment>
  <comment id="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_RED_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Red channel. 
          If you set this to FALSE the effect applies the RedLinearTransfer function to the Red channel. 
          

The type is BOOL.

The default is FALSE.</summary>
  </comment>
  <comment id="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_GREEN_Y_INTERCEPT">
    <summary>The Y-intercept of the linear function for the Green channel. 
          

The type is FLOAT.

The default is 0.0f.</summary>
  </comment>
  <comment id="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_GREEN_SLOPE">
    <summary>The slope of the linear function for the Green channel.
          

The type is FLOAT.

The default is 1.0f.</summary>
  </comment>
  <comment id="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_GREEN_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Green channel. 
          If you set this to FALSE the effect applies the GreenLinearTransfer function to the Green channel. 
          

The type is BOOL.

The default is FALSE.</summary>
  </comment>
  <comment id="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_BLUE_Y_INTERCEPT">
    <summary>The Y-intercept of the linear function for the Blue channel. 
          

The type is FLOAT.

The default is 0.0f.</summary>
  </comment>
  <comment id="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_BLUE_SLOPE">
    <summary>The slope of the linear function for the Blue channel.
          

The type is FLOAT.

The default is 1.0f.</summary>
  </comment>
  <comment id="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_BLUE_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Blue channel. 
          If you set this to FALSE the effect applies the BlueLinearTransfer function to the Blue channel. 
          

The type is BOOL.

The default is FALSE.</summary>
  </comment>
  <comment id="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_ALPHA_Y_INTERCEPT">
    <summary>The Y-intercept of the linear function for the Alpha channel. 
          

The type is FLOAT.

The default is 0.0f.</summary>
  </comment>
  <comment id="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_ALPHA_SLOPE">
    <summary>The slope of the linear function for the Alpha channel.
          

The type is FLOAT.

The default is 0.0f.</summary>
  </comment>
  <comment id="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_ALPHA_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Alpha channel. 
          If you set this to FALSE the effect applies the AlphaLinearTransfer function to the Alpha channel. 
          

The type is BOOL.

The default is FALSE.</summary>
  </comment>
  <comment id="D2D1_LINEARTRANSFER_PROP::D2D1_LINEARTRANSFER_PROP_CLAMP_OUTPUT">
    <summary>Whether the effect clamps color values to between 0 and 1 before the effect passes the values to the next effect in the graph. 
          The effect clamps the values before it premultiplies the alpha .
          

If you set this to TRUE the effect will clamp the values. If you set this to FALSE, the effect will not clamp the color values, but other effects and 
          the output surface may clamp the values if they are not of high enough precision.

The type is BOOL.

The default is FALSE.</summary>
  </comment>
  <comment id="IDWriteFactory6">
    <summary>
      <para>This interface represents a factory object from which all DirectWrite objects are created. **IDWriteFactory6** adds new facilities for working with fonts and font resources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefactory6" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace1::IsMonospacedFont">
    <summary>
      <para>Determines whether the font of a text range is monospaced, that is, the font characters are the same fixed-pitch width.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefontface1-ismonospacedfont" /></para>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateBitmapFromHBITMAP">
    <summary>
      <para>Creates an IWICBitmap from a bitmap handle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromhbitmap" /></para>
      <param name="hBitmap">A bitmap handle to create the bitmap from.</param>
      <param name="hPalette">A palette handle used to create the bitmap.</param>
      <param name="options">The alpha channel options to create the bitmap.</param>
      <param name="iBitmap">A pointer that receives a pointer to the new bitmap.</param>
    </summary>
  </comment>
  <comment id="IWICPixelFormatInfo::GetBitsPerPixel">
    <summary>
      <para>Gets the bits per pixel (BPP) of the pixel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpixelformatinfo-getbitsperpixel" /></para>
      <param name="puiBitsPerPixel">Pointer that receives the BPP of the pixel format.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreatePalette">
    <summary>
      <para>Creates a new instance of the IWICPalette class.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createpalette" /></para>
      <param name="iPalette">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a>.</param>
    </summary>
  </comment>
  <comment id="D2D1_BLEND_OPERATION">
    <summary>
      <para>Specifies the blend operation on two color sources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_blend_operation" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BLEND_OPERATION::D2D1_BLEND_OPERATION_ADD">
    <summary>Add source 1 and source 2.</summary>
  </comment>
  <comment id="D2D1_BLEND_OPERATION::D2D1_BLEND_OPERATION_SUBTRACT">
    <summary>Subtract source 1 from source 2.</summary>
  </comment>
  <comment id="D2D1_BLEND_OPERATION::D2D1_BLEND_OPERATION_REV_SUBTRACT">
    <summary>Subtract source 2 from source 1.</summary>
  </comment>
  <comment id="D2D1_BLEND_OPERATION::D2D1_BLEND_OPERATION_MIN">
    <summary>Find the minimum of source 1 and source 2.</summary>
  </comment>
  <comment id="D2D1_BLEND_OPERATION::D2D1_BLEND_OPERATION_MAX">
    <summary>Find the maximum of source 1 and source 2.</summary>
  </comment>
  <comment id="D2D1_BLEND_OPERATION::D2D1_BLEND_OPERATION_FORCE_DWORD">
    <summary>A value guaranteed to be a DWORD.</summary>
  </comment>
  <comment id="IWICBitmapEncoder::SetPalette">
    <summary>
      <para>Sets the global palette for the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-setpalette" /></para>
      <param name="iPalette">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a> to use as the global palette.</param>
    </summary>
  </comment>
  <comment id="ID2D1TransformGraph::GetInputCount">
    <summary>
      <para>Returns the number of inputs to the transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-getinputcount" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFactory::CreateNumberSubstitution">
    <summary>
      <para>Creates a number substitution object using a locale name, substitution method, and an indicator whether to ignore user overrides (use NLS defaults for the given culture instead).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-createnumbersubstitution" /></para>
      <param name="substitutionMethod">A value that specifies how to apply number substitution on digits and related punctuation.</param>
      <param name="localeName">The name of the locale to be used in the <i>numberSubstitution</i> object.</param>
      <param name="ignoreUserOverride">A Boolean flag that indicates whether to ignore user overrides.</param>
      <param name="numberSubstitution">When this method returns, contains an address to  a pointer to the number substitution object created by this method.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetClusterMetrics">
    <summary>
      <para>Retrieves logical properties and measurements of each glyph cluster.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getclustermetrics" /></para>
      <param name="clusterMetrics">When this method returns, contains metrics, such as line-break or total advance width, for a glyph cluster.</param>
      <param name="maxClusterCount">The maximum size of the <i>clusterMetrics</i> array.</param>
      <param name="actualClusterCount">When this method returns, contains the actual size of the <i>clusterMetrics</i> array that is needed.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat1::GetVerticalGlyphOrientation">
    <summary>
      <para>Get the preferred orientation of glyphs when using a vertical reading direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextformat1-getverticalglyphorientation" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace::GetMetrics">
    <summary>
      <para>Obtains design units and common metrics for the font face. These metrics are applicable to all the glyphs within a font face and are used by applications for layout calculations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-getmetrics" /></para>
      <param name="fontFaceMetrics">When this method returns, a <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ns-dwrite-dwrite_font_metrics">DWRITE_FONT_METRICS</a> structure that holds metrics (such as ascent, descent, or cap height) for the current font face element.
     The metrics returned by this function are in font design units.</param>
    </summary>
  </comment>
  <comment id="WICJpegTransferMatrix">
    <summary>
      <para>Specifies conversion matrix from Y'Cb'Cr' to R'G'B'.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicjpegtransfermatrix" /></para>
    </summary>
  </comment>
  <comment id="WICJpegTransferMatrix::WICJpegTransferMatrixIdentity">
    <summary>Specifies the identity transfer matrix.</summary>
  </comment>
  <comment id="WICJpegTransferMatrix::WICJpegTransferMatrixBT601">
    <summary>Specifies the BT601 transfer matrix.</summary>
  </comment>
  <comment id="WICJpegTransferMatrix::WICJpegTransferMatrix_FORCE_DWORD">
    <summary>Forces this enumeration to compile to 32 bits in size. Without this value, some compilers would allow this enumeration to compile to a size other than 32 bits. This value is not used.</summary>
  </comment>
  <comment id="IDWriteFont::GetStyle">
    <summary>
      <para>Gets the style, or slope, of the specified font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefont-getstyle" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DIRECTIONALBLUR_PROP">
    <summary>
      <para>Identifiers for properties of the Directional blur effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_directionalblur_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DIRECTIONALBLUR_PROP::D2D1_DIRECTIONALBLUR_PROP_STANDARD_DEVIATION">
    <summary>The amount of blur to be applied to the image. You can compute the blur radius of the kernel by multiplying the standard deviation by 3. 
          The units of both the standard deviation and blur radius are DIPs. A value of 0 DIPs disables this effect. 
          

The type is FLOAT.

The default value is 3.0f.</summary>
  </comment>
  <comment id="D2D1_DIRECTIONALBLUR_PROP::D2D1_DIRECTIONALBLUR_PROP_ANGLE">
    <summary>The angle of the blur relative to the x-axis, in the counterclockwise direction. The units are specified in degrees.
          

The blur kernel is first generated using the same process as for the Gaussian blur effect. The kernel values are then transformed according to the blur angle.

The type is FLOAT.

The default value is 0.0f.</summary>
  </comment>
  <comment id="D2D1_DIRECTIONALBLUR_PROP::D2D1_DIRECTIONALBLUR_PROP_OPTIMIZATION">
    <summary>The optimization mode. See Optimization modes for more info.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_directionalblur_optimization">D2D1_DIRECTIONALBLUR_OPTIMIZATION</a>.

The default value is D2D1_DIRECTIONALBLUR_OPTIMIZATION_BALANCED.</summary>
  </comment>
  <comment id="D2D1_DIRECTIONALBLUR_PROP::D2D1_DIRECTIONALBLUR_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard. See Border modes for more info.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_border_mode">D2D1_BORDER_MODE</a>.

The default value is D2D1_BORDER_MODE_SOFT.</summary>
  </comment>
  <comment id="IWICMetadataWriter::SetValueByIndex">
    <summary>
      <para>Sets the metadata item to the specified index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatawriter-setvaluebyindex" /></para>
      <param name="nIndex">The index to place the metadata item.</param>
      <param name="pvarSchema">Pointer to the schema property of the metadata item.</param>
      <param name="pvarId">Pointer to the id property of the metadata item.</param>
      <param name="pvarValue">Pointer to the metadata value to set at the given index.</param>
    </summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_ALPHA_MODE">
    <summary>
      <para>Specifies the alpha mode of the output of the Bitmap source effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_bitmapsource_alpha_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_ALPHA_MODE::D2D1_BITMAPSOURCE_ALPHA_MODE_PREMULTIPLIED">
    <summary>The effect output uses premultiplied alpha.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_ALPHA_MODE::D2D1_BITMAPSOURCE_ALPHA_MODE_STRAIGHT">
    <summary>The effect output uses straight alpha.</summary>
  </comment>
  <comment id="IDWriteColorGlyphRunEnumerator">
    <summary>
      <para>This interface allows the application to enumerate through the color glyph runs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nn-dwrite_2-idwritecolorglyphrunenumerator" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalysisSource::GetLocaleName">
    <summary>
      <para>Gets the locale name on the range affected by the text analysis.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalysissource-getlocalename" /></para>
      <param name="textPosition">The text position to examine.</param>
      <param name="textLength">Contains the length of the text being affected by the text analysis up to the next differing locale.</param>
      <param name="localeName">Contains an address of a  pointer to an array of characters which receives the locale name from the text affected by the text analysis. The array of characters is null-terminated.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFaceReference::EnqueueFileFragmentDownloadRequest">
    <summary>
      <para>Adds a request to the font download queue (IDWriteFontDownloadQueue).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfacereference-enqueuefilefragmentdownloadrequest" /></para>
      <param name="fileOffset">Offset of the fragment from the beginning of the font file.</param>
      <param name="fragmentSize">Size of the fragment in bytes.</param>
    </summary>
  </comment>
  <comment id="D2D1_HIGHLIGHTSANDSHADOWS_PROP">
    <summary>
      <para>Identifiers for properties of the Highlights and Shadows effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_highlightsandshadows_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_HIGHLIGHTSANDSHADOWS_PROP::D2D1_HIGHLIGHTSANDSHADOWS_PROP_HIGHLIGHTS">
    <summary>The D2D1_HIGHLIGHTSANDSHADOWS_PROP_HIGHLIGHTS property is a float value indicating how much to increase or decrease highlights.  The allowed range is -1.0 to 1.0. The default value is 0.0.</summary>
  </comment>
  <comment id="D2D1_HIGHLIGHTSANDSHADOWS_PROP::D2D1_HIGHLIGHTSANDSHADOWS_PROP_SHADOWS">
    <summary>The D2D1_HIGHLIGHTSANDSHADOWS_PROP_SHADOWS property is a float value indicating how much to increase or decrease shadows.  The allowed range is -1.0 to 1.0. The default value is 0.0.</summary>
  </comment>
  <comment id="D2D1_HIGHLIGHTSANDSHADOWS_PROP::D2D1_HIGHLIGHTSANDSHADOWS_PROP_CLARITY">
    <summary>The D2D1_HIGHLIGHTSANDSHADOWS_PROP_CLARITY property is a float value indicating how much to increase or decrease clarity.  The allowed range is -1.0 to 1.0. The default value is 0.0.</summary>
  </comment>
  <comment id="D2D1_HIGHLIGHTSANDSHADOWS_PROP::D2D1_HIGHLIGHTSANDSHADOWS_PROP_INPUT_GAMMA">
    <summary>The D2D1_HIGHLIGHTSANDSHADOWS_PROP_INPUT_GAMMA property is a <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_2/ne-d2d1effects_2-d2d1_highlightsandshadows_input_gamma">D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA</a> enumeration value
          indicating the gamma of the input image.  The Highlights and Shadows effect works in linear gamma space, so if the input image is know to be linear, the D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA_LINEAR value should be used to prevent sRGB to linear conversions from being performed.</summary>
  </comment>
  <comment id="D2D1_HIGHLIGHTSANDSHADOWS_PROP::D2D1_HIGHLIGHTSANDSHADOWS_PROP_MASK_BLUR_RADIUS">
    <summary>The D2D1_HIGHLIGHTSANDSHADOWS_PROP_MASK_BLUR_RADIUS property is a float value controlling the size of the region used around a pixel to classify the pixel as highlight or shadow. Lower values result in more localized adjustments. 
          The allowed range is 0.0 to 10.0.  The default value is 1.25.</summary>
  </comment>
  <comment id="ID2D1SvgPathData::UpdateSegmentData">
    <summary>
      <para>Updates the segment data array. Existing segment data not updated by this method are preserved. The array is resized larger if necessary to accomodate the new segment data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-updatesegmentdata" /></para>
      <param name="data">The data array.</param>
      <param name="dataCount">The number of data to update.</param>
      <param name="startIndex">The index at which to begin updating segment data. Must be less than or equal to the size of the segment data array.</param>
    </summary>
  </comment>
  <comment id="IDWriteBitmapRenderTarget::GetMemoryDC">
    <summary>
      <para>Gets a handle to the memory device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritebitmaprendertarget-getmemorydc" /></para>
    </summary>
  </comment>
  <comment id="IWICStreamProvider::RefreshStream">
    <summary>
      <para>Informs the component that the content of the stream it's holding onto may have changed. The component should respond by dirtying any cached information from the stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicstreamprovider-refreshstream" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget">
    <summary>
      <para>Represents an object that can receive drawing commands. Interfaces that inherit from ID2D1RenderTarget render the drawing commands they receive in different ways.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1rendertarget" /></para>
    </summary>
  </comment>
  <comment id="ID2D1StrokeStyle::GetEndCap">
    <summary>
      <para>Retrieves the type of shape used at the end of a stroke.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getendcap" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFactory::CreateCustomFontCollection">
    <summary>
      <para>Creates a font collection using a custom font collection loader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-createcustomfontcollection" /></para>
      <param name="collectionLoader">An application-defined font collection loader, which must have been previously
     registered using <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritefactory-registerfontcollectionloader">RegisterFontCollectionLoader</a>.</param>
      <param name="collectionKey">The key used by the loader to identify a collection of font files.  The buffer allocated for this key should at least be the size of <i>collectionKeySize</i>.</param>
      <param name="collectionKeySize">The size, in bytes, of the collection key.</param>
      <param name="fontCollection">Contains  an address of a pointer to the system font collection object if the method succeeds, or <b>NULL</b> in case of failure.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device6::CreateDeviceContext">
    <summary>
      <para>Creates a new device context with no initially assigned target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device6-createdevicecontext" /></para>
      <param name="options">Options for creating the device context.</param>
      <param name="deviceContext6">The created device context.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::GetRenderingControls">
    <summary>
      <para>Gets the rendering controls that have been applied to the context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-getrenderingcontrols" /></para>
      <param name="renderingControls">When this method returns, contains a pointer to the rendering controls for this context.</param>
    </summary>
  </comment>
  <comment id="IWICColorContext::InitializeFromMemory">
    <summary>
      <para>Initializes the color context from a memory block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolorcontext-initializefrommemory" /></para>
      <param name="pbBuffer">The buffer used to initialize the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a>.</param>
      <param name="cbBufferSize">The size of the <i>pbBuffer</i> buffer.</param>
    </summary>
  </comment>
  <comment id="D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION">
    <summary>
      <para>Specifies the pixel snapping policy when rendering color bitmap glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_color_bitmap_glyph_snap_option" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION::D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION_DEFAULT">
    <summary>Color bitmap glyph positions are snapped to the nearest pixel if the bitmap
          resolution matches that of the device context.</summary>
  </comment>
  <comment id="D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION::D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION_DISABLE">
    <summary>Color bitmap glyph positions are not snapped.</summary>
  </comment>
  <comment id="IWICBitmapEncoder::Commit">
    <summary>
      <para>Commits all changes for the image and closes the stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-commit" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::GetFontStyle">
    <summary>
      <para>Gets the font style of the text.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getfontstyle" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontList1::GetFontLocality">
    <summary>
      <para>Gets the current location of a font given its zero-based index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontlist1-getfontlocality" /></para>
      <param name="listIndex">Zero-based index of the font in the font list.</param>
    </summary>
  </comment>
  <comment id="IDWriteGdiInterop::ConvertFontToLOGFONT">
    <summary>
      <para>Initializes a LOGFONT structure based on the GDI-compatible properties of the specified font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritegdiinterop-convertfonttologfont" /></para>
      <param name="font">An <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefont">IDWriteFont</a> object to be converted into a GDI-compatible <b>LOGFONT</b> structure.</param>
      <param name="logFont">When this method returns, contains a structure that receives a GDI-compatible font description.</param>
      <param name="isSystemFont">When this method returns, contains <b>TRUE</b> if the specified font object is part of the system font collection; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::SetWhitePointRGB">
    <summary>
      <para>Sets the white point RGB values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setwhitepointrgb" /></para>
      <param name="red">The red white point value.</param>
      <param name="green">The green white point value.</param>
      <param name="blue">The blue white point value.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFileLoader::CreateStreamFromKey">
    <summary>
      <para>Creates a font file stream object that encapsulates an open file resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfileloader-createstreamfromkey" /></para>
      <param name="fontFileReferenceKey">A pointer to a font file reference key that uniquely identifies the font file resource
     within the scope of the font loader being used. The buffer allocated for this key must at least be the size, in bytes, specified by <i> fontFileReferenceKeySize</i>.</param>
      <param name="fontFileReferenceKeySize">The size of font file reference key, in bytes.</param>
      <param name="fontFileStream">When this method returns, contains the address of a pointer to the newly created <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefontfilestream">IDWriteFontFileStream</a> object.</param>
    </summary>
  </comment>
  <comment id="ID2D1Mesh">
    <summary>
      <para>Represents a set of vertices that form a list of triangles.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1mesh" /></para>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::IsBufferPrecisionSupported">
    <summary>
      <para>Indicates whether the buffer precision is supported by the underlying Direct2D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-isbufferprecisionsupported" /></para>
      <param name="bufferPrecision">The buffer precision to check.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer::GetGdiCompatibleGlyphPlacements">
    <summary>
      <para>Place glyphs output from the GetGlyphs method according to the font and the writing system's rendering rules.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalyzer-getgdicompatibleglyphplacements" /></para>
      <param name="textString">An array of characters containing the original string from which the glyphs came.</param>
      <param name="clusterMap">A pointer to the mapping from character ranges to glyph 
     ranges. This is returned by <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-getglyphs">GetGlyphs</a>.</param>
      <param name="textProps">A pointer to an array of structures that contains  shaping properties for each character. This structure is returned by 
     <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-getglyphs">GetGlyphs</a>.</param>
      <param name="textLength">The text length of <i>textString</i>.</param>
      <param name="glyphIndices">An array of glyph indices returned by <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-getglyphs">GetGlyphs</a>.</param>
      <param name="glyphProps">A pointer to an array of structures that contain  shaping properties for each glyph returned by <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-getglyphs">GetGlyphs</a>.</param>
      <param name="glyphCount">The number of glyphs returned from <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-getglyphs">GetGlyphs</a>.</param>
      <param name="fontFace">A pointer to the font face that is the source for the output glyphs.</param>
      <param name="fontEmSize">The logical font size in DIPs.</param>
      <param name="pixelsPerDip">The number of physical pixels per DIP.</param>
      <param name="transform">An optional transform applied to the glyphs and their positions. This transform is applied after the scaling specified by the font size and <i>pixelsPerDip</i>.</param>
      <param name="useGdiNatural">When set to <b>FALSE</b>, the metrics are the same as the metrics of GDI aliased text.  When set to <b>TRUE</b>, the metrics are the same as the metrics of text measured by GDI using a font created with <b>CLEARTYPE_NATURAL_QUALITY</b>.</param>
      <param name="isSideways">A Boolean flag set to <b>TRUE</b> if the text is intended to be
     drawn vertically.</param>
      <param name="isRightToLeft">A Boolean flag set to <b>TRUE</b> for right-to-left text.</param>
      <param name="scriptAnalysis">A pointer to a Script analysis result from an<a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-analyzescript">AnalyzeScript</a> call.</param>
      <param name="localeName">An array of characters containing the locale to use when selecting glyphs.
     For example, the same character may map to different glyphs for ja-jp versus zh-chs.
     If this is <b>NULL</b>, then the default mapping based on the script is used.</param>
      <param name="features">An array of pointers to the sets of typographic 
     features to use in each feature range.</param>
      <param name="featureRangeLengths">The length of each feature range, in characters.  
     The sum of all lengths should be equal to <i>textLength</i>.</param>
      <param name="featureRanges">The number of feature ranges.</param>
      <param name="glyphAdvances">When this method returns, contains the advance width of each glyph.</param>
      <param name="glyphOffsets">When this method returns, contains the offset of the origin of each glyph.</param>
    </summary>
  </comment>
  <comment id="ID2D1SimplifiedGeometrySink::AddBeziers">
    <summary>
      <para>Creates a sequence of cubic Bezier curves and adds them to the geometry sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1simplifiedgeometrysink-addbeziers" /></para>
      <param name="beziers">A pointer to an array of Bezier segments that describes the Bezier curves to create. A curve is drawn from the geometry sink's current point (the end point of the last segment drawn or the location specified by <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1simplifiedgeometrysink-beginfigure">BeginFigure</a>) to the end point of the first Bezier segment in the array. if the array contains additional Bezier segments, each subsequent Bezier segment uses the end point of the preceding Bezier segment as its start point.</param>
      <param name="beziersCount">The number of Bezier segments in the <i>beziers</i> array.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::GetFontSize">
    <summary>
      <para>Gets the font size in DIP unites.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getfontsize" /></para>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateFormatConverter">
    <summary>
      <para>Creates a new instance of the IWICFormatConverter class.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createformatconverter" /></para>
      <param name="iFormatConverter">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicformatconverter">IWICFormatConverter</a>.</param>
    </summary>
  </comment>
  <comment id="IWICEnumMetadataItem">
    <summary>
      <para>Exposes methods that provide enumeration services for individual metadata items.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicenummetadataitem" /></para>
    </summary>
  </comment>
  <comment id="D2D1_TEXT_ANTIALIAS_MODE">
    <summary>
      <para>Describes the antialiasing mode used for drawing text.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_text_antialias_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_TEXT_ANTIALIAS_MODE::D2D1_TEXT_ANTIALIAS_MODE_DEFAULT">
    <summary>Use the system default. See Remarks.</summary>
  </comment>
  <comment id="D2D1_TEXT_ANTIALIAS_MODE::D2D1_TEXT_ANTIALIAS_MODE_CLEARTYPE">
    <summary>Use ClearType antialiasing.</summary>
  </comment>
  <comment id="D2D1_TEXT_ANTIALIAS_MODE::D2D1_TEXT_ANTIALIAS_MODE_GRAYSCALE">
    <summary>Use grayscale antialiasing.</summary>
  </comment>
  <comment id="D2D1_TEXT_ANTIALIAS_MODE::D2D1_TEXT_ANTIALIAS_MODE_ALIASED">
    <summary>Do not use antialiasing.</summary>
  </comment>
  <comment id="IDWriteFontCollection::FindFamilyName">
    <summary>
      <para>Finds the font family with the specified family name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontcollection-findfamilyname" /></para>
      <param name="familyName">An array of characters, which is null-terminated, containing the name of the font family. The name is not case-sensitive but must otherwise exactly match a family name in the collection.</param>
      <param name="index">When this method returns, contains the zero-based index of the matching font family if the family name was found; otherwise, <b>UINT_MAX</b>.</param>
      <param name="exists">When this method returns, <b>TRUE</b> if the family name exists; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapFrameDecode::GetThumbnail">
    <summary>
      <para>Retrieves a small preview of the frame, if supported by the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframedecode-getthumbnail" /></para>
      <param name="iThumbnail">A pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> of the thumbnail.</param>
    </summary>
  </comment>
  <comment id="D2D1_RESOURCE_TEXTURE_PROPERTIES">
    <summary>
      <para>Defines a resource texture when the original resource texture is created.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_resource_texture_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_RESOURCE_TEXTURE_PROPERTIES::extents">
    <summary>The extents of the resource table in each dimension.</summary>
  </comment>
  <comment id="D2D1_RESOURCE_TEXTURE_PROPERTIES::dimensions">
    <summary>The number of dimensions in the resource texture. This must be a number from 1 to 3.</summary>
  </comment>
  <comment id="D2D1_RESOURCE_TEXTURE_PROPERTIES::bufferPrecision">
    <summary>The precision of the resource texture to create.</summary>
  </comment>
  <comment id="D2D1_RESOURCE_TEXTURE_PROPERTIES::channelDepth">
    <summary>The number of channels in the resource texture.</summary>
  </comment>
  <comment id="D2D1_RESOURCE_TEXTURE_PROPERTIES::filter">
    <summary>The filtering mode to use on the texture.</summary>
  </comment>
  <comment id="D2D1_RESOURCE_TEXTURE_PROPERTIES::extendModes">
    <summary>Specifies how pixel values beyond the extent of the texture will be sampled, in every dimension.</summary>
  </comment>
  <comment id="IDWriteTextAnalyzer1::GetTextComplexity">
    <summary>
      <para>Determines the complexity of text, and whether you need to call IDWriteTextAnalyzer::GetGlyphs for full script shaping.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextanalyzer1-gettextcomplexity" /></para>
      <param name="textString">The text to check for complexity. This string
    may be UTF-16, but any supplementary characters will be considered
    complex.</param>
      <param name="textLength">Length of the text to check.</param>
      <param name="fontFace">The font face to read.</param>
      <param name="isTextSimple">If true, the text is simple, and the
    <i>glyphIndices</i> array will already have the nominal glyphs for you.
    Otherwise, you need to call <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-getglyphs">IDWriteTextAnalyzer::GetGlyphs</a> to properly shape complex
    scripts and OpenType features.</param>
      <param name="textLengthRead">The length read of the text run with the
    same complexity, simple or complex. You may call again from that
    point onward.</param>
      <param name="glyphIndices">Optional glyph indices for the text. If the
    function returned that the text was simple, you already have the
    glyphs you need. Otherwise the glyph indices are not meaningful,
    and you need to call <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-getglyphs">IDWriteTextAnalyzer::GetGlyphs</a> for shaping instead.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::GetPrimitiveBlend">
    <summary>
      <para>Returns the currently set primitive blend used by the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-getprimitiveblend" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer1::GetJustificationOpportunities">
    <summary>
      <para>Retrieves justification opportunity information for each of the glyphs given the text and shaping glyph properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextanalyzer1-getjustificationopportunities" /></para>
      <param name="fontFace">Font face that was used for shaping. This is
    mainly important for returning correct results of the kashida
    width. 

May be NULL.</param>
      <param name="fontEmSize">Font em size used for the glyph run.</param>
      <param name="scriptAnalysis">Script of the text from the itemizer.</param>
      <param name="textLength">Length of the text.</param>
      <param name="glyphCount">Number of glyphs.</param>
      <param name="textString">Characters used to produce the glyphs.</param>
      <param name="clusterMap">Clustermap produced from shaping.</param>
      <param name="glyphProperties">Glyph properties produced from shaping.</param>
      <param name="justificationOpportunities">A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ns-dwrite_1-dwrite_justification_opportunity">DWRITE_JUSTIFICATION_OPPORTUNITY</a> structure that receives info for the
    allowed justification expansion/compression for each glyph.</param>
    </summary>
  </comment>
  <comment id="IWICPalette">
    <summary>
      <para>Exposes methods for accessing and building a color table, primarily for indexed pixel formats.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicpalette" /></para>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext2::CreateLookupTable3D">
    <summary>
      <para>Creates a 3D lookup table for mapping a 3-channel input to a 3-channel output. The table data must be provided in 4-channel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext2-createlookuptable3d" /></para>
      <param name="precision">Precision of the input lookup table data.</param>
      <param name="extents">Number of lookup table elements per dimension (X, Y, Z).</param>
      <param name="data">Buffer holding the lookup table data.</param>
      <param name="dataCount">Size of the lookup table data buffer.</param>
      <param name="strides">An array containing two values.  The first value is the size in bytes from one row (X dimension) of LUT data to the next.  
          The second value is the size in bytes from one LUT data plane (X and Y dimensions) to the next.</param>
      <param name="lookupTable">Receives the new lookup table instance.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::GetNamedWhitePoint">
    <summary>
      <para>Gets the named white point of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getnamedwhitepoint" /></para>
      <param name="whitePoint">A pointer that receives the bitwise combination of the enumeration values.</param>
    </summary>
  </comment>
  <comment id="ID2D1ComputeInfo::SetComputeShader">
    <summary>
      <para>Sets the compute shader to the given shader resource. The resource must be loaded before this call is made.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1computeinfo-setcomputeshader" /></para>
      <param name="shaderId">The GUID of the shader.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapCodecInfo::DoesSupportChromakey">
    <summary>
      <para>Retrieves a value indicating whether the codec supports chromakeys.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportchromakey" /></para>
      <param name="pfSupportChromakey">Receives <b>TRUE</b> if the codec supports chromakeys; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext4::DrawTextLayout">
    <summary>
      <para>Draws a text layout object. If the layout is not subsequently changed, this can be more efficient than DrawText when drawing the same layout repeatedly.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext4-drawtextlayout" /></para>
      <param name="origin">The point, described in device-independent pixels, at which the upper-left corner of the text described by <i>textLayout</i> is drawn.</param>
      <param name="textLayout">The formatted text to draw. Any drawing effects that do not inherit from <a href="https://docs.microsoft.com/windows/desktop/api/d2d1/nn-d2d1-id2d1resource">ID2D1Resource</a> are ignored. If there are drawing effects that inherit from <b>ID2D1Resource</b> that are not brushes, this method fails and the render target is put in an error state.</param>
      <param name="defaultFillBrush">The brush used to paint the text.</param>
      <param name="svgGlyphStyle">The values for context-fill, context-stroke, and context-value that are used when rendering SVG glyphs.</param>
      <param name="colorPaletteIndex">The index used to select a color palette within a color font.</param>
      <param name="options">A value that indicates whether the text should be snapped to pixel boundaries and whether the text should be clipped to the layout rectangle. 
            The default value is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1/ne-d2d1-d2d1_draw_text_options">D2D1_DRAW_TEXT_OPTIONS_NONE</a>, 
            which indicates that text should be snapped to pixel boundaries and it should not be clipped to the layout rectangle.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataReader::GetMetadataHandlerInfo">
    <summary>
      <para>Gets the metadata handler info associated with the reader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareader-getmetadatahandlerinfo" /></para>
      <param name="iHandler">Pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/nn-wincodecsdk-iwicmetadatahandlerinfo">IWICMetadataHandlerInfo</a>.</param>
    </summary>
  </comment>
  <comment id="ID2D1ImageBrush::GetInterpolationMode">
    <summary>
      <para>Gets the interpolation mode of the image brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-getinterpolationmode" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalysisSink::SetBidiLevel">
    <summary>
      <para>Sets a bidirectional level on the range, which is called once per run change (either explicit or resolved implicit).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalysissink-setbidilevel" /></para>
      <param name="textPosition">The starting position from which to report.</param>
      <param name="textLength">The number of UTF16 units of the reported range.</param>
      <param name="explicitLevel">The explicit level from the paragraph reading direction and any embedded control codes RLE/RLO/LRE/LRO/PDF, which is determined before any additional rules.</param>
      <param name="resolvedLevel">The final implicit level considering the
         explicit level and characters' natural directionality, after all
         Bidi rules have been applied.</param>
    </summary>
  </comment>
  <comment id="IWICPalette::IsBlackWhite">
    <summary>
      <para>Retrieves a value that describes whether the palette is black and white.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-isblackwhite" /></para>
      <param name="pfIsBlackWhite">A pointer to a variable  that receives a boolean value that indicates whether the palette is black and white. <b>TRUE</b> indicates that the palette is black and white; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateQueryWriterFromReader">
    <summary>
      <para>Creates a new instance of a query writer based on the given query reader. The query writer will be pre-populated with metadata from the query reader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createquerywriterfromreader" /></para>
      <param name="iQueryReader">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataqueryreader">IWICMetadataQueryReader</a> to create the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicmetadataquerywriter">IWICMetadataQueryWriter</a> from.</param>
      <param name="pguidVendor">The GUID for the preferred metadata writer vendor. Use <b>NULL</b> if no preferred vendor.</param>
      <param name="iQueryWriter">When this method returns, contains a pointer to a new metadata writer.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateBitmapFromSourceRect">
    <summary>
      <para>Creates an IWICBitmap from a specified rectangle of an IWICBitmapSource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapfromsourcerect" /></para>
      <param name="iBitmapSource">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> to create the bitmap from.</param>
      <param name="x">The horizontal coordinate of the upper-left corner of the rectangle.</param>
      <param name="y">The vertical coordinate of the upper-left corner of the rectangle.</param>
      <param name="width">The width of the rectangle and the new bitmap.</param>
      <param name="height">The height of the rectangle and the new bitmap.</param>
      <param name="iBitmap">A pointer that receives a pointer to the new bitmap.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::GetLineSpacing">
    <summary>
      <para>Gets the line spacing adjustment set for a multiline text paragraph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getlinespacing" /></para>
      <param name="lineSpacingMethod">A value that indicates how line height is determined.</param>
      <param name="lineSpacing">When this method returns, contains the line height, or  distance between one baseline to another.</param>
      <param name="baseline">When this method returns, contains the distance from top of line to baseline. A reasonable ratio to <i>lineSpacing</i> is 80 percent.</param>
    </summary>
  </comment>
  <comment id="ID2D1ComputeInfo">
    <summary>
      <para>Enables specification of information for a compute-shader rendering pass.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1computeinfo" /></para>
    </summary>
  </comment>
  <comment id="D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES">
    <summary>
      <para>Properties of a transformed image source.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ns-d2d1_3-d2d1_transformed_image_source_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES::orientation">
    <summary>The orientation at which the image source is drawn.</summary>
  </comment>
  <comment id="D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES::scaleX">
    <summary>The horizontal scale factor at which the image source is drawn.</summary>
  </comment>
  <comment id="D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES::scaleY">
    <summary>The vertical scale factor at which the image source is drawn.</summary>
  </comment>
  <comment id="D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES::interpolationMode">
    <summary>The interpolation mode used when the image source is drawn.  This is ignored if the image source is drawn using the DrawImage method, or using an image brush.</summary>
  </comment>
  <comment id="D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES::options">
    <summary>Image sourc option flags.</summary>
  </comment>
  <comment id="D2D1Vec3Length">
    <summary>
      <para>Returns the length of a 3 dimensional vector.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-d2d1vec3length" /></para>
      <param name="x">The  x value of the vector.</param>
      <param name="y">The  y value of the vector.</param>
      <param name="z">The  z value of the vector.</param>
    </summary>
  </comment>
  <comment id="ID2D1GdiMetafileSink1::ProcessRecord">
    <summary>
      <para>Provides access to metafile records, including their type, data, and flags.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1gdimetafilesink1-processrecord" /></para>
      <param name="recordType">The type of metafile record being processed. Please see <a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-emf/91c257d7-c39d-4a36-9b1f-63e3f73d30ca">MS-EMF</a> and <a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-emfplus/5f92c789-64f2-46b5-9ed4-15a9bb0946c6">MS-EMFPLUS</a> for a list of record types.</param>
      <param name="recordData">The data contained in this record. Please see <a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-emf/91c257d7-c39d-4a36-9b1f-63e3f73d30ca">MS-EMF</a> and <a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-emfplus/5f92c789-64f2-46b5-9ed4-15a9bb0946c6">MS-EMFPLUS</a> for information on record data layouts.</param>
      <param name="recordDataSize">TThe size of the data pointed to by recordData.</param>
      <param name="flags">The set of flags set for this record. Please see <a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-emf/91c257d7-c39d-4a36-9b1f-63e3f73d30ca">MS-EMF</a> and <a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-emfplus/5f92c789-64f2-46b5-9ed4-15a9bb0946c6">MS-EMFPLUS</a> for information on record flags.</param>
    </summary>
  </comment>
  <comment id="ID2D1SourceTransform::Draw">
    <summary>
      <para>Draws the transform to the graphics processing unit (GPU)–based Direct2D pipeline.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1sourcetransform-draw" /></para>
      <param name="target">The target to which the transform should be written.</param>
      <param name="drawRect">The area within the source from which the image should be drawn.</param>
      <param name="targetOrigin">The origin within the target bitmap to which the source data should be drawn.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapDecoder::GetContainerFormat">
    <summary>
      <para>Retrieves the image's container format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getcontainerformat" /></para>
      <param name="pguidContainerFormat">A pointer that receives the image's container format GUID.</param>
    </summary>
  </comment>
  <comment id="IDWriteRenderingParams::GetClearTypeLevel">
    <summary>
      <para>Gets the ClearType level of the rendering parameters object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwriterenderingparams-getcleartypelevel" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFactory2::CreateCustomRenderingParams">
    <summary>
      <para>Creates a rendering parameters object with the specified properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefactory2-createcustomrenderingparams" /></para>
      <param name="gamma">The gamma value used for gamma correction, which must be greater than zero and cannot exceed 256.</param>
      <param name="enhancedContrast">The amount of contrast enhancement, zero or greater.</param>
      <param name="grayscaleEnhancedContrast">The amount of contrast enhancement, zero or greater.</param>
      <param name="clearTypeLevel">The degree of ClearType level, from 0.0f (no ClearType) to 1.0f (full ClearType).</param>
      <param name="pixelGeometry">The geometry of a device pixel.</param>
      <param name="renderingMode">Method of rendering glyphs. In most cases, this should be DWRITE_RENDERING_MODE_DEFAULT to automatically use an appropriate mode.</param>
      <param name="gridFitMode">How to grid fit glyph outlines. In most cases, this should be DWRITE_GRID_FIT_DEFAULT to automatically choose an appropriate mode.</param>
      <param name="renderingParams">Holds the newly created rendering parameters object, or NULL in case of failure.</param>
    </summary>
  </comment>
  <comment id="WICBitmapEncoderCacheOption">
    <summary>
      <para>Specifies the cache options available for an encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmapencodercacheoption" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapEncoderCacheOption::WICBitmapEncoderCacheInMemory">
    <summary>The encoder is cached in memory. This option is not supported.</summary>
  </comment>
  <comment id="WICBitmapEncoderCacheOption::WICBitmapEncoderCacheTempFile">
    <summary>The encoder is cached to a temporary file. This option is not supported.</summary>
  </comment>
  <comment id="WICBitmapEncoderCacheOption::WICBitmapEncoderNoCache">
    <summary>The encoder is not cached.</summary>
  </comment>
  <comment id="ID2D1GeometrySink::AddQuadraticBeziers">
    <summary>
      <para>Adds a sequence of quadratic Bezier segments as an array in a single call.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1geometrysink-addquadraticbeziers" /></para>
      <param name="beziers">An array of a sequence of quadratic Bezier segments.</param>
      <param name="beziersCount">A value indicating the number of quadratic Bezier segments in <i>beziers</i>.</param>
    </summary>
  </comment>
  <comment id="IDWriteRenderingParams::GetGamma">
    <summary>
      <para>Gets the gamma value used for gamma correction. Valid values must be greater than zero and cannot exceed 256.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwriterenderingparams-getgamma" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ImageBrush::SetInterpolationMode">
    <summary>
      <para>Sets the interpolation mode for the image brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-setinterpolationmode" /></para>
      <param name="interpolationMode">How the contents of the image will be interpolated to handle the brush transform.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapCodecInfo::GetContainerFormat">
    <summary>
      <para>Retrieves the container GUID associated with the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-getcontainerformat" /></para>
      <param name="pguidContainerFormat">Receives the container GUID.</param>
    </summary>
  </comment>
  <comment id="ID2D1Factory1">
    <summary>
      <para>Creates Direct2D resources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1factory1" /></para>
    </summary>
  </comment>
  <comment id="ID2D1DrawInfo::SetResourceTexture">
    <summary>
      <para>Sets the resource texture corresponding to the given shader texture index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1drawinfo-setresourcetexture" /></para>
      <param name="textureIndex">The index of the texture to be bound to the pixel shader.</param>
      <param name="resourceTexture">The created resource texture.</param>
    </summary>
  </comment>
  <comment id="D2D1Tan">
    <summary>
      <para>Returns the tangent of an angle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-d2d1tan" /></para>
      <param name="angle">The angle to calculate the tangent for.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapSource::GetResolution">
    <summary>
      <para>Retrieves the sampling rate between pixels and physical world measurements.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsource-getresolution" /></para>
      <param name="dpiX">A pointer that receives the x-axis dpi resolution.</param>
      <param name="dpiY">A pointer that receives the y-axis dpi resolution.</param>
    </summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_SCALE_MODE">
    <summary>
      <para>The interpolation mode the Spot-diffuse lighting effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_spotdiffuse_scale_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_SCALE_MODE::D2D1_SPOTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_SCALE_MODE::D2D1_SPOTDIFFUSE_SCALE_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode outputs a higher quality image than nearest neighbor.</summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_SCALE_MODE::D2D1_SPOTDIFFUSE_SCALE_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_SCALE_MODE::D2D1_SPOTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_SCALE_MODE::D2D1_SPOTDIFFUSE_SCALE_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </comment>
  <comment id="D2D1_SPOTDIFFUSE_SCALE_MODE::D2D1_SPOTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. 
          Then uses the cubic interpolation mode for the final output.</summary>
  </comment>
  <comment id="IDWriteFontFace3::GetStyle">
    <summary>
      <para>Gets the style (also known as slope) of this font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface3-getstyle" /></para>
    </summary>
  </comment>
  <comment id="ID2D1BoundsAdjustmentTransform::SetOutputBounds">
    <summary>
      <para>This sets the output bounds for the support transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1boundsadjustmenttransform-setoutputbounds" /></para>
      <param name="outputBounds">The output bounds.</param>
    </summary>
  </comment>
  <comment id="IWICPlanarBitmapFrameEncode::WritePixels">
    <summary>
      <para>Writes lines from the source planes to the encoded format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicplanarbitmapframeencode-writepixels" /></para>
      <param name="lineCount">The number of lines to encode.  See the Remarks section for WIC Jpeg specific line count restrictions.</param>
      <param name="planes">Specifies the source buffers for each component plane encoded.</param>
      <param name="cPlanes">The number of component planes specified by the <i>pPlanes</i> parameter.</param>
    </summary>
  </comment>
  <comment id="IWICComponentFactory::CreateQueryReaderFromBlockReader">
    <summary>
      <para>Creates a IWICMetadataQueryReader from the given IWICMetadataBlockReader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwiccomponentfactory-createqueryreaderfromblockreader" /></para>
      <param name="iBlockReader">Pointer to the block reader to base the query reader on.</param>
      <param name="iQueryReader">A pointer that receives a pointer to the new metadata query reader.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::GetLastChild">
    <summary>
      <para>Gets the last child of this element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getlastchild" /></para>
      <param name="child">Outputs the last child of this element.</param>
    </summary>
  </comment>
  <comment id="IWICPersistStream::LoadEx">
    <summary>
      <para>Loads data from an input stream using the given parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicpersiststream-loadex" /></para>
      <param name="iStream">Pointer to the input stream.</param>
      <param name="pguidPreferredVendor">Pointer to the GUID of the preferred vendor .</param>
      <param name="dwPersistOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ne-wincodecsdk-wicpersistoptions">WICPersistOptions</a> used to load the stream.</param>
    </summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_QUALITY">
    <summary>
      <para>The quality level of the transform for the Color management effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_colormanagement_quality" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_QUALITY::D2D1_COLORMANAGEMENT_QUALITY_PROOF">
    <summary>The lowest quality mode. This mode requires feature level 9_1 or above.</summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_QUALITY::D2D1_COLORMANAGEMENT_QUALITY_NORMAL">
    <summary>Normal quality mode. This mode requires feature level 9_1 or above.</summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_QUALITY::D2D1_COLORMANAGEMENT_QUALITY_BEST">
    <summary>The best quality mode. This mode requires feature level 10_0 or above, as well as floating point precision buffers. 
          This mode supports floating point precision as well as extended range as defined in the ICC v4.3 specification.</summary>
  </comment>
  <comment id="ID2D1Device2::GetDxgiDevice">
    <summary>
      <para>Returns the DXGI device associated with this Direct2D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device2-getdxgidevice" /></para>
      <param name="dxgiDevice">The DXGI device associated with this Direct2D device.</param>
    </summary>
  </comment>
  <comment id="IWICProgressCallback">
    <summary>
      <para>IWICProgressCallback interface is documented only for compliance; its use is not recommended and may be altered or unavailable in the future. Instead, and use RegisterProgressNotification.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicprogresscallback" /></para>
    </summary>
  </comment>
  <comment id="ID2D1HwndRenderTarget::CheckWindowState">
    <summary>
      <para>Indicates whether the HWND associated with this render target is occluded.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1hwndrendertarget-checkwindowstate" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat1::GetLastLineWrapping">
    <summary>
      <para>Gets the wrapping mode of the last line.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextformat1-getlastlinewrapping" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::GetIncrementalTabStop">
    <summary>
      <para>Gets the incremental tab stop position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getincrementaltabstop" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapDecoder::Initialize">
    <summary>
      <para>Initializes the decoder with the provided stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-initialize" /></para>
      <param name="iStream">The stream to use for initialization.

The stream contains the encoded pixels which are decoded each time the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels">CopyPixels</a> method on the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframedecode">IWICBitmapFrameDecode</a> interface (see <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicbitmapdecoder-getframe">GetFrame</a>) is invoked.</param>
      <param name="cacheOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a> to use for initialization.</param>
    </summary>
  </comment>
  <comment id="IWICProgressiveLevelControl::GetLevelCount">
    <summary>
      <para>Gets the number of levels of progressive decoding supported by the CODEC.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicprogressivelevelcontrol-getlevelcount" /></para>
      <param name="pcLevels">Indicates the number of levels supported by the CODEC.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device">
    <summary>
      <para>Represents a resource domain whose objects and device contexts can be used together.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1device" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat3">
    <summary>
      <para>Describes the font and paragraph properties used to format text, and it describes locale information.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritetextformat3" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::SetFontStretch">
    <summary>
      <para>Sets the font stretch for text within a specified text range.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-setfontstretch" /></para>
      <param name="fontStretch">A value which indicates the type of font stretch for text within the range specified by <i>textRange</i>.</param>
      <param name="textRange">Text range to which this change applies.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::CreateTransformNodeFromEffect">
    <summary>
      <para>Wraps an effect graph into a single transform node and then inserted into a transform graph. This allows an effect to aggregate other effects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createtransformnodefromeffect" /></para>
      <param name="effect">The effect to be wrapped in a transform node.</param>
      <param name="transformNode">The returned transform node that encapsulates the effect graph.</param>
    </summary>
  </comment>
  <comment id="D2D1_TURBULENCE_NOISE">
    <summary>
      <para>The turbulence noise mode for the Turbulence effect. Indicates whether to generate a bitmap based on Fractal Noise or the Turbulence function.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_turbulence_noise" /></para>
    </summary>
  </comment>
  <comment id="D2D1_TURBULENCE_NOISE::D2D1_TURBULENCE_NOISE_FRACTAL_SUM">
    <summary>Computes a sum of the octaves, shifting the output range from [-1, 1], to [0, 1].</summary>
  </comment>
  <comment id="D2D1_TURBULENCE_NOISE::D2D1_TURBULENCE_NOISE_TURBULENCE">
    <summary>Computes a sum of the absolute value of each octave.</summary>
  </comment>
  <comment id="IWICColorContext">
    <summary>
      <para>Exposes methods for color management.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwiccolorcontext" /></para>
    </summary>
  </comment>
  <comment id="IDWriteLocalizedStrings::FindLocaleName">
    <summary>
      <para>Gets the zero-based index of the locale name/string pair with the specified locale name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritelocalizedstrings-findlocalename" /></para>
      <param name="localeName">A null-terminated array of characters containing the locale name to look for.</param>
      <param name="index">The zero-based index of the locale name/string pair. This method initializes <i>index</i> to <b>UINT_MAX</b>.</param>
      <param name="exists">When this method returns, contains <b>TRUE</b> if the locale name exists; otherwise, <b>FALSE</b>. This method initializes <i>exists</i> to <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="D2D1_COMPOSITE_PROP">
    <summary>
      <para>Identifiers for properties of the Composite effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_composite_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COMPOSITE_PROP::D2D1_COMPOSITE_PROP_MODE">
    <summary>The mode used for the effect.
            

Type is D2D1_COMPOSITE_MODE.

Default value is D2D1_COMPOSITE_MODE_SOURCE_OVER</summary>
  </comment>
  <comment id="IDWriteFont1::GetPanose">
    <summary>
      <para>Gets the PANOSE values from the font and is used for font selection and matching.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefont1-getpanose" /></para>
      <param name="panose">A pointer to the <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ns-dwrite_1-dwrite_panose">DWRITE_PANOSE</a> structure to fill in.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout">
    <summary>
      <para>The IDWriteTextLayout interface represents a block of text after it has been fully analyzed and formatted.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritetextlayout" /></para>
    </summary>
  </comment>
  <comment id="IWICJpegFrameDecode::GetQuantizationTable">
    <summary>
      <para>Retrieves a copy of the quantization table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-getquantizationtable" /></para>
      <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
      <param name="tableIndex">The index of the quantization table to retrieve. Valid indices for a given scan can be determined by retrieving the scan header with <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicjpegframedecode-getscanheader">IWICJpegFrameDecode::GetScanHeader</a>.</param>
      <param name="quantizationTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    </summary>
  </comment>
  <comment id="IWICColorTransform::Initialize">
    <summary>
      <para>Initializes an IWICColorTransform with a IWICBitmapSource and transforms it from one IWICColorContext to another.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolortransform-initialize" /></para>
      <param name="iBitmapSource">The bitmap source used to initialize the color transform.</param>
      <param name="iContextSource">The color context source.</param>
      <param name="iContextDest">The color context destination.</param>
      <param name="pixelFmtDest">The GUID of the desired pixel format.

This parameter is limited to a subset of the native WIC pixel formats, see Remarks for a list.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer1::GetScriptProperties">
    <summary>
      <para>Retrieves the properties for a given script.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextanalyzer1-getscriptproperties" /></para>
      <param name="scriptAnalysis">The script for a run of text returned
    from <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-analyzescript">IDWriteTextAnalyzer::AnalyzeScript</a>.</param>
      <param name="scriptProperties">A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ns-dwrite_1-dwrite_script_properties">DWRITE_SCRIPT_PROPERTIES</a> structure that describes info for the script.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFaceReference1">
    <summary>
      <para>Represents a reference to a font face. A uniquely identifying reference to a font, from which you can create a font face to query font metrics and use for rendering.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontfacereference1" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapLockFlags">
    <summary>
      <para>Specifies access to an IWICBitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmaplockflags" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapLockFlags::WICBitmapLockRead">
    <summary>A read access lock.</summary>
  </comment>
  <comment id="WICBitmapLockFlags::WICBitmapLockWrite">
    <summary>A write access lock.</summary>
  </comment>
  <comment id="D2D1CreateDeviceContext">
    <summary>
      <para>Creates a new Direct2D device context associated with a DXGI surface.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-d2d1createdevicecontext" /></para>
      <param name="dxgiSurface">The DXGI surface the Direct2D device context is associated with.</param>
      <param name="creationProperties">The properties to apply to the Direct2D device context.</param>
      <param name="d2dDeviceContext">When this function returns, contains the address of a pointer to a Direct2D device context.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapDecoder::GetPreview">
    <summary>
      <para>Retrieves a preview image, if supported.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getpreview" /></para>
      <param name="iBitmapSource">Receives a pointer to the preview bitmap if supported.</param>
    </summary>
  </comment>
  <comment id="ID2D1Multithread::Enter">
    <summary>
      <para>Enters the Direct2D API critical section, if it exists.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1multithread-enter" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetMaxHeight">
    <summary>
      <para>Gets the layout maximum height.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getmaxheight" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontDownloadQueue::AddListener">
    <summary>
      <para>Registers a client-defined listener object that receives download notifications. All registered listener's DownloadCompleted will be called after BeginDownloadcompletes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontdownloadqueue-addlistener" /></para>
      <param name="listener">Listener object to add.</param>
      <param name="token">Receives a token value, which the caller must subsequently pass to <a href="https://docs.microsoft.com/windows/win32/api/dwrite_3/nf-dwrite_3-idwritefontdownloadqueue-removelistener">RemoveListener</a>.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace1::HasKerningPairs">
    <summary>
      <para>Determines whether the font supports pair-kerning.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefontface1-haskerningpairs" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace4">
    <summary>
      <para>Contains font face type, appropriate file references, and face identification data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontface4" /></para>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink3::DrawSpriteBatch">
    <summary>
      <para>Renders part or all of the given sprite batch to the device context using the specified drawing options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1commandsink3-drawspritebatch" /></para>
      <param name="spriteBatch">The sprite batch to draw.</param>
      <param name="startIndex">The index of the first sprite in the sprite batch to draw.</param>
      <param name="spriteCount">The number of sprites to draw.</param>
      <param name="bitmap">The bitmap from which the sprites are to be sourced. Each sprite’s source rectangle refers to a portion of this bitmap.</param>
      <param name="interpolationMode">The interpolation mode to use when drawing this sprite batch. This determines how Direct2D interpolates pixels within the drawn sprites if scaling is performed.</param>
      <param name="spriteOptions">The additional drawing options, if any, to be used for this sprite batch.</param>
    </summary>
  </comment>
  <comment id="D2D1_GAMMA">
    <summary>
      <para>Specifies which gamma is used for interpolation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_gamma" /></para>
    </summary>
  </comment>
  <comment id="D2D1_GAMMA::D2D1_GAMMA_2_2">
    <summary>Interpolation is performed in the standard RGB (sRGB) gamma.</summary>
  </comment>
  <comment id="D2D1_GAMMA::D2D1_GAMMA_1_0">
    <summary>Interpolation is performed in the linear-gamma color space.</summary>
  </comment>
  <comment id="IDWriteTextLayout1::SetCharacterSpacing">
    <summary>
      <para>Sets the spacing between characters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextlayout1-setcharacterspacing" /></para>
      <param name="leadingSpacing">The spacing before each character, in reading order.</param>
      <param name="trailingSpacing">The spacing after each character, in reading order.</param>
      <param name="minimumAdvanceWidth">The minimum advance of each character, to prevent characters from becoming too thin or zero-width. This
    must be zero or greater.</param>
      <param name="textRange">Text range to which this change applies.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::SetStrikethrough">
    <summary>
      <para>Sets strikethrough for text within a specified text range.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-setstrikethrough" /></para>
      <param name="hasStrikethrough">A Boolean flag that indicates whether strikethrough takes place in the range specified by <i>textRange</i>.</param>
      <param name="textRange">Text range to which this change applies.</param>
    </summary>
  </comment>
  <comment id="D2D1_COMPOSITE_MODE">
    <summary>
      <para>Used to specify the blend mode for all of the Direct2D blending operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_composite_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_SOURCE_OVER">
    <summary>The standard source-over-destination blend mode.</summary>
  </comment>
  <comment id="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_DESTINATION_OVER">
    <summary>The destination is rendered over the source.</summary>
  </comment>
  <comment id="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_SOURCE_IN">
    <summary>Performs a logical clip of the source pixels against the destination pixels.</summary>
  </comment>
  <comment id="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_DESTINATION_IN">
    <summary>The inverse of the <b>D2D1_COMPOSITE_MODE_SOURCE_IN</b> operation.</summary>
  </comment>
  <comment id="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_SOURCE_OUT">
    <summary>This is the logical inverse to <b>D2D1_COMPOSITE_MODE_SOURCE_IN</b>.</summary>
  </comment>
  <comment id="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_DESTINATION_OUT">
    <summary>The is the logical inverse to <b>D2D1_COMPOSITE_MODE_DESTINATION_IN</b>.</summary>
  </comment>
  <comment id="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_SOURCE_ATOP">
    <summary>Writes the source pixels over the destination where there are destination pixels.</summary>
  </comment>
  <comment id="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_DESTINATION_ATOP">
    <summary>The logical inverse of <b>D2D1_COMPOSITE_MODE_SOURCE_ATOP</b>.</summary>
  </comment>
  <comment id="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_XOR">
    <summary>The source is inverted with the destination.</summary>
  </comment>
  <comment id="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_PLUS">
    <summary>The channel components are summed.</summary>
  </comment>
  <comment id="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_SOURCE_COPY">
    <summary>The source is copied to the destination; the destination pixels are ignored.</summary>
  </comment>
  <comment id="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_BOUNDED_SOURCE_COPY">
    <summary>Equivalent to <b>D2D1_COMPOSITE_MODE_SOURCE_COPY</b>, but pixels outside of the source bounds are unchanged.</summary>
  </comment>
  <comment id="D2D1_COMPOSITE_MODE::D2D1_COMPOSITE_MODE_MASK_INVERT">
    <summary>Destination colors are inverted according to a source mask.</summary>
  </comment>
  <comment id="IDWriteFontFace1::GetMetrics">
    <summary>
      <para>Obtains design units and common metrics for the font face. These metrics are applicable to all the glyphs within a font face and are used by applications for layout calculations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefontface1-getmetrics" /></para>
      <param name="fontMetrics">A filled <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ns-dwrite_1-dwrite_font_metrics1">DWRITE_FONT_METRICS1</a> structure that holds metrics for the current font face element.
     The metrics returned by this method are in font design units.</param>
    </summary>
  </comment>
  <comment id="IDWriteInlineObject::GetMetrics">
    <summary>
      <para>IDWriteTextLayout calls this callback function to get the measurement of the inline object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwriteinlineobject-getmetrics" /></para>
      <param name="metrics">When this method returns, contains a structure describing the geometric measurement of an
application-defined inline object.  These metrics are in relation to the baseline of the adjacent text.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory2::CreateFontFallbackBuilder">
    <summary>
      <para>Creates a font fallback builder object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefactory2-createfontfallbackbuilder" /></para>
      <param name="fontFallbackBuilder">Contains an address of a pointer to the newly created font fallback builder object.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device4::CreateDeviceContext">
    <summary>
      <para>Creates a new ID2D1DeviceContext4 from this Direct2D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1device4-createdevicecontext" /></para>
      <param name="options">The options to be applied to the created device context.</param>
      <param name="deviceContext4">When this method returns, contains a pointer to the new device context.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFileEnumerator::MoveNext">
    <summary>
      <para>Advances to the next font file in the collection. When it is first created, the enumerator is positioned before the first element of the collection and the first call to MoveNext advances to the first file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfileenumerator-movenext" /></para>
      <param name="hasCurrentFile">When the method returns, contains  the value <b>TRUE</b> if the enumerator advances to a file; otherwise, <b>FALSE</b> if
     the enumerator advances past the last file in the collection.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetLocaleName">
    <summary>
      <para>Gets the locale name of the text at the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getlocalename" /></para>
      <param name="currentPosition">The position of the text to inspect.</param>
      <param name="localeName">When this method returns, contains the character array receiving the current locale name.</param>
      <param name="nameSize">Size of the character array, in character count, including the terminated <b>NULL</b> character.</param>
      <param name="textRange">The range of text that has the same  formatting as the text at the position specified by <i>currentPosition</i>.  This means the run has the exact  formatting as the position specified, including but not limited to the locale name.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::SetTextRenderingParams">
    <summary>
      <para>Indicates more detailed text rendering parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-settextrenderingparams" /></para>
      <param name="textRenderingParams">The parameters to use for text rendering.</param>
    </summary>
  </comment>
  <comment id="ID2D1Factory::GetDesktopDpi">
    <summary>
      <para>Retrieves the current desktop dots per inch (DPI). To refresh this value, call ReloadSystemMetrics.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1factory-getdesktopdpi" /></para>
      <param name="dpiX"> When this method returns, contains the horizontal DPI of the desktop. You must allocate storage for this parameter.</param>
      <param name="dpiY">When this method returns, contains the vertical DPI of the desktop. You must allocate storage for this parameter.</param>
    </summary>
  </comment>
  <comment id="D2D1_INTERPOLATION_MODE">
    <summary>
      <para>This is used to specify the quality of image scaling with ID2D1DeviceContext::DrawImage and with the 2D affine transform effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_interpolation_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_INTERPOLATION_MODE::D2D1_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that exact color.  This mode uses less processing time, but outputs the lowest quality image.</summary>
  </comment>
  <comment id="D2D1_INTERPOLATION_MODE::D2D1_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode uses more processing time than the nearest neighbor mode, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_INTERPOLATION_MODE::D2D1_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation.  This mode uses the most processing time, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_INTERPOLATION_MODE::D2D1_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </comment>
  <comment id="D2D1_INTERPOLATION_MODE::D2D1_INTERPOLATION_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </comment>
  <comment id="D2D1_INTERPOLATION_MODE::D2D1_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </comment>
  <comment id="ID2D1GradientStopCollection1">
    <summary>
      <para>Represents a collection of D2D1_GRADIENT_STOP objects for linear and radial gradient brushes. It provides get methods for all the new parameters added to the gradient stop collection.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1gradientstopcollection1" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontSet1">
    <summary>
      <para>Represents a font set.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontset1" /></para>
    </summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo">
    <summary>
      <para>Defines raw codec capabilites.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicrawcapabilitiesinfo" /></para>
    </summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::cbSize">
    <summary>Size of the <b>WICRawCapabilitiesInfo</b> structure.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::CodecMajorVersion">
    <summary>The codec's major version.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::CodecMinorVersion">
    <summary>The codec's minor version.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::ExposureCompensationSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of exposure compensation support.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::ContrastSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of contrast support.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::RGBWhitePointSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of RGB white point support.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::NamedWhitePointSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicnamedwhitepoint">WICNamedWhitePoint</a> support.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::NamedWhitePointSupportMask">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicnamedwhitepoint">WICNamedWhitePoint</a> mask.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::KelvinWhitePointSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of kelvin white point support.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::GammaSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of gamma support.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::TintSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of tint support.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::SaturationSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of saturation support.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::SharpnessSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of sharpness support.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::NoiseReductionSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of noise reduction support.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::DestinationColorProfileSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of destination color profile support.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::ToneCurveSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of tone curve support.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::RotationSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawrotationcapabilities">WICRawRotationCapabilities</a> of rotation support.</summary>
  </comment>
  <comment id="WICRawCapabilitiesInfo::RenderModeSupport">
    <summary>The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawcapabilities">WICRawCapabilities</a> of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicrawrendermode">WICRawRenderMode</a> support.</summary>
  </comment>
  <comment id="IWICDdsDecoder::GetParameters">
    <summary>
      <para>Gets DDS-specific data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsdecoder-getparameters" /></para>
      <param name="parameters">A pointer to the structure where the information is returned.</param>
    </summary>
  </comment>
  <comment id="IWICComponentInfo::GetVendorGUID">
    <summary>
      <para>Retrieves the vendor GUID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getvendorguid" /></para>
      <param name="pguidVendor">A pointer that receives the component's vendor GUID.</param>
    </summary>
  </comment>
  <comment id="IWICComponentInfo::GetFriendlyName">
    <summary>
      <para>Retrieves the component's friendly name, which is a human-readable display name for the component.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getfriendlyname" /></para>
      <param name="cchFriendlyName">The size of the <i>wzFriendlyName</i> buffer.</param>
      <param name="wzFriendlyName">A pointer that receives the friendly name of the component.
               The locale of the string depends on the value that the codec wrote to the registry at install time. For built-in components, these strings are always in English.</param>
      <param name="pcchActual">A pointer that receives the actual length of the component's friendly name.</param>
    </summary>
  </comment>
  <comment id="D2D1_LINE_JOIN">
    <summary>
      <para>Describes the shape that joins two lines or segments.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_line_join" /></para>
    </summary>
  </comment>
  <comment id="D2D1_LINE_JOIN::D2D1_LINE_JOIN_MITER">
    <summary>Regular angular vertices.</summary>
  </comment>
  <comment id="D2D1_LINE_JOIN::D2D1_LINE_JOIN_BEVEL">
    <summary>Beveled vertices.</summary>
  </comment>
  <comment id="D2D1_LINE_JOIN::D2D1_LINE_JOIN_ROUND">
    <summary>Rounded vertices.</summary>
  </comment>
  <comment id="D2D1_LINE_JOIN::D2D1_LINE_JOIN_MITER_OR_BEVEL">
    <summary>Regular angular vertices unless the join would extend beyond the miter limit; otherwise, beveled vertices.</summary>
  </comment>
  <comment id="ID2D1TransformedImageSource::GetSource">
    <summary>
      <para>Retrieves the source image used to create the transformed image source.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1transformedimagesource-getsource" /></para>
      <param name="imageSource">Retrieves the source image used to create the transformed image source.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::CreateBorderTransform">
    <summary>
      <para>Creates a transform that extends its input infinitely in every direction based on the passed in extend mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createbordertransform" /></para>
      <param name="extendModeX">The extend mode in the X-axis direction.</param>
      <param name="extendModeY">The extend mode in the Y-axis direction.</param>
      <param name="transform">The returned transform.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapCodecInfo::GetDeviceModels">
    <summary>
      <para>Retrieves a comma delimited list of device models associated with the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-getdevicemodels" /></para>
      <param name="cchDeviceModels">The size of the device models buffer. Use <c>0</c> on first call to determine needed buffer size.</param>
      <param name="wzDeviceModels">Receives a comma delimited list of device model names associated with the codec. Use <c>NULL</c> on first call to determine needed buffer size.</param>
      <param name="pcchActual">The actual buffer size needed to retrieve all of the device model names.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontList">
    <summary>
      <para>Represents a list of fonts.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritefontlist" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetFontFamilyNameLength">
    <summary>
      <para>Get the length of the font family name at the current position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getfontfamilynamelength" /></para>
      <param name="currentPosition">The current text position.</param>
      <param name="nameLength">When this method returns, contains the size of the character array containing the font family name, in character count, not including the terminated <b>NULL</b> character.</param>
      <param name="textRange">The range of text that has the same  formatting as the text at the position specified by <i>currentPosition</i>.  This means the run has the exact  formatting as the position specified, including but not limited to the font family.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapLock::GetPixelFormat">
    <summary>
      <para>Gets the pixel format of for the locked area of pixels. This can be used to compute the number of bytes-per-pixel in the locked area.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmaplock-getpixelformat" /></para>
      <param name="pixelFormat">A pointer that receives the pixel format GUID of the locked area.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapSource">
    <summary>
      <para>Exposes methods that refers to a source from which pixels are retrieved, but cannot be written back to.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapsource" /></para>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink5::BlendImage">
    <summary>
      <para>Draws an image to the device context using the specified blend mode. Results are equivalent to using Direct2D's built-in Blend effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1commandsink5-blendimage" /></para>
      <param name="image">The image to be drawn to the device context.</param>
      <param name="blendMode">The blend mode to be used. See <a href="https://docs.microsoft.com/windows/desktop/Direct2D/blend">Blend modes</a> for more info.</param>
      <param name="targetOffset">The offset in the destination space that the image will be rendered to. 
            The entire logical extent of the image will be rendered to the corresponding destination. 
            If not specified, the destination origin will be (0, 0). The top-left corner of the image will be mapped to the target offset. 
            This will not necessarily be the origin. The default value is NULL.</param>
      <param name="imageRectangle">The corresponding rectangle in the image space will be mapped to the given origins when processing the image. The default value is NULL.</param>
      <param name="interpolationMode">The interpolation mode that will be used to scale the image if necessary. The default value is D2D1_INTERPOLATION_MODE_LINEAR.</param>
    </summary>
  </comment>
  <comment id="WICSectionAccessLevel">
    <summary>
      <para>Specifies the access level of a Windows Graphics Device Interface (GDI) section.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicsectionaccesslevel" /></para>
    </summary>
  </comment>
  <comment id="WICSectionAccessLevel::WICSectionAccessLevelRead">
    <summary>Indicates a read only access level.</summary>
  </comment>
  <comment id="WICSectionAccessLevel::WICSectionAccessLevelReadWrite">
    <summary>Indicates a read/write access level.</summary>
  </comment>
  <comment id="IDWriteLocalizedStrings::GetCount">
    <summary>
      <para>Gets the number of language/string pairs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritelocalizedstrings-getcount" /></para>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateBitmapScaler">
    <summary>
      <para>Creates a new instance of an IWICBitmapScaler.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapscaler" /></para>
      <param name="iBitmapScaler">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapscaler">IWICBitmapScaler</a>.</param>
    </summary>
  </comment>
  <comment id="D2D1_INPUT_DESCRIPTION">
    <summary>
      <para>Describes the options that transforms may set on input textures.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_input_description" /></para>
    </summary>
  </comment>
  <comment id="D2D1_INPUT_DESCRIPTION::filter">
    <summary>The type of filter to apply to the input texture.</summary>
  </comment>
  <comment id="D2D1_INPUT_DESCRIPTION::levelOfDetailCount">
    <summary>The mip level to retrieve from the upstream transform, if specified.</summary>
  </comment>
  <comment id="ID2D1EffectContext1::CreateLookupTable3D">
    <summary>
      <para>Creates a 3D lookup table for mapping a 3-channel input to a 3-channel output. The table data must be provided in 4-channel format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor_1/nf-d2d1effectauthor_1-id2d1effectcontext1-createlookuptable3d" /></para>
      <param name="precision">Precision of the input lookup table data.</param>
      <param name="extents">Number of lookup table elements per dimension (X, Y, Z).</param>
      <param name="data">Buffer holding the lookup table data.</param>
      <param name="dataCount">Size of the lookup table data buffer.</param>
      <param name="strides">An array containing two values. The first value is the size in bytes from one row (X dimension) of LUT data to the next. 
          The second value is the size in bytes from one LUT data plane (X and Y dimensions) to the next.</param>
      <param name="lookupTable">Receives the new lookup table instance.</param>
    </summary>
  </comment>
  <comment id="ID2D1HwndRenderTarget">
    <summary>
      <para>Renders drawing instructions to a window.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1hwndrendertarget" /></para>
    </summary>
  </comment>
  <comment id="ID2D1TransformGraph::Clear">
    <summary>
      <para>Clears the transform nodes and all connections from the transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-clear" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::SetReadingDirection">
    <summary>
      <para>Sets the paragraph reading direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-setreadingdirection" /></para>
      <param name="readingDirection">The text reading direction (for example, <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_reading_direction">DWRITE_READING_DIRECTION_RIGHT_TO_LEFT</a> for languages, such as 
            Arabic, that read from right to left) for a paragraph.</param>
    </summary>
  </comment>
  <comment id="WICPngTimeProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) tIME chunk metadata properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpngtimeproperties" /></para>
    </summary>
  </comment>
  <comment id="WICPngTimeProperties::WICPngTimeYear">
    <summary>[VT_UI2] Indicates the year of the last modification.</summary>
  </comment>
  <comment id="WICPngTimeProperties::WICPngTimeMonth">
    <summary>[VT_UI1] Indicates the month of the last modification.</summary>
  </comment>
  <comment id="WICPngTimeProperties::WICPngTimeDay">
    <summary>[VT_UI1] Indicates day of the last modification.</summary>
  </comment>
  <comment id="WICPngTimeProperties::WICPngTimeHour">
    <summary>[VT_UI1] Indicates the hour of the last modification.</summary>
  </comment>
  <comment id="WICPngTimeProperties::WICPngTimeMinute">
    <summary>[VT_UI1] Indicates the minute of the last modification.</summary>
  </comment>
  <comment id="WICPngTimeProperties::WICPngTimeSecond">
    <summary>[VT_UI1] Indicates the second of the last modification.</summary>
  </comment>
  <comment id="IDWriteTextAnalysisSink::SetScriptAnalysis">
    <summary>
      <para>Reports script analysis for the specified text range.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalysissink-setscriptanalysis" /></para>
      <param name="textPosition">The starting position from which to report.</param>
      <param name="textLength">The number of UTF16 units of the reported range.</param>
      <param name="scriptAnalysis">A pointer to a structure that contains a zero-based index representation of a writing system script and a value indicating whether additional shaping of text is required.</param>
    </summary>
  </comment>
  <comment id="IDWriteColorGlyphRunEnumerator::GetCurrentRun">
    <summary>
      <para>Returns the current glyph run of the enumerator.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritecolorglyphrunenumerator-getcurrentrun" /></para>
      <param name="colorGlyphRun">A pointer to the current glyph run.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext">
    <summary>
      <para>Represents a set of state and command buffers that are used to render to a target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1devicecontext" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ComputeTransform::CalculateThreadgroups">
    <summary>
      <para>This method allows a compute-shader–based transform to select the number of thread groups to execute based on the number of output pixels it needs to fill.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1computetransform-calculatethreadgroups" /></para>
      <param name="outputRect">The output rectangle that will be filled by the compute transform.</param>
      <param name="dimensionX">The number of threads in the x dimension.</param>
      <param name="dimensionY">The number of threads in the y dimension.</param>
      <param name="dimensionZ">The number of threads in the z dimension.</param>
    </summary>
  </comment>
  <comment id="ID2D1SpriteBatch::GetSprites">
    <summary>
      <para>Retrieves the specified subset of sprites from this sprite batch. For the best performance, use nullptr for properties that you do not need to retrieve.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1spritebatch-getsprites" /></para>
      <param name="startIndex">The index of the first sprite in this sprite batch to retrieve.</param>
      <param name="spriteCount">The number of sprites to retrieve.</param>
      <param name="destinationRectangles">When this method returns, contains a pointer to an array containing the destination rectangles for the retrieved sprites.</param>
      <param name="sourceRectangles">When this method returns, contains a pointer to an array containing the source rectangles for the retrieved sprites.

          

The InfiniteRectU is returned for any sprites that were not assigned a source rectangle.</param>
      <param name="colors">When this method returns, contains a pointer to an array containing the colors to be applied to the retrieved sprites.

          

The color {1.0f, 1.0f, 1.0f, 1.0f} is returned for any sprites that were not assigned a color.</param>
      <param name="transforms">When this method returns, contains a pointer to an array containing the transforms to be applied to the retrieved sprites.

            

The identity matrix is returned for any sprites that were not assigned a transform.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapFrameEncode::SetSize">
    <summary>
      <para>Sets the output image dimensions for the frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-setsize" /></para>
      <param name="uiWidth">The width of the output image.</param>
      <param name="uiHeight">The height of the output image.</param>
    </summary>
  </comment>
  <comment id="ID2D1LinearGradientBrush::SetEndPoint">
    <summary>
      <para>Sets the ending coordinates of the linear gradient in the brush's coordinate space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-setendpoint" /></para>
      <param name="endPoint">The ending two-dimensional coordinates of the linear gradient, in the brush's coordinate space.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataBlockWriter::InitializeFromBlockReader">
    <summary>
      <para>Initializes an IWICMetadataBlockWriter from the given IWICMetadataBlockReader. This will prepopulate the metadata block writer with all the metadata in the metadata block reader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockwriter-initializefromblockreader" /></para>
      <param name="iMDBlockReader">Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/nn-wincodecsdk-iwicmetadatablockreader">IWICMetadataBlockReader</a> used to initialize the block writer.</param>
    </summary>
  </comment>
  <comment id="ID2D1ConcreteTransform">
    <summary>
      <para>Represents the set of transforms implemented by the effect-rendering system, which provides fixed-functionality.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1concretetransform" /></para>
    </summary>
  </comment>
  <comment id="DWriteCreateFactory">
    <summary>
      <para>Creates a DirectWrite factory object that is used for subsequent creation of individual DirectWrite objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-dwritecreatefactory" /></para>
      <param name="factoryType">A value that specifies whether the factory object will be shared or isolated.</param>
      <param name="iid">A GUID value that identifies the DirectWrite factory interface, such as __uuidof(<a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefactory">IDWriteFactory</a>).</param>
      <param name="factory">An address of a pointer to the newly created DirectWrite factory object.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace::IsSymbolFont">
    <summary>
      <para>Determines whether the font is a symbol font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-issymbolfont" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer1::JustifyGlyphAdvances">
    <summary>
      <para>Justifies an array of glyph advances to fit the line width.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextanalyzer1-justifyglyphadvances" /></para>
      <param name="lineWidth">The line width.</param>
      <param name="glyphCount">The glyph count.</param>
      <param name="justificationOpportunities">A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ns-dwrite_1-dwrite_justification_opportunity">DWRITE_JUSTIFICATION_OPPORTUNITY</a> structure that contains info for the
    allowed justification expansion/compression for each glyph. Get this info from <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/nf-dwrite_1-idwritetextanalyzer1-getjustificationopportunities">IDWriteTextAnalyzer1::GetJustificationOpportunities</a>.</param>
      <param name="glyphAdvances">An array of glyph advances.</param>
      <param name="glyphOffsets">An array of glyph offsets.</param>
      <param name="justifiedGlyphAdvances">The returned array of justified glyph advances.</param>
      <param name="justifiedGlyphOffsets">The returned array of justified glyph offsets.</param>
    </summary>
  </comment>
  <comment id="ID2D1DrawingStateBlock1::SetDescription">
    <summary>
      <para>Sets the D2D1_DRAWING_STATE_DESCRIPTION1 associated with this drawing state block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1drawingstateblock1-setdescription" /></para>
      <param name="stateDescription">The <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/ns-d2d1_1-d2d1_drawing_state_description1">D2D1_DRAWING_STATE_DESCRIPTION1</a> to be set associated with  this drawing state block.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandList::Close">
    <summary>
      <para>Instructs the command list to stop accepting commands so that you can use it as an input to an effect or in a call to ID2D1DeviceContext::DrawImage.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandlist-close" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Device1::SetRenderingPriority">
    <summary>
      <para>Sets the priority of Direct2D rendering operations performed on any device context associated with the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1device1-setrenderingpriority" /></para>
      <param name="renderingPriority">The desired rendering priority for the device and associated contexts.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory4::TranslateColorGlyphRun">
    <summary>
      <para>Translates a glyph run to a sequence of color glyph runs, which can be rendered to produce a color representation of the original &quot;base&quot; run.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefactory4-translatecolorglyphrun" /></para>
      <param name="baselineOrigin">Horizontal and vertical origin of the base glyph run in pre-transform coordinates.</param>
      <param name="glyphRun">Pointer to the original "base" glyph run.</param>
      <param name="glyphRunDescription">Optional glyph run description.</param>
      <param name="desiredGlyphImageFormats">Which data formats the runs should be split into.</param>
      <param name="measuringMode">Measuring mode, needed to compute the origins of each glyph.</param>
      <param name="worldAndDpiTransform">Matrix converting from the client's coordinate space to device coordinates (pixels), i.e., the world transform multiplied by any DPI scaling.</param>
      <param name="colorPaletteIndex">Zero-based index of the color palette to use.
          Valid indices are less than the number of palettes in the font, as returned
          by <a href="https://docs.microsoft.com/windows/win32/api/dwrite_2/nf-dwrite_2-idwritefontface2-getcolorpalettecount">IDWriteFontFace2::GetColorPaletteCount</a>.</param>
      <param name="colorLayers">If the function succeeds, receives a pointer to an enumerator object that can be used to obtain the color glyph runs.
          If the base run has no color glyphs, then the output pointer is NULL and the method returns DWRITE_E_NOCOLOR.</param>
    </summary>
  </comment>
  <comment id="IWICDdsDecoder">
    <summary>
      <para>Provides information and functionality specific to the DDS image format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicddsdecoder" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer2::GetTypographicFeatures">
    <summary>
      <para>Returns a complete list of OpenType features available for a script or font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextanalyzer2-gettypographicfeatures" /></para>
      <param name="fontFace">The font face to get features from.</param>
      <param name="scriptAnalysis">The script analysis for the script or font to check.</param>
      <param name="localeName">The locale name to check.</param>
      <param name="maxTagCount">The maximum number of tags to return.</param>
      <param name="actualTagCount">The actual number of tags returned.</param>
      <param name="tags">An array of OpenType font feature tags.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapCodecInfo::GetColorManagementVersion">
    <summary>
      <para>Retrieves the color manangement version number the codec supports.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-getcolormanagementversion" /></para>
      <param name="cchColorManagementVersion">The size of the version buffer. Use <c>0</c> on first call to determine needed buffer size.</param>
      <param name="wzColorManagementVersion">Receives the color management version number. Use <c>NULL</c> on first call to determine needed buffer size.</param>
      <param name="pcchActual">The actual buffer size needed to retrieve the full color management version number.</param>
    </summary>
  </comment>
  <comment id="IWICDdsEncoder::CreateNewFrame">
    <summary>
      <para>Creates a new frame to encode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsencoder-createnewframe" /></para>
      <param name="iFrameEncode">A pointer to the newly created frame object.</param>
      <param name="arrayIndex">Points to the location where the array index is returned.</param>
      <param name="mipLevel">Points to the location where the mip level index is returned.</param>
      <param name="sliceIndex">Points to the location where the slice index is returned.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataQueryWriter::RemoveMetadataByName">
    <summary>
      <para>Removes a metadata item from a specific location using a metadata query expression.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataquerywriter-removemetadatabyname" /></para>
      <param name="wzName">The name of the metadata item to remove.</param>
    </summary>
  </comment>
  <comment id="ID2D1Factory1::CreateDevice">
    <summary>
      <para>Creates a ID2D1Device object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-createdevice" /></para>
      <param name="dxgiDevice">The <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgidevice">IDXGIDevice</a> object used when creating  the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nn-d2d1_1-id2d1device">ID2D1Device</a>.</param>
      <param name="d2dDevice">The requested <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nn-d2d1_1-id2d1device">ID2D1Device</a> object.</param>
    </summary>
  </comment>
  <comment id="ID2D1GdiMetafile">
    <summary>
      <para>A Direct2D resource that wraps a WMF, EMF, or EMF+ metafile.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1gdimetafile" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalysisSource::GetNumberSubstitution">
    <summary>
      <para>Gets the number substitution from the text range affected by the text analysis.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalysissource-getnumbersubstitution" /></para>
      <param name="textPosition">The starting position from which to report.</param>
      <param name="textLength">Contains  the length of the text, in characters, remaining in the text range up to the next differing number substitution.</param>
      <param name="numberSubstitution">Contains an address of a pointer to an object, which was created with <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritefactory-createnumbersubstitution">IDWriteFactory::CreateNumberSubstitution</a>, that holds the appropriate digits and numeric punctuation for a given locale.</param>
    </summary>
  </comment>
  <comment id="WICDecodeOptions">
    <summary>
      <para>Specifies decode options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicdecodeoptions" /></para>
    </summary>
  </comment>
  <comment id="WICDecodeOptions::WICDecodeMetadataCacheOnDemand">
    <summary>Cache metadata when needed.</summary>
  </comment>
  <comment id="WICDecodeOptions::WICDecodeMetadataCacheOnLoad">
    <summary>Cache metadata when decoder is loaded.</summary>
  </comment>
  <comment id="IDWriteTextLayout3::SetLineSpacing">
    <summary>
      <para>Set line spacing.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritetextlayout3-setlinespacing" /></para>
      <param name="lineSpacingOptions">How to manage space between lines.</param>
    </summary>
  </comment>
  <comment id="IWICProgressiveLevelControl::GetCurrentLevel">
    <summary>
      <para>Gets the decoder's current progressive level.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicprogressivelevelcontrol-getcurrentlevel" /></para>
      <param name="pnLevel">Indicates the current level specified.</param>
    </summary>
  </comment>
  <comment id="ID2D1BitmapBrush::GetExtendModeX">
    <summary>
      <para>Gets the method by which the brush horizontally tiles those areas that extend past its bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-getextendmodex" /></para>
    </summary>
  </comment>
  <comment id="D2D1_POINTDIFFUSE_SCALE_MODE">
    <summary>
      <para>The interpolation mode the Point-diffuse lighting effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_pointdiffuse_scale_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_POINTDIFFUSE_SCALE_MODE::D2D1_POINTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </comment>
  <comment id="D2D1_POINTDIFFUSE_SCALE_MODE::D2D1_POINTDIFFUSE_SCALE_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode outputs a higher quality image than nearest neighbor.</summary>
  </comment>
  <comment id="D2D1_POINTDIFFUSE_SCALE_MODE::D2D1_POINTDIFFUSE_SCALE_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_POINTDIFFUSE_SCALE_MODE::D2D1_POINTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </comment>
  <comment id="D2D1_POINTDIFFUSE_SCALE_MODE::D2D1_POINTDIFFUSE_SCALE_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </comment>
  <comment id="D2D1_POINTDIFFUSE_SCALE_MODE::D2D1_POINTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </comment>
  <comment id="IWICBitmapCodecInfo::MatchesMimeType">
    <summary>
      <para>Retrieves a value indicating whether the given mime type matches the mime type of the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-matchesmimetype" /></para>
      <param name="wzMimeType">The mime type to compare.</param>
      <param name="pfMatches">Receives <b>TRUE</b> if the mime types match; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="ID2D1ImageBrush::SetSourceRectangle">
    <summary>
      <para>Sets the source rectangle in the image brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-setsourcerectangle" /></para>
      <param name="sourceRectangle">The source rectangle that defines the portion of the image to tile.</param>
    </summary>
  </comment>
  <comment id="ID2D1Geometry">
    <summary>
      <para>Represents a geometry resource and defines a set of helper methods for manipulating and measuring geometric shapes. Interfaces that inherit from ID2D1Geometry define specific shapes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1geometry" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer::GetGlyphPlacements">
    <summary>
      <para>Places glyphs output from the GetGlyphs method according to the font and the writing system's rendering rules.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalyzer-getglyphplacements" /></para>
      <param name="textString">An array of characters containing the original string from which the glyphs came.</param>
      <param name="clusterMap">A pointer to the mapping from character ranges to glyph 
     ranges. This is returned by <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-getglyphs">GetGlyphs</a>.</param>
      <param name="textProps">A pointer to an array of structures that contains  shaping properties for each character. This structure is returned by 
     <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-getglyphs">GetGlyphs</a>.</param>
      <param name="textLength">The text length of <i>textString</i>.</param>
      <param name="glyphIndices">An array of glyph indices returned by <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-getglyphs">GetGlyphs</a>.</param>
      <param name="glyphProps">A pointer to an array of structures that contain  shaping properties for each glyph returned by <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-getglyphs">GetGlyphs</a>.</param>
      <param name="glyphCount">The number of glyphs returned from <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-getglyphs">GetGlyphs</a>.</param>
      <param name="fontFace">A pointer to the font face that is the source for the output glyphs.</param>
      <param name="fontEmSize">The logical font size in DIPs.</param>
      <param name="isSideways">A Boolean flag set to <b>TRUE</b> if the text is intended to be
     drawn vertically.</param>
      <param name="isRightToLeft">A Boolean flag set to <b>TRUE</b> for right-to-left text.</param>
      <param name="scriptAnalysis">A pointer to a Script analysis result from an <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextanalyzer-analyzescript">AnalyzeScript</a> call.</param>
      <param name="localeName">An array of characters containing the locale to use when selecting glyphs.
     For example, the same character may map to different glyphs for ja-jp versus zh-chs.
     If this is <b>NULL</b>, the default mapping based on the script is used.</param>
      <param name="features">An array of pointers to the sets of typographic 
     features to use in each feature range.</param>
      <param name="featureRangeLengths">The length of each feature range, in characters.  
     The sum of all lengths should be equal to <i>textLength</i>.</param>
      <param name="featureRanges">The number of feature ranges.</param>
      <param name="glyphAdvances">When this method returns, contains the advance width of each glyph.</param>
      <param name="glyphOffsets">When this method returns, contains the offset of the origin of each glyph.</param>
    </summary>
  </comment>
  <comment id="ID2D1ColorContext::GetProfile">
    <summary>
      <para>Gets the color profile bytes for an ID2D1ColorContext.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1colorcontext-getprofile" /></para>
      <param name="profile">When this method returns, contains the color profile.</param>
      <param name="profileSize">The size of the <i>profile</i> buffer.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFamily::GetMatchingFonts">
    <summary>
      <para>Gets a list of fonts in the font family ranked in order of how well they match the specified properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getmatchingfonts" /></para>
      <param name="weight">A value that is used to match a requested font weight.</param>
      <param name="stretch">A value that is used to match a requested font stretch.</param>
      <param name="style">A value that is used to match a requested font style.</param>
      <param name="matchingFonts">An address of a pointer to the newly created <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefontlist">IDWriteFontList</a> object.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::SetGamma">
    <summary>
      <para>Sets the desired gamma value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setgamma" /></para>
      <param name="gamma">The desired gamma value.</param>
    </summary>
  </comment>
  <comment id="WICComponentSigning">
    <summary>
      <para>Specifies the component signing status.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wiccomponentsigning" /></para>
    </summary>
  </comment>
  <comment id="WICComponentSigning::WICComponentSigned">
    <summary>A signed component.</summary>
  </comment>
  <comment id="WICComponentSigning::WICComponentUnsigned">
    <summary>An unsigned component</summary>
  </comment>
  <comment id="WICComponentSigning::WICComponentSafe">
    <summary>A component is safe.
            

Components that do not have a binary component to sign, such as a pixel format, should return this value.</summary>
  </comment>
  <comment id="WICComponentSigning::WICComponentDisabled">
    <summary>A component has been disabled.</summary>
  </comment>
  <comment id="ID2D1Effect::SetInputCount">
    <summary>
      <para>Allows the application to change the number of inputs to an effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1effect-setinputcount" /></para>
      <param name="inputCount">The number of inputs to the effect.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::GetNextChild">
    <summary>
      <para>Gets the next sibling of the referenceChild element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getnextchild" /></para>
      <param name="referenceChild">The referenceChild must be an immediate child of this element.</param>
      <param name="nextChild">The output nextChild element will be non-null if the referenceChild has a next sibling. If the referenceChild is the last child, the output is null.</param>
    </summary>
  </comment>
  <comment id="D2D1_INK_STYLE_PROPERTIES">
    <summary>
      <para>Defines the general pen tip shape and the transform used in an ID2D1InkStyle object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ns-d2d1_3-d2d1_ink_style_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_INK_STYLE_PROPERTIES::nibShape">
    <summary>The pre-transform shape of the nib (pen tip) used to draw a given ink object.</summary>
  </comment>
  <comment id="D2D1_INK_STYLE_PROPERTIES::nibTransform">
    <summary>The transform applied to the nib.  Note that the translation components of the transform matrix are ignored for the purposes of rendering.</summary>
  </comment>
  <comment id="ID2D1CommandSink::FillGeometry">
    <summary>
      <para>Indicates to the command sink a geometry to be filled.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-fillgeometry" /></para>
      <param name="geometry">The geometry that should be filled.</param>
      <param name="brush">The primary brush used to fill the geometry.</param>
      <param name="opacityBrush">A brush whose alpha channel is used to modify the opacity of the primary fill brush.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::Flush">
    <summary>
      <para>Executes all pending drawing commands.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-flush" /></para>
      <param name="tag1">When this method returns, contains the tag for drawing operations that caused errors or 0 if there were no errors. This parameter is passed uninitialized.</param>
      <param name="tag2">When this method returns, contains the tag for drawing operations that caused errors or 0 if there were no errors. This parameter is passed uninitialized.</param>
    </summary>
  </comment>
  <comment id="IWICJpegFrameEncode">
    <summary>
      <para>Exposes methods for writing compressed JPEG scan data directly to the WIC encoder's output stream. Also provides access to the Huffman and quantization tables.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicjpegframeencode" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFont::GetFontFamily">
    <summary>
      <para>Gets the font family to which the specified font belongs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefont-getfontfamily" /></para>
      <param name="fontFamily">When this method returns, contains an address of a pointer to the font family object to which the specified font belongs.</param>
    </summary>
  </comment>
  <comment id="IDWriteStringList::GetLocaleName">
    <summary>
      <para>Copies the locale name with the specified index to the specified array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritestringlist-getlocalename" /></para>
      <param name="listIndex">Zero-based index of the locale name.</param>
      <param name="localeName">Character array that receives the locale name.</param>
      <param name="size">Size of the array in characters. The size must include space for the terminating null character.</param>
    </summary>
  </comment>
  <comment id="D2D1_SHARPEN_PROP">
    <summary>
      <para>Identifiers for properties of the Sharpen effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_sharpen_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SHARPEN_PROP::D2D1_SHARPEN_PROP_SHARPNESS">
    <summary>The D2D1_SHARPEN_PROP_SHARPNESS property is a float value indicating how much to sharpen the input image.  The allowed range is 0.0 to 10.0. The default value is 0.0.</summary>
  </comment>
  <comment id="D2D1_SHARPEN_PROP::D2D1_SHARPEN_PROP_THRESHOLD">
    <summary>The D2D1_SHARPEN_PROP_THRESHOLD property is a float value.  The allowed range is 0.0 to 1.0. The default value is 0.0.</summary>
  </comment>
  <comment id="IDWriteTextLayout::SetTypography">
    <summary>
      <para>Sets font typography features for text within a specified text range.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-settypography" /></para>
      <param name="typography">Pointer to font typography settings.</param>
      <param name="textRange">Text range to which this change applies.</param>
    </summary>
  </comment>
  <comment id="IDWriteRemoteFontFileLoader::CreateFontFileReferenceFromUrl">
    <summary>
      <para>Creates a font file reference from a URL if the loader supports this capability.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwriteremotefontfileloader-createfontfilereferencefromurl" /></para>
      <param name="factory">Factory used to create the font file reference.</param>
      <param name="baseUrl">Optional base URL. The base URL is used to resolve the fontFileUrl if it is relative. For example, the baseUrl might be the URL of the referring document
          that contained the fontFileUrl.</param>
      <param name="fontFileUrl">URL of the font resource.</param>
      <param name="fontFile">Receives a pointer to the newly created font file reference.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontSet3">
    <summary>
      <para>Represents a font set.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontset3" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgPaint::GetColor">
    <summary>
      <para>Gets the paint color that is used if the paint type is D2D1_SVG_PAINT_TYPE_COLOR.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-getcolor" /></para>
      <param name="color">The paint color that is used if the paint type is D2D1_SVG_PAINT_TYPE_COLOR.</param>
    </summary>
  </comment>
  <comment id="D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES">
    <summary>
      <para>Contains the gradient origin offset and the size and position of the gradient ellipse for an ID2D1RadialGradientBrush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_radial_gradient_brush_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES::center">
    <summary>In the brush's coordinate space, the center of the gradient ellipse.</summary>
  </comment>
  <comment id="D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES::gradientOriginOffset">
    <summary>In the brush's coordinate space, the offset of the gradient origin relative to the gradient ellipse's center.</summary>
  </comment>
  <comment id="D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES::radiusX">
    <summary>In the brush's coordinate space, the x-radius  of the gradient ellipse.</summary>
  </comment>
  <comment id="D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES::radiusY">
    <summary>In the brush's coordinate space, the y-radius  of the gradient ellipse.</summary>
  </comment>
  <comment id="IWICStream::InitializeFromFilename">
    <summary>
      <para>Initializes a stream from a particular file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicstream-initializefromfilename" /></para>
      <param name="wzFileName">The file used to initialize the stream.</param>
      <param name="dwDesiredAccess">The desired file access mode.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id="GENERIC_READ"></a><a id="generic_read"></a><dl>
<dt><b>GENERIC_READ</b></dt>
</dl>
</td>
<td width="60%">
Read access.

</td>
</tr>
<tr>
<td width="40%"><a id="GENERIC_WRITE"></a><a id="generic_write"></a><dl>
<dt><b>GENERIC_WRITE</b></dt>
</dl>
</td>
<td width="60%">
Write access.

</td>
</tr>
</table></param>
    </summary>
  </comment>
  <comment id="ID2D1TransformedGeometry::GetSourceGeometry">
    <summary>
      <para>Retrieves the source geometry of this transformed geometry object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1transformedgeometry-getsourcegeometry" /></para>
      <param name="sourceGeometry">When this method returns, contains a pointer to a pointer to the source geometry for this transformed geometry object. This parameter is passed uninitialized.</param>
    </summary>
  </comment>
  <comment id="D2D1_CONTRAST_PROP">
    <summary>
      <para>Identifiers for properties of the Contrast effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_contrast_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_CONTRAST_PROP::D2D1_CONTRAST_PROP_CONTRAST">
    <summary>The D2D1_CONTRAST_PROP_CONTRAST property is a float value indicating the amount by which to adjust the contrast of the image. Negative values reduce contrast, while positive values increase contrast.  
          Minimum value is -1.0f, maximum value is 1.0f.  The default value for the property is 0.0f.</summary>
  </comment>
  <comment id="D2D1_CONTRAST_PROP::D2D1_CONTRAST_PROP_CLAMP_INPUT">
    <summary>The D2D1_CONTRAST_PROP_CLAMP_INPUT property is a boolean value indicating whether or not to clamp the input to [0.0, 1.0]. The default value for the property is FALSE.</summary>
  </comment>
  <comment id="IWICPlanarBitmapSourceTransform::CopyPixels">
    <summary>
      <para>Copies pixels into the destination planes. Configured by the supplied input parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicplanarbitmapsourcetransform-copypixels" /></para>
      <param name="prcSource">The source rectangle of pixels to copy.</param>
      <param name="uiWidth">The width to scale the source bitmap.  This parameter must be equal to a value obtainable through <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicplanarbitmapsourcetransform-doessupporttransform">IWICPlanarBitmapSourceTransform:: DoesSupportTransform</a>.</param>
      <param name="uiHeight">The height to scale the source bitmap.  This parameter must be equal to a value obtainable through <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicplanarbitmapsourcetransform-doessupporttransform">IWICPlanarBitmapSourceTransform:: DoesSupportTransform</a>.</param>
      <param name="dstTransform">The desired rotation or flip to perform prior to the pixel copy.  A rotate can be combined with a flip horizontal or a flip vertical, see <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmaptransformoptions">WICBitmapTransformOptions</a>.</param>
      <param name="dstPlanarOptions">Used to specify additional configuration options for the transform.  See <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicplanaroptions">WICPlanarOptions</a> for more detail.

WIC JPEG Decoder:
<a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicplanaroptions">WICPlanarOptionsPreserveSubsampling</a> can be specified to retain the subsampling ratios when downscaling.  By default, the JPEG decoder attempts to preserve quality by downscaling only the Y plane in some cases, changing the image to 4:4:4 chroma subsampling.</param>
      <param name="dstPlanes">Specifies the pixel format and output buffer for each component plane.  The number of planes and pixel format of each plane must match values obtainable through  <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicplanarbitmapsourcetransform-doessupporttransform">IWICPlanarBitmapSourceTransform::DoesSupportTransform</a>.</param>
      <param name="cPlanes">The number of component planes specified by the <i>pDstPlanes</i> parameter.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::CreateChild">
    <summary>
      <para>Creates an element from a tag name. The element is appended to the list of children.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-createchild" /></para>
      <param name="tagName">The tag name of the new child. An empty string is interpreted to be a text content element.</param>
      <param name="newChild">The new child element.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::SetTransform">
    <summary>
      <para>Sets a new transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-settransform" /></para>
      <param name="transform">The transform to be set.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataReaderInfo">
    <summary>
      <para>Exposes methods that provide basic information about the registered metadata reader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicmetadatareaderinfo" /></para>
    </summary>
  </comment>
  <comment id="D2D1MakeSkewMatrix">
    <summary>
      <para>Creates a skew transformation that has the specified x-axis angle, y-axis angle, and center point.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-d2d1makeskewmatrix" /></para>
      <param name="angleX">The x-axis skew angle, which is measured in degrees counterclockwise from the y-axis.</param>
      <param name="angleY">The y-axis skew angle, which is measured in degrees counterclockwise from the x-axis.</param>
      <param name="center">The center point of the skew operation.</param>
      <param name="matrix">When this method returns, contains the rotation transformation. You must allocate storate for this parameter.</param>
    </summary>
  </comment>
  <comment id="D2D1_SVG_VISIBILITY">
    <summary>
      <para>Specifies a value for the SVG visibility property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_visibility" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_VISIBILITY::D2D1_SVG_VISIBILITY_VISIBLE">
    <summary>The element is visible.</summary>
  </comment>
  <comment id="D2D1_SVG_VISIBILITY::D2D1_SVG_VISIBILITY_HIDDEN">
    <summary>The element is invisible.</summary>
  </comment>
  <comment id="IWICMetadataReader::GetValueByIndex">
    <summary>
      <para>Gets the metadata item at the given index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareader-getvaluebyindex" /></para>
      <param name="nIndex">The index of the metadata item to retrieve.</param>
      <param name="pvarSchema">Pointer that receives the schema property.</param>
      <param name="pvarId">Pointer that receives the id property.</param>
      <param name="pvarValue">Pointer that receives the metadata value.</param>
    </summary>
  </comment>
  <comment id="IWICFormatConverter">
    <summary>
      <para>Represents an IWICBitmapSource that converts the image data from one pixel format to another, handling dithering and halftoning to indexed formats, palette translation and alpha thresholding.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicformatconverter" /></para>
    </summary>
  </comment>
  <comment id="ID2D1BitmapBrush1::GetInterpolationMode1">
    <summary>
      <para>Returns the current interpolation mode of the brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1bitmapbrush1-getinterpolationmode1" /></para>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::GetDevice">
    <summary>
      <para>Gets the device associated with a device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-getdevice" /></para>
      <param name="device">When this method returns, contains the address of a pointer to a Direct2D device associated with this device context.</param>
    </summary>
  </comment>
  <comment id="ID2D1Properties">
    <summary>
      <para>Represents a set of run-time bindable and discoverable properties that allow a data-driven application to modify the state of a Direct2D effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1properties" /></para>
    </summary>
  </comment>
  <comment id="ID2D1StrokeStyle::GetMiterLimit">
    <summary>
      <para>Retrieves the limit on the ratio of the miter length to half the stroke's thickness.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getmiterlimit" /></para>
    </summary>
  </comment>
  <comment id="IDWriteGdiInterop1::GetMatchingFontsByLOGFONT">
    <summary>
      <para>Gets a list of matching fonts based on the specified LOGFONT values. Only fonts of that family name will be returned.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritegdiinterop1-getmatchingfontsbylogfont" /></para>
      <param name="logFont">Structure containing a GDI-compatible font description.</param>
      <param name="fontSet">The font set to search.</param>
      <param name="filteredSet">&gt;Receives the filtered font set if successful.</param>
    </summary>
  </comment>
  <comment id="ID2D1Transform">
    <summary>
      <para>Represents the base interface for all of the transforms implemented by the transform author.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1transform" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTypography::GetFontFeatureCount">
    <summary>
      <para>Gets the number of OpenType font features for the current font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetypography-getfontfeaturecount" /></para>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateEncoder">
    <summary>
      <para>Creates a new instance of the IWICBitmapEncoder class.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createencoder" /></para>
      <param name="guidContainerFormat">The GUID for the desired container format.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatBmp</dt>
</dl>
</td>
<td width="60%">
The BMP container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatPng</dt>
</dl>
</td>
<td width="60%">
The PNG container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatIco</dt>
</dl>
</td>
<td width="60%">
The ICO container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatJpeg</dt>
</dl>
</td>
<td width="60%">
The JPEG container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatTiff</dt>
</dl>
</td>
<td width="60%">
The TIFF container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatGif</dt>
</dl>
</td>
<td width="60%">
The GIF container format GUID.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_ContainerFormatWmp</dt>
</dl>
</td>
<td width="60%">
The HD Photo container format GUID.

</td>
</tr>
</table></param>
      <param name="pguidVendor">The GUID for the preferred encoder vendor. 

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>NULL</dt>
</dl>
</td>
<td width="60%">
No preferred codec vendor.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_VendorMicrosoft</dt>
</dl>
</td>
<td width="60%">
Prefer to use Microsoft encoder.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>GUID_VendorMicrosoftBuiltIn</dt>
</dl>
</td>
<td width="60%">
Prefer to use the native Microsoft encoder.

</td>
</tr>
</table></param>
      <param name="iEncoder">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapencoder">IWICBitmapEncoder</a>.</param>
    </summary>
  </comment>
  <comment id="D2D1_PRESENT_OPTIONS">
    <summary>
      <para>Describes how a render target behaves when it presents its content. This enumeration allows a bitwise combination of its member values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_present_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_PRESENT_OPTIONS::D2D1_PRESENT_OPTIONS_NONE">
    <summary>The render target waits until the display refreshes to present and discards the frame upon presenting.</summary>
  </comment>
  <comment id="D2D1_PRESENT_OPTIONS::D2D1_PRESENT_OPTIONS_RETAIN_CONTENTS">
    <summary>The render target does not discard the frame upon presenting.</summary>
  </comment>
  <comment id="D2D1_PRESENT_OPTIONS::D2D1_PRESENT_OPTIONS_IMMEDIATELY">
    <summary>The render target does not wait until the display refreshes to present.</summary>
  </comment>
  <comment id="ID2D1TransformGraph::AddNode">
    <summary>
      <para>Adds the provided node to the transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-addnode" /></para>
      <param name="node">The node that will be added to the transform graph.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontSet::GetFontCount">
    <summary>
      <para>Get the number of total fonts in the set.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontset-getfontcount" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DC_INITIALIZE_MODE">
    <summary>
      <para>Specifies how a device context is initialized for GDI rendering when it is retrieved from the render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_dc_initialize_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DC_INITIALIZE_MODE::D2D1_DC_INITIALIZE_MODE_COPY">
    <summary>The current contents of the render target are copied to the device context when it is initialized.</summary>
  </comment>
  <comment id="D2D1_DC_INITIALIZE_MODE::D2D1_DC_INITIALIZE_MODE_CLEAR">
    <summary>The device context is cleared to transparent black when it is initialized.</summary>
  </comment>
  <comment id="ID2D1BoundsAdjustmentTransform::GetOutputBounds">
    <summary>
      <para>Returns the output rectangle of the support transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1boundsadjustmenttransform-getoutputbounds" /></para>
      <param name="outputBounds">The output bounds.</param>
    </summary>
  </comment>
  <comment id="D2D1_BITMAP_BRUSH_PROPERTIES1">
    <summary>
      <para>Describes the extend modes and the interpolation mode of an ID2D1BitmapBrush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_bitmap_brush_properties1" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BITMAP_BRUSH_PROPERTIES1::extendModeX">
    <summary>A value that describes how the brush horizontally tiles those areas that extend past its bitmap.</summary>
  </comment>
  <comment id="D2D1_BITMAP_BRUSH_PROPERTIES1::extendModeY">
    <summary>A value that describes how the brush vertically tiles those areas that extend past its bitmap.</summary>
  </comment>
  <comment id="D2D1_BITMAP_BRUSH_PROPERTIES1::interpolationMode">
    <summary>A value that specifies how the bitmap is interpolated when it is scaled or rotated.</summary>
  </comment>
  <comment id="ID2D1PathGeometry">
    <summary>
      <para>Represents a complex shape that may be composed of arcs, curves, and lines.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1pathgeometry" /></para>
    </summary>
  </comment>
  <comment id="IWICMetadataReader::GetMetadataFormat">
    <summary>
      <para>Gets the metadata format associated with the reader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareader-getmetadataformat" /></para>
      <param name="pguidMetadataFormat">Pointer that receives the metadata format GUID.</param>
    </summary>
  </comment>
  <comment id="WICGifImageDescriptorProperties">
    <summary>
      <para>Specifies the image descriptor metadata properties for Graphics Interchange Format (GIF) frames.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicgifimagedescriptorproperties" /></para>
    </summary>
  </comment>
  <comment id="WICGifImageDescriptorProperties::WICGifImageDescriptorLeft">
    <summary>[VT_UI2] Indicates the X offset at which to locate this frame within the logical screen.</summary>
  </comment>
  <comment id="WICGifImageDescriptorProperties::WICGifImageDescriptorTop">
    <summary>[VT_UI2] Indicates the Y offset at which to locate this frame within the logical screen.</summary>
  </comment>
  <comment id="WICGifImageDescriptorProperties::WICGifImageDescriptorWidth">
    <summary>[VT_UI2] Indicates width of this frame, in pixels.</summary>
  </comment>
  <comment id="WICGifImageDescriptorProperties::WICGifImageDescriptorHeight">
    <summary>[VT_UI2] Indicates height of this frame, in pixels.</summary>
  </comment>
  <comment id="WICGifImageDescriptorProperties::WICGifImageDescriptorLocalColorTableFlag">
    <summary>[VT_BOOL] Indicates the local color table flag. <b>TRUE</b> if global color table is present; otherwise, <b>FALSE</b>.</summary>
  </comment>
  <comment id="WICGifImageDescriptorProperties::WICGifImageDescriptorInterlaceFlag">
    <summary>[VT_BOOL] Indicates the interlace flag. <b>TRUE</b> if image is interlaced; otherwise, <b>FALSE</b>.</summary>
  </comment>
  <comment id="WICGifImageDescriptorProperties::WICGifImageDescriptorSortFlag">
    <summary>[VT_BOOL] Indicates the sorted color table flag. <b>TRUE</b> if the color table is sorted from most frequently to least frequently used color; otherwise, <b>FALSE</b>.</summary>
  </comment>
  <comment id="WICGifImageDescriptorProperties::WICGifImageDescriptorLocalColorTableSize">
    <summary>[VT_UI1] Indicates the value used to calculate the number of bytes contained in the global color table. 

To calculate the actual size of the color table, raise 2 to the value of the field + 1.</summary>
  </comment>
  <comment id="ID2D1InkStyle">
    <summary>
      <para>Represents a collection of style properties to be used by methods like ID2D1DeviceContext2::DrawInkwhen rendering ink. The ink style defines the nib (pen tip) shape and transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1inkstyle" /></para>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateStream">
    <summary>
      <para>Creates a new instance of the IWICStream class.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createstream" /></para>
      <param name="iWICStream">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicstream">IWICStream</a>.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFamily1::GetFontFaceReference">
    <summary>
      <para>Gets a font face reference given its zero-based index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfamily1-getfontfacereference" /></para>
      <param name="listIndex">Zero-based index of the font in the font list.</param>
      <param name="fontFaceReference">A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_3/nn-dwrite_3-idwritefontfacereference">IDWriteFontFaceReference</a> interface for the newly created font face reference object.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer1::GetGlyphOrientationTransform">
    <summary>
      <para>Returns 2x3 transform matrix for the respective angle to draw the glyph run.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextanalyzer1-getglyphorientationtransform" /></para>
      <param name="glyphOrientationAngle">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ne-dwrite_1-dwrite_glyph_orientation_angle">DWRITE_GLYPH_ORIENTATION_ANGLE</a>-typed value that specifies the angle that was reported into
    <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/nf-dwrite_1-idwritetextanalysissink1-setglyphorientation">IDWriteTextAnalysisSink1::SetGlyphOrientation</a>.</param>
      <param name="isSideways">Whether the run's glyphs are sideways or not.</param>
      <param name="transform">Returned transform.</param>
    </summary>
  </comment>
  <comment id="IDWriteFont">
    <summary>
      <para>Represents a physical font in a font collection. This interface is used to create font faces from physical fonts, or to retrieve information such as font face metrics or face names from existing font faces.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritefont" /></para>
    </summary>
  </comment>
  <comment id="ID2D1BitmapBrush1::SetInterpolationMode1">
    <summary>
      <para>Sets the interpolation mode for the brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1bitmapbrush1-setinterpolationmode1" /></para>
      <param name="interpolationMode">The mode to use.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRawNotificationCallback::Notify">
    <summary>
      <para>An application-defined callback method used for raw image parameter change notifications.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdeveloprawnotificationcallback-notify" /></para>
      <param name="notificationMask">A set of <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-iwicdeveloprawnotification-constants">IWICDevelopRawNotificationCallback Constants</a> parameter notification flags.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetFontFamilyName">
    <summary>
      <para>Copies the font family name of the text at the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getfontfamilyname" /></para>
      <param name="currentPosition">The position of the text to examine.</param>
      <param name="fontFamilyName">When this method returns, contains an array of characters that receives the current font family name. You must allocate storage for this parameter.</param>
      <param name="nameSize">The size of the character array in character count including the terminated <b>NULL</b> character.</param>
      <param name="textRange">The range of text that has the same  formatting as the text at the position specified by <i>currentPosition</i>.  This means the run has the exact  formatting as the position specified, including but not limited to the font family name.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink2">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1CommandSink1 interface. It also enables access to ink rendering and gradient mesh rendering.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1commandsink2" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFallback">
    <summary>
      <para>Allows you to access fallback fonts from the font list.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nn-dwrite_2-idwritefontfallback" /></para>
    </summary>
  </comment>
  <comment id="D2D1_EDGEDETECTION_PROP">
    <summary>
      <para>Identifiers for properties of the Edge Detection effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_edgedetection_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_EDGEDETECTION_PROP::D2D1_EDGEDETECTION_PROP_STRENGTH">
    <summary>The D2D1_EDGEDETECTION_PROP_STRENGTH property is a float value modulating the response of the edge detection filter. A low strength value means that weaker edges will get filtered out, 
          while a high value means stronger edges will get filtered out.  The allowed range is 0.0 to 1.0.  The default value is 0.5.</summary>
  </comment>
  <comment id="D2D1_EDGEDETECTION_PROP::D2D1_EDGEDETECTION_PROP_BLUR_RADIUS">
    <summary>The D2D1_EDGEDETECTION_PROP_BLUR_RADIUS property is a float value specifying the amount of blur to apply.  Applying blur is used to remove high frequencies and reduce phantom edges.  
          The allowed range is 0.0 to 10.0. The default value is 0.0 (no blur applied).</summary>
  </comment>
  <comment id="D2D1_EDGEDETECTION_PROP::D2D1_EDGEDETECTION_PROP_MODE">
    <summary>The D2D1_EDGEDETECTION_PROP_MODE property is a <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_2/ne-d2d1effects_2-d2d1_edgedetection_mode">D2D1_EDGEDETECTION_MODE</a> enumeration value which mode to use for edge detection.  
          The default value is D2D1_EDGEDETECTION_MODE_SOBEL.</summary>
  </comment>
  <comment id="D2D1_EDGEDETECTION_PROP::D2D1_EDGEDETECTION_PROP_OVERLAY_EDGES">
    <summary>The D2D1_EDGEDETECTION_PROP_OVERLAY_EDGES property is a boolean value. Edge detection only applies to the RGB channels, the alpha channel is ignored for purposes of detecting edges.
          If D2D1_EDGEDETECTION_PROP_OVERLAY_EDGES is false, the output edges is fully opaque. If D2D1_EDGEDETECTION_PROP_OVERLAY_EDGES is true, the input opacity is preserved.
          The default value is false.</summary>
  </comment>
  <comment id="D2D1_EDGEDETECTION_PROP::D2D1_EDGEDETECTION_PROP_ALPHA_MODE">
    <summary>The D2D1_EDGEDETECTION_PROP_ALPHA_MODE property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ne-dcommon-d2d1_alpha_mode">D2D1_ALPHA_MODE</a> enumeration value indicating the alpha mode of the input file.
          If the input is not opaque, this value is used to determine whether to unpremultiply the inputs.
          See the About Alpha Modes section of the <a href="https://docs.microsoft.com/windows/desktop/Direct2D/supported-pixel-formats-and-alpha-modes">Supported Pixel Formats and Alpha Modes</a> topic for additional information.   
          
          The default value is D2D1_ALPHA_MODE_PREMULTIPLIED.</summary>
  </comment>
  <comment id="IDWriteFontFamily2">
    <summary>
      <para>Represents a family of related fonts. **IDWriteFontFamily2** adds new facilities, including retrieving fonts by font axis values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontfamily2" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetStrikethrough">
    <summary>
      <para>Get the strikethrough presence of the text at the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getstrikethrough" /></para>
      <param name="currentPosition">The position of the text to inspect.</param>
      <param name="hasStrikethrough">A Boolean  flag that indicates whether strikethrough is present at the position indicated by <i>currentPosition</i>.</param>
      <param name="textRange">Contains the range of text that has the same  formatting as the text at the position specified by <i>currentPosition</i>.  This means the run has the exact  formatting as the position specified, including but not limited to strikethrough.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::EndDraw">
    <summary>
      <para>Indicates when ID2D1CommandSink processing has completed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-enddraw" /></para>
    </summary>
  </comment>
  <comment id="ID2D1AnalysisTransform::ProcessAnalysisResults">
    <summary>
      <para>Supplies the analysis data to an analysis transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1analysistransform-processanalysisresults" /></para>
      <param name="analysisData">The data that the transform will analyze.</param>
      <param name="analysisDataCount">The size of the analysis data.</param>
    </summary>
  </comment>
  <comment id="ID2D1GeometrySink">
    <summary>
      <para>Describes a geometric path that can contain lines, arcs, cubic Bezier curves, and quadratic Bezier curves.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1geometrysink" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace3::GetStretch">
    <summary>
      <para>Gets the stretch (also known as width) of this font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface3-getstretch" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::DrawGlyphRun">
    <summary>
      <para>Draws the specified glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-drawglyphrun" /></para>
      <param name="baselineOrigin">The origin, in device-independent pixels, of the glyphs' baseline.</param>
      <param name="glyphRun">The glyphs to render.</param>
      <param name="foregroundBrush">The brush used to paint the specified glyphs.</param>
      <param name="measuringMode">A value that indicates how glyph metrics are used to measure text when it is formatted.  The default value is <a href="https://docs.microsoft.com/windows/win32/api/dcommon/ne-dcommon-dwrite_measuring_mode">DWRITE_MEASURING_MODE_NATURAL</a>.</param>
    </summary>
  </comment>
  <comment id="IWICJpegFrameDecode">
    <summary>
      <para>Exposes methods for decoding JPEG images. Provides access to the Start Of Frame (SOF) header, Start of Scan (SOS) header, the Huffman and Quantization tables, and the compressed JPEG JPEG data. Also enables indexing for efficient random access.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicjpegframedecode" /></para>
    </summary>
  </comment>
  <comment id="WICCreateBitmapFromSection">
    <summary>
      <para>Returns a IWICBitmapSource that is backed by the pixels of a Windows Graphics Device Interface (GDI) section handle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-wiccreatebitmapfromsection" /></para>
      <param name="width">The width of the bitmap pixels.</param>
      <param name="height">The height of the bitmap pixels.</param>
      <param name="pixelFormat">The pixel format of the bitmap.</param>
      <param name="hSection">The section handle. This is a file mapping object handle returned by the <a href="https://docs.microsoft.com/windows/desktop/api/winbase/nf-winbase-createfilemappinga">CreateFileMapping</a> function.</param>
      <param name="stride">The byte count of each scanline.</param>
      <param name="offset">The offset into the section.</param>
      <param name="iBitmap">A pointer that receives the bitmap.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFileStream::ReleaseFileFragment">
    <summary>
      <para>Releases a fragment from a file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfilestream-releasefilefragment" /></para>
      <param name="fragmentContext">A pointer to the client-defined context of a font fragment returned from <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritefontfilestream-readfilefragment">ReadFileFragment</a>.</param>
    </summary>
  </comment>
  <comment id="WICComponentType">
    <summary>
      <para>Specifies the type of Windows Imaging Component (WIC) component.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wiccomponenttype" /></para>
    </summary>
  </comment>
  <comment id="WICComponentType::WICDecoder">
    <summary>A WIC decoder.</summary>
  </comment>
  <comment id="WICComponentType::WICEncoder">
    <summary>A WIC encoder.</summary>
  </comment>
  <comment id="WICComponentType::WICPixelFormatConverter">
    <summary>A WIC pixel converter.</summary>
  </comment>
  <comment id="WICComponentType::WICMetadataReader">
    <summary>A WIC metadata reader.</summary>
  </comment>
  <comment id="WICComponentType::WICMetadataWriter">
    <summary>A WIC metadata writer.</summary>
  </comment>
  <comment id="WICComponentType::WICPixelFormat">
    <summary>A WIC pixel format.</summary>
  </comment>
  <comment id="WICComponentType::WICAllComponents">
    <summary>All WIC components.</summary>
  </comment>
  <comment id="ID2D1SvgPathData">
    <summary>
      <para>Interface describing SVG path data. Path data can be set as the 'd' attribute on a 'path' element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nn-d2d1svg-id2d1svgpathdata" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BUFFER_PRECISION">
    <summary>
      <para>Represents the bit depth of the imaging pipeline in Direct2D.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_buffer_precision" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BUFFER_PRECISION::D2D1_BUFFER_PRECISION_UNKNOWN">
    <summary>The buffer precision is not specified.</summary>
  </comment>
  <comment id="D2D1_BUFFER_PRECISION::D2D1_BUFFER_PRECISION_8BPC_UNORM">
    <summary>Use 8-bit normalized integer per channel.</summary>
  </comment>
  <comment id="D2D1_BUFFER_PRECISION::D2D1_BUFFER_PRECISION_8BPC_UNORM_SRGB">
    <summary>Use 8-bit normalized integer standard RGB data per channel.</summary>
  </comment>
  <comment id="D2D1_BUFFER_PRECISION::D2D1_BUFFER_PRECISION_16BPC_UNORM">
    <summary>Use 16-bit normalized integer per channel.</summary>
  </comment>
  <comment id="D2D1_BUFFER_PRECISION::D2D1_BUFFER_PRECISION_16BPC_FLOAT">
    <summary>Use 16-bit floats per channel.</summary>
  </comment>
  <comment id="D2D1_BUFFER_PRECISION::D2D1_BUFFER_PRECISION_32BPC_FLOAT">
    <summary>Use 32-bit floats per channel.</summary>
  </comment>
  <comment id="D2D1_BUFFER_PRECISION::D2D1_BUFFER_PRECISION_FORCE_DWORD">
    <summary>Forces this enumeration to compile to 32 bits in size. Without this value, some compilers would allow this enumeration to compile to a size other than 32 bits.

Do not use this value.</summary>
  </comment>
  <comment id="D2D1_TABLETRANSFER_PROP">
    <summary>
      <para>Identifiers for properties of the Table transfer effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_tabletransfer_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_RED_TABLE">
    <summary>The list of values used to define the transfer function for the Red channel.
            

The type is FLOAT[].

The default is {0.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_RED_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Red channel.
            If you set this to FALSE it applies the RedTableTransfer function to the Red channel.
            

The type is BOOL.

The default is FALSE.</summary>
  </comment>
  <comment id="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_GREEN_TABLE">
    <summary>The list of values used to define the transfer function for the Green channel.
            

The type is FLOAT[].

The default is {0.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_GREEN_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Green channel.
            If you set this to FALSE it applies the GreenTableTransfer function to the Green channel.
            

The type is BOOL.

The default is FALSE.</summary>
  </comment>
  <comment id="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_BLUE_TABLE">
    <summary>The list of values used to define the transfer function for the Blue channel.
            

The type is FLOAT[].

The default is {0.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_BLUE_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Blue channel.
            If you set this to FALSE it applies the BlueTableTransfer function to the Blue channel.
            

The type is BOOL.

The default is FALSE.</summary>
  </comment>
  <comment id="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_ALPHA_TABLE">
    <summary>The list of values used to define the transfer function for the Alpha channel.
            

The type is FLOAT[].

The default is {0.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_ALPHA_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Alpha channel.
            If you set this to FALSE it applies the AlphaTableTransfer function to the Alpha channel.
            

The type is BOOL.

The default is FALSE.</summary>
  </comment>
  <comment id="D2D1_TABLETRANSFER_PROP::D2D1_TABLETRANSFER_PROP_CLAMP_OUTPUT">
    <summary>Whether the effect clamps color values to between 0 and 1 before the effect passes the values to the next effect in the graph. The effect clamps the values before it premultiplies the alpha.
            

If you set this to TRUE the effect will clamp the values. If you set this to FALSE, the effect will not clamp the color values, 
            but other effects and the output surface may clamp the values if they are not of high enough precision.

The type is BOOL.

The default is FALSE.</summary>
  </comment>
  <comment id="ID2D1DeviceContext::GetEffectInvalidRectangles">
    <summary>
      <para>Gets the invalid rectangles that have accumulated since the last time the effect was drawn and EndDraw was then called on the device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-geteffectinvalidrectangles" /></para>
      <param name="effect">The effect to get the invalid rectangles from.</param>
      <param name="rectangles">An array of <a href="https://docs.microsoft.com/windows/desktop/Direct2D/d2d1-rect-f">D2D1_RECT_F</a> structures.  You must allocate this to the correct size.  You can get the count of the invalid rectangles using the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nf-d2d1_1-id2d1devicecontext-geteffectinvalidrectanglecount">GetEffectInvalidRectangleCount</a> method.</param>
      <param name="rectanglesCount">The number of rectangles to get.</param>
    </summary>
  </comment>
  <comment id="ID2D1Bitmap::GetPixelSize">
    <summary>
      <para>Returns the size, in device-dependent units (pixels), of the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmap-getpixelsize" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapEncoder::Initialize">
    <summary>
      <para>Initializes the encoder with an IStream which tells the encoder where to encode the bits.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-initialize" /></para>
      <param name="iStream">The output stream.</param>
      <param name="cacheOption">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapencodercacheoption">WICBitmapEncoderCacheOption</a> used on initialization.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontDownloadQueue">
    <summary>
      <para>Interface that enqueues download requests for remote fonts, characters, glyphs, and font fragments.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontdownloadqueue" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFile::Analyze">
    <summary>
      <para>Analyzes a file and returns whether it represents a font, and whether the font type is supported by the font system.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfile-analyze" /></para>
      <param name="isSupportedFontType"><b>TRUE</b> if the font type is supported by the font system; otherwise, <b>FALSE</b>.</param>
      <param name="fontFileType">When this method returns, contains a value that indicates the type of the font file. Note that even if <i> isSupportedFontType</i> is <b>FALSE</b>,
     the <i>fontFileType</i> value may be different from <b>DWRITE_FONT_FILE_TYPE_UNKNOWN</b>.</param>
      <param name="fontFaceType">When this method returns, contains a value that indicates the type of the font face. If <i>fontFileType</i> is not equal to <b>DWRITE_FONT_FILE_TYPE_UNKNOWN</b>, then that can be constructed from the font file.</param>
      <param name="numberOfFaces">When this method returns, contains the number of font faces contained in the font file.</param>
    </summary>
  </comment>
  <comment id="ID2D1PathGeometry1">
    <summary>
      <para>The ID2D1PathGeometry1 interface adds functionality to ID2D1PathGeometry. In particular, it provides the path geometry-specific ComputePointAndSegmentAtLength method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1pathgeometry1" /></para>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateBitmapFromMemory">
    <summary>
      <para>Creates an IWICBitmap from a memory block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmapfrommemory" /></para>
      <param name="uiWidth">The width of the new bitmap.</param>
      <param name="uiHeight">The height of the new bitmap.</param>
      <param name="pixelFormat">The pixel format of the new bitmap.  For valid pixel formats, see <a href="https://docs.microsoft.com/windows/desktop/wic/-wic-codec-native-pixel-formats">Native Pixel Formats</a>.</param>
      <param name="cbStride">The number of bytes between successive scanlines in <i>pbBuffer</i>.</param>
      <param name="cbBufferSize">The size of <i>pbBuffer</i>.</param>
      <param name="pbBuffer">The buffer used to create the bitmap.</param>
      <param name="iBitmap">A pointer that receives a pointer to the new bitmap.</param>
    </summary>
  </comment>
  <comment id="WICBitmapInterpolationMode">
    <summary>
      <para>Specifies the sampling or filtering mode to use when scaling an image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmapinterpolationmode" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapInterpolationMode::WICBitmapInterpolationModeNearestNeighbor">
    <summary>A nearest neighbor interpolation algorithm. Also known as nearest pixel or point interpolation.
            

The output pixel is assigned the value of the pixel that the point falls within. No other pixels are considered.</summary>
  </comment>
  <comment id="WICBitmapInterpolationMode::WICBitmapInterpolationModeLinear">
    <summary>A bilinear interpolation algorithm.
            

The output pixel values are computed as a weighted average of the nearest four pixels in a 2x2 grid.</summary>
  </comment>
  <comment id="WICBitmapInterpolationMode::WICBitmapInterpolationModeCubic">
    <summary>A bicubic interpolation algorithm.
            

Destination pixel values are computed as a weighted average of the nearest sixteen pixels in a 4x4 grid.</summary>
  </comment>
  <comment id="WICBitmapInterpolationMode::WICBitmapInterpolationModeFant">
    <summary>A Fant resampling algorithm.
            

Destination pixel values are computed as a weighted average of the all the pixels that map to the new pixel.</summary>
  </comment>
  <comment id="WICBitmapInterpolationMode::WICBitmapInterpolationModeHighQualityCubic">
    <summary>A high quality bicubic interpolation algorithm. Destination pixel values are computed using a much denser sampling 
      kernel than regular cubic. The kernel is resized in response to the scale factor, making it suitable for downscaling by factors greater than 2.

<div class="alert"><b>Note</b>  This value is supported beginning with Windows 10.</div>
<div> </div></summary>
  </comment>
  <comment id="ID2D1DeviceContext4::CreateSvgGlyphStyle">
    <summary>
      <para>Creates an SVG glyph style object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext4-createsvgglyphstyle" /></para>
      <param name="svgGlyphStyle">On completion points to the created <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1svgglyphstyle">ID2D1SvgGlyphStyle</a> object.</param>
    </summary>
  </comment>
  <comment id="IWICStreamProvider::GetStream">
    <summary>
      <para>Gets the stream held by the component.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicstreamprovider-getstream" /></para>
      <param name="iStream">Pointer that receives a pointer to the stream held by the component.</param>
    </summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_SCALE_MODE">
    <summary>
      <para>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_distantdiffuse_scale_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_SCALE_MODE::D2D1_DISTANTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_SCALE_MODE::D2D1_DISTANTDIFFUSE_SCALE_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode outputs a higher quality image than nearest neighbor.</summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_SCALE_MODE::D2D1_DISTANTDIFFUSE_SCALE_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_SCALE_MODE::D2D1_DISTANTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_SCALE_MODE::D2D1_DISTANTDIFFUSE_SCALE_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </comment>
  <comment id="D2D1_DISTANTDIFFUSE_SCALE_MODE::D2D1_DISTANTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. 
          Then uses the cubic interpolation mode for the final output.</summary>
  </comment>
  <comment id="ID2D1SvgElement::GetAttributeValueLength">
    <summary>
      <para>Gets the string length of an attribute of this element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getattributevaluelength" /></para>
      <param name="name">The name of the attribute.</param>
      <param name="type">The string type of the attribute.</param>
      <param name="valueLength">The lengthe of the attribute. The returned string length does not include room for the null terminator.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace4::GetGlyphImageFormats">
    <summary>
      <para>Gets all the glyph image formats supported by the entire font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface4-getglyphimageformats" /></para>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext4">
    <summary>
      <para>This interface performs all the same functions as the ID2D1DeviceContext3 interface, plus it enables functionality for handling new types of color font glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1devicecontext4" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetFontStyle">
    <summary>
      <para>Gets the font style (also known as slope) of the text at the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getfontstyle" /></para>
      <param name="currentPosition">The position of the text to inspect.</param>
      <param name="fontStyle">When this method returns, contains a value which indicates the type of font style (also known as slope or incline) being applied at the specified position.</param>
      <param name="textRange">The range of text that has the same  formatting as the text at the position specified by <i>currentPosition</i>.  This means the run has the exact  formatting as the position specified, including but not limited to the font style.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateBitmap">
    <summary>
      <para>Creates an IWICBitmap object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createbitmap" /></para>
      <param name="uiWidth">The width of the new bitmap .</param>
      <param name="uiHeight">The height of the new bitmap.</param>
      <param name="pixelFormat">The pixel format of the new bitmap.</param>
      <param name="option">The cache creation options of the new bitmap. This can be one of the values in the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmapcreatecacheoption">WICBitmapCreateCacheOption</a> enumeration.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id="WICBitmapCacheOnDemand"></a><a id="wicbitmapcacheondemand"></a><a id="WICBITMAPCACHEONDEMAND"></a><dl>
<dt><b>WICBitmapCacheOnDemand</b></dt>
</dl>
</td>
<td width="60%">
Allocates system memory for the bitmap at initialization.

</td>
</tr>
<tr>
<td width="40%"><a id="WICBitmapCacheOnLoad"></a><a id="wicbitmapcacheonload"></a><a id="WICBITMAPCACHEONLOAD"></a><dl>
<dt><b>WICBitmapCacheOnLoad</b></dt>
</dl>
</td>
<td width="60%">
Allocates system memory for the bitmap when the bitmap is first used.

</td>
</tr>
<tr>
<td width="40%"><a id="WICBitmapNoCache"></a><a id="wicbitmapnocache"></a><a id="WICBITMAPNOCACHE"></a><dl>
<dt><b>WICBitmapNoCache</b></dt>
</dl>
</td>
<td width="60%">
This option is not valid for this method and should not be used.

</td>
</tr>
</table></param>
      <param name="iBitmap">A pointer that receives a pointer to the new bitmap.</param>
    </summary>
  </comment>
  <comment id="ID2D1GradientStopCollection1::GetColorInterpolationMode">
    <summary>
      <para>Retrieves the color interpolation mode that the gradient stop collection uses.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1gradientstopcollection1-getcolorinterpolationmode" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ImageSourceFromWic::GetSource">
    <summary>
      <para>Retrieves the underlying bitmap image source from the Windows Imaging Component (WIC).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1imagesourcefromwic-getsource" /></para>
      <param name="wicBitmapSource">On return contains the bitmap image source.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontSetBuilder1::AddFontFile">
    <summary>
      <para>Adds references to all the fonts in the specified font file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontsetbuilder1-addfontfile" /></para>
      <param name="fontFile">Font file reference object to add to the set. If the file is not a supported OpenType font file, then a DWRITE_E_FILEFORMAT error will be returned.</param>
    </summary>
  </comment>
  <comment id="D2D1_BITMAP_OPTIONS">
    <summary>
      <para>Specifies how a bitmap can be used.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_bitmap_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BITMAP_OPTIONS::D2D1_BITMAP_OPTIONS_NONE">
    <summary>The bitmap is created with default properties.</summary>
  </comment>
  <comment id="D2D1_BITMAP_OPTIONS::D2D1_BITMAP_OPTIONS_TARGET">
    <summary>The bitmap can be used as a device context target.</summary>
  </comment>
  <comment id="D2D1_BITMAP_OPTIONS::D2D1_BITMAP_OPTIONS_CANNOT_DRAW">
    <summary>The bitmap cannot be used as an input.</summary>
  </comment>
  <comment id="D2D1_BITMAP_OPTIONS::D2D1_BITMAP_OPTIONS_CPU_READ">
    <summary>The bitmap can be read from the CPU.</summary>
  </comment>
  <comment id="D2D1_BITMAP_OPTIONS::D2D1_BITMAP_OPTIONS_GDI_COMPATIBLE">
    <summary>The bitmap works with <a href="https://docs.microsoft.com/windows/desktop/api/d2d1/nf-d2d1-id2d1gdiinteroprendertarget-getdc">ID2D1GdiInteropRenderTarget::GetDC</a>.

<div class="alert"><b>Note</b>  This flag is not available in Windows Store apps.</div>
<div> </div></summary>
  </comment>
  <comment id="IDWriteTextAnalyzer1::GetBaseline">
    <summary>
      <para>Retrieves the given baseline from the font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextanalyzer1-getbaseline" /></para>
      <param name="fontFace">The font face to read.</param>
      <param name="baseline">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ne-dwrite_1-dwrite_baseline">DWRITE_BASELINE</a>-typed value that specifies the baseline of interest.</param>
      <param name="isVertical">Whether the baseline is vertical or horizontal.</param>
      <param name="isSimulationAllowed">Simulate the baseline if it is missing in the font.</param>
      <param name="scriptAnalysis">Script analysis result from AnalyzeScript.

<div class="alert"><b>Note</b>  You can pass an empty script analysis structure, like this <c>DWRITE_SCRIPT_ANALYSIS scriptAnalysis = {};</c>, and this method will return the default baseline.</div>
<div> </div></param>
      <param name="localeName">The language of the run.</param>
      <param name="baselineCoordinate">The baseline coordinate value in design units.</param>
      <param name="exists">Whether the returned baseline exists in the font.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::GetDpi">
    <summary>
      <para>Gets the unit mapping that an effect will use for properties that could be in either dots per inch (dpi) or pixels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-getdpi" /></para>
      <param name="dpiX">The dpi on the x-axis.</param>
      <param name="dpiY">The dpi on the y-axis.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPathData::UpdateCommands">
    <summary>
      <para>Updates the commands array. Existing commands not updated by this method are preserved. The array is resized larger if necessary to accomodate the new commands.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-updatecommands" /></para>
      <param name="commands">The commands array.</param>
      <param name="commandsCount">The number of commands to update.</param>
      <param name="startIndex">The index at which to begin updating commands. Must be less than or equal to the size of the commands array.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetFontWeight">
    <summary>
      <para>Gets the font weight of the text at the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getfontweight" /></para>
      <param name="currentPosition">The position of the text to inspect.</param>
      <param name="fontWeight">When this method returns, contains a value which indicates the type of font weight being applied at the specified position.</param>
      <param name="textRange">The range of text that has the same  formatting as the text at the position specified by <i>currentPosition</i>.  This means the run has the exact  formatting as the position specified, including but not limited to the font weight.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataQueryReader">
    <summary>
      <para>Exposes methods for retrieving metadata blocks and items from a decoder or its image frames using a metadata query expression.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicmetadataqueryreader" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapAlphaChannelOption">
    <summary>
      <para>Specifies the desired alpha channel usage.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmapalphachanneloption" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapAlphaChannelOption::WICBitmapUseAlpha">
    <summary>Use alpha channel.</summary>
  </comment>
  <comment id="WICBitmapAlphaChannelOption::WICBitmapUsePremultipliedAlpha">
    <summary>Use a pre-multiplied alpha channel.</summary>
  </comment>
  <comment id="WICBitmapAlphaChannelOption::WICBitmapIgnoreAlpha">
    <summary>Ignore alpha channel.</summary>
  </comment>
  <comment id="WICBitmapAlphaChannelOption::WICBITMAPALPHACHANNELOPTIONS_FORCE_DWORD">
    <summary>Sentinel value.</summary>
  </comment>
  <comment id="D2D1_TURBULENCE_PROP">
    <summary>
      <para>Identifiers for properties of the Turbulence effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_turbulence_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_TURBULENCE_PROP::D2D1_TURBULENCE_PROP_OFFSET">
    <summary>The coordinates where the turbulence output is generated.
            

The algorithm used to generate the Perlin noise is position dependent, so a different offset results in a different output.
              This property is not bounded and the units are specified in DIPs.
            

<div class="alert"><b>Note</b>  The offset does not have the same effect as a translation because the noise function output is infinite and the function will wrap around the tile.</div>
<div> </div>
The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.
            

The default value is {0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_TURBULENCE_PROP::D2D1_TURBULENCE_PROP_BASE_FREQUENCY">
    <summary>The base frequencies in the X and Y direction. This property is a float and must be greater than 0. The units are specified in 1/DIPs.
            

A value of 1 (1/DIPs) for the base frequency results in the Perlin noise completing an entire cycle between two pixels. The ease interpolation for these pixels results in completely random pixels, since there is no correlation between the pixels.

A value of 0.1(1/DIPs) for the base frequency, the Perlin noise function repeats every 10 DIPs. This results in correlation between pixels and the typical turbulence effect is visible.

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.
            

The default value is {0.01f, 0.01f}.</summary>
  </comment>
  <comment id="D2D1_TURBULENCE_PROP::D2D1_TURBULENCE_PROP_NUM_OCTAVES">
    <summary>The number of octaves for the noise function. This property is a UINT32 and must be greater than 0.
            

The type is UINT32.

The default value is 1.</summary>
  </comment>
  <comment id="D2D1_TURBULENCE_PROP::D2D1_TURBULENCE_PROP_SEED">
    <summary>The seed for the pseudo random generator. This property is unbounded.
            

The type is UINT32.

The default value is 0.</summary>
  </comment>
  <comment id="D2D1_TURBULENCE_PROP::D2D1_TURBULENCE_PROP_NOISE">
    <summary>The turbulence noise mode. This property can be either fractal sum or turbulence. Indicates whether to generate a bitmap based on Fractal Noise or the Turbulence function. 
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects/ne-d2d1effects-d2d1_turbulence_noise">D2D1_TURBULENCE_NOISE</a>.
            

The default value is D2D1_TURBULENCE_NOISE_FRACTAL_SUM.</summary>
  </comment>
  <comment id="D2D1_TURBULENCE_PROP::D2D1_TURBULENCE_PROP_STITCHABLE">
    <summary>Turns stitching on or off. The base frequency is adjusted so that output bitmap can be stitched. This is useful if you want to tile multiple copies of the turbulence effect output.
            

True – The output bitmap can be tiled (using the tile effect) without the appearance of seams. The base frequency is adjusted so that output bitmap can be stitched.

False – The base frequency is not adjusted, so seams may appear between tiles if the bitmap is tiled. 

The type is BOOL.

The default value is FALSE.</summary>
  </comment>
  <comment id="ID2D1RoundedRectangleGeometry">
    <summary>
      <para>Describes a rounded rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1roundedrectanglegeometry" /></para>
    </summary>
  </comment>
  <comment id="D2D1_IMAGE_BRUSH_PROPERTIES">
    <summary>
      <para>Describes image brush features.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_image_brush_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_IMAGE_BRUSH_PROPERTIES::sourceRectangle">
    <summary>The source rectangle in the image space from which the image will be tiled or interpolated.</summary>
  </comment>
  <comment id="D2D1_IMAGE_BRUSH_PROPERTIES::extendModeX">
    <summary>The extend mode in the image x-axis.</summary>
  </comment>
  <comment id="D2D1_IMAGE_BRUSH_PROPERTIES::extendModeY">
    <summary>The extend mode in the image y-axis.</summary>
  </comment>
  <comment id="D2D1_IMAGE_BRUSH_PROPERTIES::interpolationMode">
    <summary>The interpolation mode to use when scaling the image brush.</summary>
  </comment>
  <comment id="D2D1_PIXEL_FORMAT">
    <summary>
      <para>Contains the data format and alpha mode for a bitmap or render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dcommon/ns-dcommon-d2d1_pixel_format" /></para>
    </summary>
  </comment>
  <comment id="D2D1_PIXEL_FORMAT::format">
    <summary>A value that specifies the size and arrangement of channels in each pixel.</summary>
  </comment>
  <comment id="D2D1_PIXEL_FORMAT::alphaMode">
    <summary>A value that specifies whether the alpha channel is using pre-multiplied alpha, straight alpha, whether it should be ignored and considered opaque, or whether it is unkown.</summary>
  </comment>
  <comment id="IDWriteLocalFontFileLoader::GetFilePathLengthFromKey">
    <summary>
      <para>Obtains the length of the absolute file path from the font file reference key.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritelocalfontfileloader-getfilepathlengthfromkey" /></para>
      <param name="fontFileReferenceKey">Font file reference key that uniquely identifies the local font file
    within the scope of the font loader being used.</param>
      <param name="fontFileReferenceKeySize">Size of font file reference key in bytes.</param>
      <param name="filePathLength">Length of the file path string, not including the terminated <b>NULL</b> character.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandList">
    <summary>
      <para>Represents a sequence of commands that can be recorded and played back.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1commandlist" /></para>
    </summary>
  </comment>
  <comment id="ID2D1GdiMetafileSink1">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1GdiMetafileSink interface. It also enables access to metafile records.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1gdimetafilesink1" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Device1">
    <summary>
      <para>Represents a resource domain whose objects and device contexts can be used together.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nn-d2d1_2-id2d1device1" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SATURATION_PROP">
    <summary>
      <para>Identifiers for properties of the Saturation effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_saturation_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SATURATION_PROP::D2D1_SATURATION_PROP_SATURATION">
    <summary>The saturation of the image. You can set the saturation to a value between 0 and 1. If you set it to 1 the output image is fully saturated. 
          If you set it to 0 the output image is monochrome. The saturation value is unitless.
          

The type is FLOAT.

The default is 0.5f.</summary>
  </comment>
  <comment id="IWICBitmapSourceTransform::GetClosestPixelFormat">
    <summary>
      <para>Retrieves the closest pixel format to which the implementation of IWICBitmapSourceTransform can natively copy pixels, given a desired format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsourcetransform-getclosestpixelformat" /></para>
      <param name="pguidDstFormat">A pointer that receives the GUID of the pixel format that is the closest supported pixel format of the desired format.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapFrameEncode::SetPalette">
    <summary>
      <para>Sets the IWICPalette for indexed pixel formats.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-setpalette" /></para>
      <param name="iPalette">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a> to use for indexed pixel formats.

The encoder may change the palette to reflect the pixel formats the encoder supports.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory5::CreateInMemoryFontFileLoader">
    <summary>
      <para>Creates a loader object that can be used to create font file references to in-memory fonts. The caller is responsible for registering and unregistering the loader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefactory5-createinmemoryfontfileloader" /></para>
      <param name="newLoader">Receives a pointer to the newly-created loader object.</param>
    </summary>
  </comment>
  <comment id="D2D1_DASH_STYLE">
    <summary>
      <para>Describes the sequence of dashes and gaps in a stroke.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_dash_style" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DASH_STYLE::D2D1_DASH_STYLE_SOLID">
    <summary>A solid line with no breaks.</summary>
  </comment>
  <comment id="D2D1_DASH_STYLE::D2D1_DASH_STYLE_DASH">
    <summary>A dash followed by a gap of equal length. The dash and the gap are each twice as long as the stroke thickness.

The equivalent dash  array for  <b>D2D1_DASH_STYLE_DASH</b> is {2, 2}.</summary>
  </comment>
  <comment id="D2D1_DASH_STYLE::D2D1_DASH_STYLE_DOT">
    <summary>A dot followed by a longer gap.

The equivalent dash  array for  <b>D2D1_DASH_STYLE_DOT</b> is {0, 2}.</summary>
  </comment>
  <comment id="D2D1_DASH_STYLE::D2D1_DASH_STYLE_DASH_DOT">
    <summary>A dash, followed by a gap, followed by a dot, followed by another gap.

The equivalent dash array for  <b>D2D1_DASH_STYLE_DASH_DOT</b> is {2, 2, 0, 2}.</summary>
  </comment>
  <comment id="D2D1_DASH_STYLE::D2D1_DASH_STYLE_DASH_DOT_DOT">
    <summary>A dash, followed by a gap, followed by a dot, followed by another gap, followed by another dot, followed by another gap.

The equivalent dash array for  <b>D2D1_DASH_STYLE_DASH_DOT_DOT</b> is {2, 2, 0, 2, 0, 2}.</summary>
  </comment>
  <comment id="D2D1_DASH_STYLE::D2D1_DASH_STYLE_CUSTOM">
    <summary>The dash pattern is specified by an array of floating-point values.</summary>
  </comment>
  <comment id="IWICPixelFormatInfo2::SupportsTransparency">
    <summary>
      <para>Returns whether the format supports transparent pixels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpixelformatinfo2-supportstransparency" /></para>
      <param name="pfSupportsTransparency">Returns <b>TRUE</b> if the pixel format supports transparency; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory::CreateTextAnalyzer">
    <summary>
      <para>Returns an interface for performing text analysis.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-createtextanalyzer" /></para>
      <param name="textAnalyzer">When this method returns, contains an address of  a pointer to the newly created text analyzer object.</param>
    </summary>
  </comment>
  <comment id="D2D1_SVG_LINE_CAP">
    <summary>
      <para>Specifies a value for the SVG stroke-linecap property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_line_cap" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_LINE_CAP::D2D1_SVG_LINE_CAP_BUTT">
    <summary>The property is set to SVG's 'butt' value.</summary>
  </comment>
  <comment id="D2D1_SVG_LINE_CAP::D2D1_SVG_LINE_CAP_SQUARE">
    <summary>The property is set to SVG's 'square' value.</summary>
  </comment>
  <comment id="D2D1_SVG_LINE_CAP::D2D1_SVG_LINE_CAP_ROUND">
    <summary>The property is set to SVG's 'round' value.</summary>
  </comment>
  <comment id="ID2D1SvgElement::GetTagName">
    <summary>
      <para>Gets the tag name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-gettagname" /></para>
      <param name="name">The tag name.</param>
      <param name="nameCount">Length of the value in the name argument.</param>
    </summary>
  </comment>
  <comment id="WICPngHistProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) hIST chunk metadata properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpnghistproperties" /></para>
    </summary>
  </comment>
  <comment id="WICPngHistProperties::WICPngHistFrequencies">
    <summary>[VT_VECTOR | VT_UI2] Indicates the approximate usage frequency of each color in the color palette.</summary>
  </comment>
  <comment id="D2D1IsMatrixInvertible">
    <summary>
      <para>Indicates whether the specified matrix is invertible.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-d2d1ismatrixinvertible" /></para>
      <param name="matrix">The matrix to test.</param>
    </summary>
  </comment>
  <comment id="WICMatchMetadataContent">
    <summary>
      <para>Obtains a metadata format GUID for a specified container format and vendor that best matches the content within a given stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-wicmatchmetadatacontent" /></para>
      <param name="guidContainerFormat">The container format GUID.</param>
      <param name="pguidVendor">The vendor GUID.</param>
      <param name="iStream">The content stream in which to match a metadata format.</param>
      <param name="pguidMetadataFormat">A pointer that receives a metadata format GUID for the given parameters.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFamily::GetFirstMatchingFont">
    <summary>
      <para>Gets the font that best matches the specified properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfamily-getfirstmatchingfont" /></para>
      <param name="weight">A value that is used to match a requested font weight.</param>
      <param name="stretch">A value that is used to match a requested font stretch.</param>
      <param name="style">A value that is used to match a requested font style.</param>
      <param name="matchingFont">When this method returns, contains the address of a pointer to the newly created <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefont">IDWriteFont</a> object.</param>
    </summary>
  </comment>
  <comment id="IDWriteColorGlyphRunEnumerator1::GetCurrentRun">
    <summary>
      <para>Gets the current color glyph run.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritecolorglyphrunenumerator1-getcurrentrun" /></para>
      <param name="colorGlyphRun">Receives a pointer to the color glyph run. The pointer remains valid until the next call to
          MoveNext or until the interface is released.</param>
    </summary>
  </comment>
  <comment id="D2D1SinCos">
    <summary>
      <para>Returns the sine and cosine of an angle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-d2d1sincos" /></para>
      <param name="angle">The angle to calculate.</param>
      <param name="s">The sine of the angle.</param>
      <param name="c">The cosine of the angle.</param>
    </summary>
  </comment>
  <comment id="IDWriteRenderingParams::GetPixelGeometry">
    <summary>
      <para>Gets the pixel geometry of the rendering parameters object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwriterenderingparams-getpixelgeometry" /></para>
    </summary>
  </comment>
  <comment id="ID2D1TransformGraph::SetSingleTransformNode">
    <summary>
      <para>Sets a single transform node as being equivalent to the whole graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-setsingletransformnode" /></para>
      <param name="node">The node to be set.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory::CreateGlyphRunAnalysis">
    <summary>
      <para>Creates a glyph run analysis object, which encapsulates information used to render a glyph run.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-createglyphrunanalysis" /></para>
      <param name="glyphRun">A structure that contains the properties of the glyph run (font face, advances, and so on).</param>
      <param name="pixelsPerDip">Number of physical pixels per DIP (device independent pixel). For example, if rendering onto a 96 DPI bitmap then <i>pixelsPerDip</i>is 1. If rendering onto a 120 DPI bitmap then <i>pixelsPerDip</i> is 1.25.</param>
      <param name="transform">Optional transform applied to the glyphs and their positions. This transform is applied after the scaling specified the <i>emSize</i> and <i>pixelsPerDip</i>.</param>
      <param name="renderingMode">A value that specifies the rendering mode, which must be one of the raster rendering modes (that is, not default
     and not outline).</param>
      <param name="measuringMode">Specifies the measuring mode to use with glyphs.</param>
      <param name="baselineOriginX">The horizontal position (X-coordinate) of the baseline origin, in DIPs.</param>
      <param name="baselineOriginY">Vertical position (Y-coordinate) of the baseline origin, in DIPs.</param>
      <param name="glyphRunAnalysis">When this method returns, contains an address of a pointer to the newly created glyph run analysis object.</param>
    </summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND">
    <summary>
      <para>Represents a path commmand. Each command may reference floats from the segment data. Commands ending in _ABSOLUTE interpret data as absolute coordinate. Commands ending in _RELATIVE interpret data as being relative to the previous point.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_path_command" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_CLOSE_PATH">
    <summary>Closes the current subpath. Uses no segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_MOVE_ABSOLUTE">
    <summary>Starts a new subpath at the coordinate (x y). Uses 2 floats of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_MOVE_RELATIVE">
    <summary>Starts a new subpath at the coordinate (x y). Uses 2 floats of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_LINE_ABSOLUTE">
    <summary>Draws a line to the coordinate (x y). Uses 2 floats of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_LINE_RELATIVE">
    <summary>Draws a line to the coordinate (x y). Uses 2 floats of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_CUBIC_ABSOLUTE">
    <summary>Draws a cubic Bezier curve (x1 y1 x2 y2 x y). The curve ends at (x, y) and is defined by the two control points (x1, y1) and (x2, y2). Uses 6 floats of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_CUBIC_RELATIVE">
    <summary>Draws a cubic Bezier curve (x1 y1 x2 y2 x y). The curve ends at (x, y) and is defined by the two control points (x1, y1) and (x2, y2). Uses 6 floats of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_QUADRADIC_ABSOLUTE">
    <summary>Draws a quadratic Bezier curve (x1 y1 x y). The curve ends at (x, y) and is defined by the control point (x1 y1). Uses 4 floats of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_QUADRADIC_RELATIVE">
    <summary>Draws a quadratic Bezier curve (x1 y1 x y). The curve ends at (x, y) and is defined by the control point (x1 y1). Uses 4 floats of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_ARC_ABSOLUTE">
    <summary>Draws an elliptical arc (rx ry x-axis-rotation large-arc-flag sweep-flag x y). The curve ends at (x, y) and is defined by the arc parameters. The two flags are
          considered set if their values are non-zero. Uses 7 floats of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_ARC_RELATIVE">
    <summary>Draws an elliptical arc (rx ry x-axis-rotation large-arc-flag sweep-flag x y). The curve ends at (x, y) and is defined by the arc parameters. The two flags are
          considered set if their values are non-zero. Uses 7 floats of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_HORIZONTAL_ABSOLUTE">
    <summary>Draws a horizontal line to the coordinate (x). Uses 1 float of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_HORIZONTAL_RELATIVE">
    <summary>Draws a horizontal line to the coordinate (x). Uses 1 float of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_VERTICAL_ABSOLUTE">
    <summary>Draws a vertical line to the coordinate (y). Uses 1 float of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_VERTICAL_RELATIVE">
    <summary>Draws a vertical line to the coordinate (y). Uses 1 float of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_CUBIC_SMOOTH_ABSOLUTE">
    <summary>Draws a smooth cubic Bezier curve (x2 y2 x y). The curve ends at (x, y) and is defined by the control point (x2, y2). Uses 4 floats of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_CUBIC_SMOOTH_RELATIVE">
    <summary>Draws a smooth cubic Bezier curve (x2 y2 x y). The curve ends at (x, y) and is defined by the control point (x2, y2). Uses 4 floats of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_QUADRADIC_SMOOTH_ABSOLUTE">
    <summary>Draws a smooth quadratic Bezier curve ending at (x, y). Uses 2 floats of segment data.</summary>
  </comment>
  <comment id="D2D1_SVG_PATH_COMMAND::D2D1_SVG_PATH_COMMAND_QUADRADIC_SMOOTH_RELATIVE">
    <summary>Draws a smooth quadratic Bezier curve ending at (x, y). Uses 2 floats of segment data.</summary>
  </comment>
  <comment id="IWICBitmapLock">
    <summary>
      <para>Exposes methods that support the Lock method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmaplock" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::SetTextAntialiasMode">
    <summary>
      <para>Specifies the antialiasing mode to use for subsequent text and glyph drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-settextantialiasmode" /></para>
      <param name="textAntialiasMode">The antialiasing mode to use for subsequent text and glyph drawing operations.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::HitTestTextRange">
    <summary>
      <para>The application calls this function to get a set of hit-test metrics corresponding to a range of text positions. One of the main usages is to implement highlight selection of the text string.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-hittesttextrange" /></para>
      <param name="textPosition">The first text position of the specified range.</param>
      <param name="textLength">The number of positions of the specified range.</param>
      <param name="originX">The origin pixel location X at the left of the layout box. This offset is added to the hit-test metrics returned.</param>
      <param name="originY">The origin pixel location Y at the top of the layout box. This offset is added to the hit-test metrics returned.</param>
      <param name="hitTestMetrics">When this method returns, contains a pointer to a buffer of the output geometry fully enclosing the specified position range.  The buffer must be at least as large as <i>maxHitTestMetricsCount</i>.</param>
      <param name="maxHitTestMetricsCount">Maximum number of boxes <i>hitTestMetrics</i> could hold in its buffer memory.</param>
      <param name="actualHitTestMetricsCount">Actual number of geometries <i>hitTestMetrics</i> holds in its buffer memory.</param>
    </summary>
  </comment>
  <comment id="ID2D1BlendTransform">
    <summary>
      <para>Provides methods to allow a blend operation to be inserted into a transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1blendtransform" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapCodecInfo::GetFileExtensions">
    <summary>
      <para>Retrieves a comma delimited list of the file name extensions associated with the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-getfileextensions" /></para>
      <param name="cchFileExtensions">The size of the file name extension buffer. Use <c>0</c> on first call to determine needed buffer size.</param>
      <param name="wzFileExtensions">Receives a comma delimited list  of file name extensions associated with the codec. Use <c>NULL</c> on first call to determine needed buffer size.</param>
      <param name="pcchActual">The actual buffer size needed to retrieve all file name extensions associated with the codec.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataBlockReader::GetEnumerator">
    <summary>
      <para>Retrieves an enumeration of IWICMetadataReader objects representing each of the top level metadata blocks.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockreader-getenumerator" /></para>
      <param name="iEnumMetadata">When this method returns, contains a pointer to an enumeration of <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/nn-wincodecsdk-iwicmetadatareader">IWICMetadataReader</a> objects.</param>
    </summary>
  </comment>
  <comment id="IDWriteBitmapRenderTarget">
    <summary>
      <para>Encapsulates a 32-bit device independent bitmap and device context, which can be used for rendering glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritebitmaprendertarget" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapPaletteType">
    <summary>
      <para>Specifies the type of palette used for an indexed image format.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmappalettetype" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapPaletteType::WICBitmapPaletteTypeCustom">
    <summary>An arbitrary custom palette provided by caller.</summary>
  </comment>
  <comment id="WICBitmapPaletteType::WICBitmapPaletteTypeMedianCut">
    <summary>An optimal palette generated using a median-cut algorithm. Derived from the colors in an image.</summary>
  </comment>
  <comment id="WICBitmapPaletteType::WICBitmapPaletteTypeFixedBW">
    <summary>A black and white palette.</summary>
  </comment>
  <comment id="WICBitmapPaletteType::WICBitmapPaletteTypeFixedHalftone8">
    <summary>A palette that has its 8-color on-off primaries and the 16 system colors added. With duplicates removed, 16 colors are available.</summary>
  </comment>
  <comment id="WICBitmapPaletteType::WICBitmapPaletteTypeFixedHalftone27">
    <summary>A palette that has 3 intensity levels of each primary: 27-color on-off primaries and the 16 system colors added. With duplicates removed, 35 colors are available.</summary>
  </comment>
  <comment id="WICBitmapPaletteType::WICBitmapPaletteTypeFixedHalftone64">
    <summary>A palette that has 4 intensity levels of each primary: 64-color on-off primaries and the 16 system colors added. With duplicates removed, 72 colors are available.</summary>
  </comment>
  <comment id="WICBitmapPaletteType::WICBitmapPaletteTypeFixedHalftone125">
    <summary>A palette that has 5 intensity levels of each primary: 125-color on-off primaries and the 16 system colors added. With duplicates removed, 133 colors are available.</summary>
  </comment>
  <comment id="WICBitmapPaletteType::WICBitmapPaletteTypeFixedHalftone216">
    <summary>A palette that has 6 intensity levels of each primary: 216-color on-off primaries and the 16 system colors added. With duplicates removed, 224 colors are available. This is the same as <b>WICBitmapPaletteFixedHalftoneWeb</b>.</summary>
  </comment>
  <comment id="WICBitmapPaletteType::WICBitmapPaletteTypeFixedWebPalette">
    <summary>A palette that has 6 intensity levels of each primary: 216-color on-off primaries and the 16 system colors added. With duplicates removed, 224 colors are available. This is the same as <b>WICBitmapPaletteTypeFixedHalftone216</b>.</summary>
  </comment>
  <comment id="WICBitmapPaletteType::WICBitmapPaletteTypeFixedHalftone252">
    <summary>A palette that has its 252-color on-off primaries and the 16 system colors added. With duplicates removed, 256 colors are available.</summary>
  </comment>
  <comment id="WICBitmapPaletteType::WICBitmapPaletteTypeFixedHalftone256">
    <summary>A palette that has its 256-color on-off primaries and the 16 system colors added. With duplicates removed, 256 colors are available.</summary>
  </comment>
  <comment id="WICBitmapPaletteType::WICBitmapPaletteTypeFixedGray4">
    <summary>A palette that has 4 shades of gray.</summary>
  </comment>
  <comment id="WICBitmapPaletteType::WICBitmapPaletteTypeFixedGray16">
    <summary>A palette that has 16 shades of gray.</summary>
  </comment>
  <comment id="WICBitmapPaletteType::WICBitmapPaletteTypeFixedGray256">
    <summary>A palette that has 256 shades of gray.</summary>
  </comment>
  <comment id="IWICStreamProvider::GetPreferredVendorGUID">
    <summary>
      <para>Gets the preferred vendor GUID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicstreamprovider-getpreferredvendorguid" /></para>
      <param name="pguidPreferredVendor">Pointer that receives the preferred vendor GUID.</param>
    </summary>
  </comment>
  <comment id="ID2D1RectangleGeometry">
    <summary>
      <para>Describes a two-dimensional rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1rectanglegeometry" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::PopAxisAlignedClip">
    <summary>
      <para>Removes the last axis-aligned clip from the render target. After this method is called, the clip is no longer applied to subsequent drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-popaxisalignedclip" /></para>
    </summary>
  </comment>
  <comment id="IDWriteBitmapRenderTarget::SetCurrentTransform">
    <summary>
      <para>Sets the transform that maps abstract coordinate to DIPs (device-independent pixel). This does not affect the world transform of the underlying device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritebitmaprendertarget-setcurrenttransform" /></para>
      <param name="transform"> Specifies the new transform. This parameter can be <b>NULL</b>, in which
     case the identity transform is implied.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateComponentInfo">
    <summary>
      <para>Creates a new instance of the IWICComponentInfo class for the given component class identifier (CLSID).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createcomponentinfo" /></para>
      <param name="clsidComponent">The CLSID for the desired component.</param>
      <param name="iInfo">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccomponentinfo">IWICComponentInfo</a>.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataQueryWriter">
    <summary>
      <para>Exposes methods for setting or removing metadata blocks and items to an encoder or its image frames using a metadata query expression.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicmetadataquerywriter" /></para>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::GetWhitePointRGB">
    <summary>
      <para>Gets the white point RGB values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getwhitepointrgb" /></para>
      <param name="red">A pointer that receives the red white point value.</param>
      <param name="green">A pointer that receives the green white point value.</param>
      <param name="blue">A pointer that receives the blue white point value.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext4::GetColorBitmapGlyphImage">
    <summary>
      <para>Retrieves an image of the color bitmap glyph from the color glyph cache.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext4-getcolorbitmapglyphimage" /></para>
      <param name="glyphImageFormat">The format for the glyph image.
          If there is no image data in the requested format for the requested glyph, this method will return an error.</param>
      <param name="glyphOrigin">The origin for the glyph.</param>
      <param name="fontFace">Reference to a font face which contains font face type, appropriate file references, face identification data and various font data such as metrics, names and glyph outlines.</param>
      <param name="fontEmSize">The specified font size affects the choice of which bitmap to use from the font. It also affects the output glyphTransform, causing  it to properly scale the glyph.</param>
      <param name="glyphIndex">Index of the glyph.</param>
      <param name="isSideways">If true, specifies that glyphs are rotated 90 degrees to the left and vertical metrics are used. Vertical writing is achieved by specifying isSideways as true and rotating the entire run 90 degrees to the right via a rotate transform.</param>
      <param name="worldTransform">The transform to apply to the image. This input transform affects the choice of which bitmap to use from the font. It is also factored into the output glyphTransform.</param>
      <param name="dpiX">Dots per inch along the x-axis.</param>
      <param name="dpiY">Dots per inch along the y-axis.</param>
      <param name="glyphTransform">Output transform, which transforms from the glyph's space to the same output space as the worldTransform. This includes the input
          glyphOrigin, the glyph's offset from the glyphOrigin, and any other required transformations.</param>
      <param name="glyphImage">On completion contains the retrieved glyph image.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext1">
    <summary>
      <para>Enables creation and drawing of geometry realization objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nn-d2d1_2-id2d1devicecontext1" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapDecoder::GetThumbnail">
    <summary>
      <para>Retrieves a bitmap thumbnail of the image, if one exists</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getthumbnail" /></para>
      <param name="iThumbnail">Receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> of the thumbnail.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory::RegisterFontFileLoader">
    <summary>
      <para>Registers a font file loader with DirectWrite.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-registerfontfileloader" /></para>
      <param name="fontFileLoader">Pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefontfileloader">IDWriteFontFileLoader</a> object for a particular file resource type.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::GetGlyphRunWorldBounds">
    <summary>
      <para>Gets the world-space bounds in DIPs of the glyph run using the device context DPI.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-getglyphrunworldbounds" /></para>
      <param name="baselineOrigin">The origin of the baseline for the glyph run.</param>
      <param name="glyphRun">The glyph run to render.</param>
      <param name="measuringMode">The DirectWrite measuring mode that indicates how glyph metrics are used to measure text when it is formatted.</param>
      <param name="bounds">The bounds of the glyph run in DIPs and in world space.</param>
    </summary>
  </comment>
  <comment id="IDWriteBitmapRenderTarget1::GetTextAntialiasMode">
    <summary>
      <para>Gets the current text antialiasing mode of the bitmap render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritebitmaprendertarget1-gettextantialiasmode" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ResourceTexture">
    <summary>
      <para>Tracks a transform-created resource texture.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1resourcetexture" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapEncoder::SetPreview">
    <summary>
      <para>Sets the global preview for the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-setpreview" /></para>
      <param name="iPreview">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapsource">IWICBitmapSource</a> to use as the global preview.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFaceReference::GetLocality">
    <summary>
      <para>Get the locality of this font face reference.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfacereference-getlocality" /></para>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::GetImageLocalBounds">
    <summary>
      <para>Gets the bounds of an image without the world transform of the context applied.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-getimagelocalbounds" /></para>
      <param name="image">The image whose bounds will be calculated.</param>
      <param name="localBounds">When this method returns, contains a pointer to the bounds of the image in device independent pixels (DIPs) and in local space.</param>
    </summary>
  </comment>
  <comment id="IWICComponentInfo::GetCLSID">
    <summary>
      <para>Retrieves the component's class identifier (CLSID)</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getclsid" /></para>
      <param name="pclsid">A pointer that receives the component's CLSID.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device6">
    <summary>
      <para>Represents a resource domain whose objects and device contexts can be used together. This interface performs all the same functions as the ID2D1Device5 interface, plus it enables the creation of ID2D1DeviceContext6 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1device6" /></para>
    </summary>
  </comment>
  <comment id="D2D1_EDGEDETECTION_MODE">
    <summary>
      <para>Values for the D2D1_EDGEDETECTION_PROP_MODE property of the Edge Detection effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_edgedetection_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_EDGEDETECTION_MODE::D2D1_EDGEDETECTION_MODE_SOBEL">
    <summary>Indicates the Sobel operator should be used for edge detection.</summary>
  </comment>
  <comment id="D2D1_EDGEDETECTION_MODE::D2D1_EDGEDETECTION_MODE_PREWITT">
    <summary>Indicates the Prewitt operator should be used for edge detection.</summary>
  </comment>
  <comment id="ID2D1Factory1::GetEffectProperties">
    <summary>
      <para>Retrieves the properties of an effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-geteffectproperties" /></para>
      <param name="effectId">The ID of the effect to retrieve properties from.</param>
      <param name="properties">When this method returns, contains the address of a pointer to the property interface that can be used to query the metadata of the effect.</param>
    </summary>
  </comment>
  <comment id="ID2D1Factory3::CreateDevice">
    <summary>
      <para>Creates an ID2D1Device2 object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1factory3-createdevice" /></para>
      <param name="dxgiDevice">The <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgidevice">IDXGIDevice</a> object used when creating  the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device2">ID2D1Device2</a>.</param>
      <param name="d2dDevice2">The requested <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nn-d2d1_3-id2d1device2">ID2D1Device2</a> object.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace3::GetPanose">
    <summary>
      <para>Gets the PANOSE values from the font, used for font selection and matching.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface3-getpanose" /></para>
      <param name="panose">A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ns-dwrite_1-dwrite_panose">DWRITE_PANOSE</a> structure that receives the PANOSE values from the font.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::DrawLine">
    <summary>
      <para>Draws a line between the specified points using the specified stroke style.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-drawline" /></para>
      <param name="point0">The start point of the line, in device-independent pixels.</param>
      <param name="point1">The end point of the line, in device-independent pixels.</param>
      <param name="brush">The brush used to paint the line's stroke.</param>
      <param name="strokeWidth">The width of the stroke, in device-independent pixels. The value must be greater than or equal to 0.0f. If this parameter isn't specified, it defaults to 1.0f. The stroke is centered on the line.</param>
      <param name="strokeStyle">The style of stroke to paint, or <b>NULL</b> to paint a solid line.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer::AnalyzeScript">
    <summary>
      <para>Analyzes a text range for script boundaries, reading text attributes from the source and reporting the Unicode script ID to the sink callback SetScript.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalyzer-analyzescript" /></para>
      <param name="analysisSource">A pointer to the source object to analyze.</param>
      <param name="textPosition">The starting text position within the source object.</param>
      <param name="textLength">The text length to analyze.</param>
      <param name="analysisSink">A pointer to the sink callback object that receives the text analysis.</param>
    </summary>
  </comment>
  <comment id="IWICEnumMetadataItem::Reset">
    <summary>
      <para>Resets the current position to the beginning of the enumeration.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicenummetadataitem-reset" /></para>
    </summary>
  </comment>
  <comment id="D2D1_YCBCR_PROP">
    <summary>
      <para>Identifiers for properties of the YCbCr effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_1/ne-d2d1effects_1-d2d1_ycbcr_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_YCBCR_PROP::D2D1_YCBCR_PROP_CHROMA_SUBSAMPLING">
    <summary>Specifies the chroma subsampling of the input chroma image.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_1/ne-d2d1effects_1-d2d1_ycbcr_chroma_subsampling">D2D1_YCBCR_CHROMA_SUBSAMPLING</a>.

The default value is D2D1_YCBCR_CHROMA_SUBSAMPLING_AUTO.</summary>
  </comment>
  <comment id="D2D1_YCBCR_PROP::D2D1_YCBCR_PROP_TRANSFORM_MATRIX">
    <summary>A 3x2 Matrix specifying the axis-aligned affine transform of the image. Axis aligned transforms include Scale, Flips, and 90 degree rotations.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/Direct2D/d2d1-matrix-3x2-f">D2D1_MATRIX_3X2_F</a>.

The default value is Matrix3x2F::Identity().</summary>
  </comment>
  <comment id="D2D1_YCBCR_PROP::D2D1_YCBCR_PROP_INTERPOLATION_MODE">
    <summary>The interpolation mode.
            

The type is <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_1/ne-d2d1effects_1-d2d1_ycbcr_interpolation_mode">D2D1_YCBCR_INTERPOLATION_MODE</a>.</summary>
  </comment>
  <comment id="D2D1_DRAWING_STATE_DESCRIPTION">
    <summary>
      <para>Describes the drawing state of a render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_drawing_state_description" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DRAWING_STATE_DESCRIPTION::antialiasMode">
    <summary>The antialiasing mode for subsequent nontext drawing operations.</summary>
  </comment>
  <comment id="D2D1_DRAWING_STATE_DESCRIPTION::textAntialiasMode">
    <summary>The antialiasing mode for subsequent text and glyph drawing operations.</summary>
  </comment>
  <comment id="D2D1_DRAWING_STATE_DESCRIPTION::tag1">
    <summary>A label for subsequent drawing operations.</summary>
  </comment>
  <comment id="D2D1_DRAWING_STATE_DESCRIPTION::tag2">
    <summary>A label for subsequent drawing operations.</summary>
  </comment>
  <comment id="D2D1_DRAWING_STATE_DESCRIPTION::transform">
    <summary>The transformation to apply to subsequent drawing operations.</summary>
  </comment>
  <comment id="IDWriteStringList">
    <summary>
      <para>Represents a collection of strings indexed by number.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritestringlist" /></para>
    </summary>
  </comment>
  <comment id="IDWriteRemoteFontFileStream::BeginDownload">
    <summary>
      <para>Begins downloading all or part of the font file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwriteremotefontfilestream-begindownload" /></para>
      <param name="downloadOperationID" />
      <param name="fileFragments">Array of structures, each specifying a byte range to download.</param>
      <param name="fragmentCount">Number of elements in the fileFragments array. This can be zero to just download file information, such as the size.</param>
      <param name="asyncResult">Receives an object that can be used to wait for the asynchronous download to complete and to get the download result upon 
          completion. The result may be NULL if the download completes synchronously. For example, this can happen if method determines that the requested data
          is already local.</param>
    </summary>
  </comment>
  <comment id="IDWriteGdiInterop1::CreateFontFromLOGFONT">
    <summary>
      <para>Creates a font object that matches the properties specified by the LOGFONT structure.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritegdiinterop1-createfontfromlogfont" /></para>
      <param name="logFont">Structure containing a GDI-compatible font description.</param>
      <param name="fontCollection">The font collection to search. If NULL, the local system font collection is used.</param>
      <param name="font">Receives a newly created font object if successful, or NULL in case of error.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPathData::RemoveSegmentDataAtEnd">
    <summary>
      <para>Removes data from the end of the segment data array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-removesegmentdataatend" /></para>
      <param name="dataCount">Specifies how much data to remove.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapEncoder::CreateNewFrame">
    <summary>
      <para>Creates a new IWICBitmapFrameEncode instance.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-createnewframe" /></para>
      <param name="iFrameEncode">A pointer that receives a pointer to the new instance of an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapframeencode">IWICBitmapFrameEncode</a>.</param>
      <param name="iEncoderOptions">Optional. Receives the named properties to use for subsequent frame initialization. See Remarks.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontList1">
    <summary>
      <para>Represents a list of fonts.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontlist1" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapFlipRotator">
    <summary>
      <para>Exposes methods that produce a flipped (horizontal or vertical) and/or rotated (by 90 degree increments) bitmap source. The flip is done before the rotation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapfliprotator" /></para>
    </summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES">
    <summary>
      <para>Describes the stroke that outlines a shape.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_stroke_style_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES::startCap">
    <summary>The cap applied to the start of all the open figures in a stroked geometry.</summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES::endCap">
    <summary>The cap applied to the end of all the open figures in a stroked geometry.</summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES::dashCap">
    <summary>The shape  at either end of each dash segment.</summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES::lineJoin">
    <summary>A value that describes how segments are joined. This value is ignored for a vertex if the segment flags specify that the segment should have a smooth join.</summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES::miterLimit">
    <summary>The limit of the thickness of the join on a mitered corner. This value is always treated as though it is greater than or equal to 1.0f.</summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES::dashStyle">
    <summary>A value that specifies whether the stroke has a dash pattern and, if so, the dash style.</summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES::dashOffset">
    <summary>A value that specifies an offset in the dash sequence.   A positive dash offset value  shifts the dash pattern, in units of  stroke width, toward the start of the stroked geometry.  A negative dash offset value  shifts the dash pattern, in units of  stroke width, toward the end of the stroked geometry.</summary>
  </comment>
  <comment id="D2D1_SVG_LINE_JOIN">
    <summary>
      <para>Specifies a value for the SVG stroke-linejoin property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_line_join" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_LINE_JOIN::D2D1_SVG_LINE_JOIN_BEVEL">
    <summary>The property is set to SVG's 'bevel' value.</summary>
  </comment>
  <comment id="D2D1_SVG_LINE_JOIN::D2D1_SVG_LINE_JOIN_MITER">
    <summary>The property is set to SVG's 'miter' value. Note that this is equivalent to D2D1_LINE_JOIN_MITER_OR_BEVEL, not D2D1_LINE_JOIN_MITER.</summary>
  </comment>
  <comment id="D2D1_SVG_LINE_JOIN::D2D1_SVG_LINE_JOIN_ROUND">
    <summary>The property is set to SVG's 'round' value.</summary>
  </comment>
  <comment id="IDWriteFactory::CreateCustomFontFileReference">
    <summary>
      <para>Creates a reference to an application-specific font file resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-createcustomfontfilereference" /></para>
      <param name="fontFileReferenceKey">A font file reference key that uniquely identifies the font file resource
     during the lifetime of <i>fontFileLoader</i>.</param>
      <param name="fontFileReferenceKeySize">The size of the font file reference key in bytes.</param>
      <param name="fontFileLoader">The font file loader that will be used by the font system to load data from the file identified by
     <i>fontFileReferenceKey</i>.</param>
      <param name="fontFile">Contains an address of a pointer to the newly created font file object when this method succeeds, or <b>NULL</b> in case of failure.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPointCollection::UpdatePoints">
    <summary>
      <para>Updates the points array. Existing points not updated by this method are preserved. The array is resized larger if necessary to accomodate the new points.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpointcollection-updatepoints" /></para>
      <param name="points">The points array.</param>
      <param name="pointsCount">The number of points to update.</param>
      <param name="startIndex">The index at which to begin updating points. Must be less than or equal to the size of the array.</param>
    </summary>
  </comment>
  <comment id="D2D1_BITMAP_PROPERTIES1">
    <summary>
      <para>This structure allows a ID2D1Bitmap1 to be created with bitmap options and color context information available.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_bitmap_properties1" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BITMAP_PROPERTIES1::pixelFormat">
    <summary>The DXGI format and alpha mode to create the bitmap with.</summary>
  </comment>
  <comment id="D2D1_BITMAP_PROPERTIES1::dpiX">
    <summary>The bitmap dpi in the x direction.</summary>
  </comment>
  <comment id="D2D1_BITMAP_PROPERTIES1::dpiY">
    <summary>The bitmap dpi in the y direction.</summary>
  </comment>
  <comment id="D2D1_BITMAP_PROPERTIES1::bitmapOptions">
    <summary>The special creation options of the bitmap.</summary>
  </comment>
  <comment id="D2D1_BITMAP_PROPERTIES1::colorContext">
    <summary>The optionally specified color context information.</summary>
  </comment>
  <comment id="IDWriteFontSet::GetFontFaceReference">
    <summary>
      <para>Gets a reference to the font at the specified index, which may be local or remote.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontset-getfontfacereference" /></para>
      <param name="listIndex">Zero-based index of the font.</param>
      <param name="fontFaceReference">Receives a pointer the font face reference object, or nullptr on failure.</param>
    </summary>
  </comment>
  <comment id="ID2D1PrintControl">
    <summary>
      <para>Converts Direct2D primitives stored in an ID2D1CommandList into a fixed page representation. The print sub-system then consumes the primitives.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1printcontrol" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_UNIT_TYPE">
    <summary>
      <para>Defines the coordinate system used for SVG gradient or clipPath elements.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_unit_type" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_UNIT_TYPE::D2D1_SVG_UNIT_TYPE_USER_SPACE_ON_USE">
    <summary>The property is set to SVG's 'userSpaceOnUse' value.</summary>
  </comment>
  <comment id="D2D1_SVG_UNIT_TYPE::D2D1_SVG_UNIT_TYPE_OBJECT_BOUNDING_BOX">
    <summary>The property is set to SVG's 'objectBoundingBox' value.</summary>
  </comment>
  <comment id="IWICBitmapLock::GetDataPointer">
    <summary>
      <para>Gets the pointer to the top left pixel in the locked rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmaplock-getdatapointer" /></para>
      <param name="pcbBufferSize">A pointer that receives the size of the buffer.</param>
      <param name="ppbData">A pointer that receives a pointer to the top left pixel in the locked rectangle.</param>
    </summary>
  </comment>
  <comment id="IWICDdsFrameDecode">
    <summary>
      <para>Provides access to a single frame of DDS image data in its native DXGI_FORMAT form, as well as information about the image data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicddsframedecode" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgGlyphStyle::GetFill">
    <summary>
      <para>Returns the requested fill parameters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1svgglyphstyle-getfill" /></para>
      <param name="brush">Describes how the area is painted.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext2::CreateGradientMesh">
    <summary>
      <para>Creates a new ID2D1GradientMesh instance using the given array of patches.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext2-creategradientmesh" /></para>
      <param name="patches">A pointer to the array containing the patches to be used in this mesh.</param>
      <param name="patchesCount">The number of patches in the patches argument to read.</param>
      <param name="gradientMesh">When this method returns, contains the address of a pointer to the new gradient mesh.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontCollection">
    <summary>
      <para>An object that encapsulates a set of fonts, such as the set of fonts installed on the system, or the set of fonts in a particular directory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritefontcollection" /></para>
    </summary>
  </comment>
  <comment id="IWICFormatConverterInfo::GetPixelFormats">
    <summary>
      <para>Retrieves a list of GUIDs that signify which pixel formats the converter supports.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicformatconverterinfo-getpixelformats" /></para>
      <param name="cFormats">The size of the <i>pPixelFormatGUIDs</i> array.</param>
      <param name="pixelFormatGUIDs">Pointer to a GUID array that receives the pixel formats the converter supports.</param>
      <param name="pcActual">The actual array size needed to retrieve all pixel formats supported by the converter.</param>
    </summary>
  </comment>
  <comment id="D2D1_VERTEX_RANGE">
    <summary>
      <para>Defines a range of vertices that are used when rendering less than the full contents of a vertex buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_vertex_range" /></para>
    </summary>
  </comment>
  <comment id="D2D1_VERTEX_RANGE::startVertex">
    <summary>The first vertex in the range to process.</summary>
  </comment>
  <comment id="D2D1_VERTEX_RANGE::vertexCount">
    <summary>The number of vertices to use.</summary>
  </comment>
  <comment id="ID2D1Factory::ReloadSystemMetrics">
    <summary>
      <para>Forces the factory to refresh any system defaults that it might have changed since factory creation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1factory-reloadsystemmetrics" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapScaler">
    <summary>
      <para>Represents a resized version of the input bitmap using a resampling or filtering algorithm.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapscaler" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::IsAttributeSpecified">
    <summary>
      <para>Returns a boolean indicating if the attribute is explicitly set on the element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-isattributespecified" /></para>
      <param name="name">The name of the attribute.</param>
      <param name="inherited">Outputs whether the attribute is set to the inherit value.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRawNotificationCallback">
    <summary>
      <para>Exposes a callback method for raw image change nofications.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicdeveloprawnotificationcallback" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Factory1::UnregisterEffect">
    <summary>
      <para>Unregisters an effect within the factory instance that corresponds to the classId provided.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-unregistereffect" /></para>
      <param name="classId">The identifier of the effect to be unregistered.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateDecoderFromStream">
    <summary>
      <para>Creates a new instance of the IWICBitmapDecoder class based on the given IStream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createdecoderfromstream" /></para>
      <param name="iStream">The stream to create the decoder from.</param>
      <param name="pguidVendor">The GUID for the preferred decoder vendor. Use <b>NULL</b> if no preferred vendor.</param>
      <param name="metadataOptions">The <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicdecodeoptions">WICDecodeOptions</a> to use when creating the decoder.</param>
      <param name="iDecoder">A pointer that receives a pointer to a new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicbitmapdecoder">IWICBitmapDecoder</a>.</param>
    </summary>
  </comment>
  <comment id="ID2D1Image">
    <summary>
      <para>Represents a producer of pixels that can fill an arbitrary 2D plane.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1image" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RoundedRectangleGeometry::GetRoundedRect">
    <summary>
      <para>Retrieves a rounded rectangle that describes this rounded rectangle geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1roundedrectanglegeometry-getroundedrect" /></para>
      <param name="roundedRect">A pointer that receives a rounded rectangle that describes this rounded rectangle geometry. You must allocate storage for this parameter.</param>
    </summary>
  </comment>
  <comment id="ID2D1PathGeometry::Open">
    <summary>
      <para>Retrieves the geometry sink that is used to populate the path geometry with figures and segments.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1pathgeometry-open" /></para>
      <param name="geometrySink">When this method returns, <i>geometrySink</i> contains the address of a pointer to the geometry sink that is used to populate the path geometry with figures and segments. This parameter is passed uninitialized.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory::CreateFontFace">
    <summary>
      <para>Creates an object that represents a font face.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-createfontface" /></para>
      <param name="fontFaceType">A value that indicates the type of file format of the font face.</param>
      <param name="numberOfFiles">The number of font files, in element count, required to represent the font face.</param>
      <param name="fontFiles">A font file object representing the font face.  Because <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefontface">IDWriteFontFace</a>maintains its own references
     to the input font file objects, you may release them after this call.</param>
      <param name="faceIndex">The zero-based index of a font face, in cases when the font files contain a collection of font faces.
     If the font files contain a single face, this value should be zero.</param>
      <param name="fontFaceSimulationFlags">A value that indicates which, if any, font face simulation flags for algorithmic means of making text bold or italic are applied to the current font face.</param>
      <param name="fontFace">When this method returns, contains an address of a pointer to the newly created font face object, or <b>NULL</b> in case of failure.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::GetFontFamilyName">
    <summary>
      <para>Gets a copy of the font family name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getfontfamilyname" /></para>
      <param name="fontFamilyName">When this method returns, contains a pointer to a character array, which is null-terminated, that receives the current font family name. The buffer allocated for this array should be at least the size, in elements, of <i>nameSize</i>.</param>
      <param name="nameSize">The size of the <i>fontFamilyName</i> character array, in character count, including the terminated <b>NULL</b> character.  To find the size of <i>fontFamilyName</i>, use <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextformat-getfontfamilynamelength">GetFontFamilyNameLength</a>.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext6::BlendImage">
    <summary>
      <para>Draws an image to the device context using the specified blend mode. Results are equivalent to using Direct2D's built-in Blend effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext6-blendimage" /></para>
      <param name="image">The image to be drawn to the device context.</param>
      <param name="blendMode">The blend mode to be used. See <a href="https://docs.microsoft.com/windows/desktop/Direct2D/blend">Blend modes</a> for more info.</param>
      <param name="targetOffset">The offset in the destination space that the image will be rendered to. 
            The entire logical extent of the image will be rendered to the corresponding destination. 
            If not specified, the destination origin will be (0, 0). 
            The top-left corner of the image will be mapped to the target offset. 
            This will not necessarily be the origin. The default value is NULL.</param>
      <param name="imageRectangle">The corresponding rectangle in the image space will be mapped to the given origins when processing the image. The default value is NULL.</param>
      <param name="interpolationMode">The interpolation mode that will be used to scale the image if necessary. The default value is D2D1_INTERPOLATION_MODE_LINEAR.</param>
    </summary>
  </comment>
  <comment id="D2D1_DRAWING_STATE_DESCRIPTION1">
    <summary>
      <para>Describes the drawing state of a device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_drawing_state_description1" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DRAWING_STATE_DESCRIPTION1::antialiasMode">
    <summary>The antialiasing mode for subsequent nontext drawing operations.</summary>
  </comment>
  <comment id="D2D1_DRAWING_STATE_DESCRIPTION1::textAntialiasMode">
    <summary>The antialiasing mode for subsequent text and glyph drawing operations.</summary>
  </comment>
  <comment id="D2D1_DRAWING_STATE_DESCRIPTION1::tag1">
    <summary>A label for subsequent drawing operations.</summary>
  </comment>
  <comment id="D2D1_DRAWING_STATE_DESCRIPTION1::tag2">
    <summary>A label for subsequent drawing operations.</summary>
  </comment>
  <comment id="D2D1_DRAWING_STATE_DESCRIPTION1::transform">
    <summary>The transformation to apply to subsequent drawing operations.</summary>
  </comment>
  <comment id="D2D1_DRAWING_STATE_DESCRIPTION1::primitiveBlend">
    <summary>The blend mode for the device context to apply to subsequent drawing operations.</summary>
  </comment>
  <comment id="D2D1_DRAWING_STATE_DESCRIPTION1::unitMode">
    <summary>D2D1_UNIT_MODE</summary>
  </comment>
  <comment id="WIC8BIMIptcDigestProperties">
    <summary>
      <para>Specifies the identifiers of the metadata items in an 8BIM IPTC digest metadata block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wic8bimiptcdigestproperties" /></para>
    </summary>
  </comment>
  <comment id="WIC8BIMIptcDigestProperties::WIC8BIMIptcDigestPString">
    <summary>[VT_LPSTR] A name that identifies the 8BIM block.</summary>
  </comment>
  <comment id="WIC8BIMIptcDigestProperties::WIC8BIMIptcDigestIptcDigest">
    <summary>[VT_BLOB] The embedded IPTC digest value.</summary>
  </comment>
  <comment id="IDWriteTextAnalyzer2::GetGlyphOrientationTransform">
    <summary>
      <para>Returns 2x3 transform matrix for the respective angle to draw the glyph run.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextanalyzer2-getglyphorientationtransform" /></para>
      <param name="glyphOrientationAngle">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ne-dwrite_1-dwrite_glyph_orientation_angle">DWRITE_GLYPH_ORIENTATION_ANGLE</a>-typed value that specifies the angle that was reported into
    <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/nf-dwrite_1-idwritetextanalysissink1-setglyphorientation">IDWriteTextAnalysisSink1::SetGlyphOrientation</a>.</param>
      <param name="isSideways">Whether the run's glyphs are sideways or not.</param>
      <param name="originX">The X value of the baseline origin.</param>
      <param name="originY">The Y value of the baseline origin.</param>
      <param name="transform">Returned transform.</param>
    </summary>
  </comment>
  <comment id="ID2D1BlendTransform::GetDescription">
    <summary>
      <para>Gets the blend description of the corresponding blend transform object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1blendtransform-getdescription" /></para>
      <param name="description">When this method returns, contains the blend description specified for the blend transform.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgStrokeDashArray::GetDashesCount">
    <summary>
      <para>Gets the number of the dashes in the array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgstrokedasharray-getdashescount" /></para>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::SetRenderMode">
    <summary>
      <para>Sets the current WICRawRenderMode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setrendermode" /></para>
      <param name="renderMode">The render mode to use.</param>
    </summary>
  </comment>
  <comment id="IDWriteAsyncResult">
    <summary>
      <para>Represents the result of an asynchronous operation. A client can use the interface to wait for the operation to complete and to get the result.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwriteasyncresult" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_ASPECT_SCALING">
    <summary>
      <para>The meetOrSlice portion of the SVG preserveAspectRatio attribute.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_aspect_scaling" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_ASPECT_SCALING::D2D1_SVG_ASPECT_SCALING_MEET">
    <summary>Scale the viewBox up as much as possible such that the entire viewBox is visible within the viewport.</summary>
  </comment>
  <comment id="D2D1_SVG_ASPECT_SCALING::D2D1_SVG_ASPECT_SCALING_SLICE">
    <summary>Scale the viewBox down as much as possible such that the entire viewport is
          covered by the viewBox.</summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_SCALE_MODE">
    <summary>
      <para>The interpolation mode the Distant-specular lighting effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_distantspecular_scale_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_SCALE_MODE::D2D1_DISTANTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_SCALE_MODE::D2D1_DISTANTSPECULAR_SCALE_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode outputs a higher quality image than nearest neighbor.</summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_SCALE_MODE::D2D1_DISTANTSPECULAR_SCALE_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_SCALE_MODE::D2D1_DISTANTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_SCALE_MODE::D2D1_DISTANTSPECULAR_SCALE_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_SCALE_MODE::D2D1_DISTANTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. 
          Then uses the cubic interpolation mode for the final output.</summary>
  </comment>
  <comment id="IWICStream">
    <summary>
      <para>Represents a Windows Imaging Component (WIC) stream for referencing imaging and metadata content.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicstream" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DEBUG_LEVEL">
    <summary>
      <para>Indicates the type of information provided by the Direct2D Debug Layer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_debug_level" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DEBUG_LEVEL::D2D1_DEBUG_LEVEL_NONE">
    <summary>Direct2D does not produce any debugging output.</summary>
  </comment>
  <comment id="D2D1_DEBUG_LEVEL::D2D1_DEBUG_LEVEL_ERROR">
    <summary>Direct2D sends error messages to the debug layer.</summary>
  </comment>
  <comment id="D2D1_DEBUG_LEVEL::D2D1_DEBUG_LEVEL_WARNING">
    <summary>Direct2D sends error messages and warnings to the debug layer.</summary>
  </comment>
  <comment id="D2D1_DEBUG_LEVEL::D2D1_DEBUG_LEVEL_INFORMATION">
    <summary>Direct2D sends error messages, warnings, and additional diagnostic information that can help improve performance to the debug layer.</summary>
  </comment>
  <comment id="IDWriteFontFamily1::GetFontLocality">
    <summary>
      <para>Gets the current location of a font given its zero-based index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfamily1-getfontlocality" /></para>
      <param name="listIndex">Zero-based index of the font in the font list.</param>
    </summary>
  </comment>
  <comment id="IDWriteInlineObject::GetBreakConditions">
    <summary>
      <para>Layout uses this to determine the line-breaking behavior of the inline object among the text.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwriteinlineobject-getbreakconditions" /></para>
      <param name="breakConditionBefore">When this method returns, contains a value which indicates the line-breaking condition between the object and the content immediately preceding it.</param>
      <param name="breakConditionAfter">When this method returns, contains a value which indicates the line-breaking condition between the object and the content immediately following it.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextRenderer::DrawUnderline">
    <summary>
      <para>IDWriteTextLayout::Draw calls this function to instruct the client to draw an underline.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextrenderer-drawunderline" /></para>
      <param name="clientDrawingContext">The application-defined drawing context passed to 
     IDWriteTextLayout::<a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwriteinlineobject-draw">Draw</a>.</param>
      <param name="baselineOriginX">The pixel location (X-coordinate) at the baseline origin of the run where underline applies.</param>
      <param name="baselineOriginY">The pixel location (Y-coordinate) at the baseline origin of the run where underline applies.</param>
      <param name="underline">Pointer to  a structure containing underline logical information.</param>
      <param name="clientDrawingEffect"> Application-defined effect to apply to the underline. Usually this argument represents effects such as the foreground brush filling the interior of a line.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapFrameEncode::SetThumbnail">
    <summary>
      <para>Sets the frame thumbnail if supported by the codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-setthumbnail" /></para>
      <param name="iThumbnail">The bitmap source to use as the thumbnail.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextRenderer1::DrawStrikethrough">
    <summary>
      <para>IDWriteTextLayout::Draw calls this function to instruct the client to draw a strikethrough.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextrenderer1-drawstrikethrough" /></para>
      <param name="clientDrawingContext">The application-defined drawing context passed to 
     IDWriteTextLayout::<a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwriteinlineobject-draw">Draw</a>.</param>
      <param name="baselineOriginX">The pixel location (X-coordinate) at the baseline origin of the run where strikethrough applies.</param>
      <param name="baselineOriginY">The pixel location (Y-coordinate) at the baseline origin of the run where strikethrough applies.</param>
      <param name="orientationAngle">Orientation of the strikethrough.</param>
      <param name="strikethrough">Pointer to  a structure containing strikethrough logical information.</param>
      <param name="clientDrawingEffect">Application-defined effect to apply to the strikethrough.  Usually this argument represents effects such as the foreground brush filling the interior of a line.</param>
    </summary>
  </comment>
  <comment id="D2D1_SVG_ASPECT_ALIGN">
    <summary>
      <para>The alignment portion of the SVG preserveAspectRatio attribute.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_aspect_align" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_NONE">
    <summary>The alignment is set to SVG's 'none' value.</summary>
  </comment>
  <comment id="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MIN_Y_MIN">
    <summary>The alignment is set to SVG's 'xMinYMin' value.</summary>
  </comment>
  <comment id="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MID_Y_MIN">
    <summary>The alignment is set to SVG's 'xMidYMin' value.</summary>
  </comment>
  <comment id="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MAX_Y_MIN">
    <summary>The alignment is set to SVG's 'xMaxYMin' value.</summary>
  </comment>
  <comment id="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MIN_Y_MID">
    <summary>The alignment is set to SVG's 'xMinYMid' value.</summary>
  </comment>
  <comment id="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MID_Y_MID">
    <summary>The alignment is set to SVG's 'xMidYMid' value.</summary>
  </comment>
  <comment id="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MAX_Y_MID">
    <summary>The alignment is set to SVG's 'xMaxYMid' value.</summary>
  </comment>
  <comment id="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MIN_Y_MAX">
    <summary>The alignment is set to SVG's 'xMinYMax' value.</summary>
  </comment>
  <comment id="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MID_Y_MAX">
    <summary>The alignment is set to SVG's 'xMidYMax' value.</summary>
  </comment>
  <comment id="D2D1_SVG_ASPECT_ALIGN::D2D1_SVG_ASPECT_ALIGN_X_MAX_Y_MAX">
    <summary>The alignment is set to SVG's 'xMaxYMax' value.</summary>
  </comment>
  <comment id="IDWriteTextLayout::SetFontStyle">
    <summary>
      <para>Sets the font style for text within a text range specified by a DWRITE_TEXT_RANGE structure.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-setfontstyle" /></para>
      <param name="fontStyle">The  font style to be set   for text within a range specified by <i>textRange</i>.</param>
      <param name="textRange">The text range to which this change applies.</param>
    </summary>
  </comment>
  <comment id="ID2D1LookupTable3D">
    <summary>
      <para>A container for 3D lookup table data that can be passed to the LookupTable3D effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1lookuptable3d" /></para>
    </summary>
  </comment>
  <comment id="IWICComponentInfo::GetSpecVersion">
    <summary>
      <para>Retrieves the component's specification version.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccomponentinfo-getspecversion" /></para>
      <param name="cchSpecVersion">The size of the <i>wzSpecVersion</i> buffer.</param>
      <param name="wzSpecVersion">When this method returns, contain a culture invarient string of the component's specification version. The version form is NN.NN.NN.NN.</param>
      <param name="pcchActual">A pointer that receives the actual length of the component's specification version. The specification version is optional; if a value is not specified by the component, the length returned is 0.</param>
    </summary>
  </comment>
  <comment id="IWICJpegFrameDecode::DoesSupportIndexing">
    <summary>
      <para>Retrieves a value indicating whether this decoder supports indexing for efficient random access.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframedecode-doessupportindexing" /></para>
      <param name="pfIndexingSupported">True if indexing is supported; otherwise, false.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPathData::GetSegmentData">
    <summary>
      <para>Gets data from the segment data array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-getsegmentdata" /></para>
      <param name="data">Buffer to contain the segment data array.</param>
      <param name="dataCount">The element count of the buffer.</param>
      <param name="startIndex">The index of the first segment data to retrieve.</param>
    </summary>
  </comment>
  <comment id="IWICPixelFormatInfo::GetColorContext">
    <summary>
      <para>Gets the pixel format's IWICColorContext.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpixelformatinfo-getcolorcontext" /></para>
      <param name="iColorContext">Pointer that receives the pixel format's color context.</param>
    </summary>
  </comment>
  <comment id="D2D1_BORDER_MODE">
    <summary>
      <para>Specifies how the Crop effect handles the crop rectangle falling on fractional pixel coordinates.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_border_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BORDER_MODE::D2D1_BORDER_MODE_SOFT">
    <summary>If the crop rectangle falls on fractional pixel coordinates, the effect applies antialiasing which results in a soft edge.</summary>
  </comment>
  <comment id="D2D1_BORDER_MODE::D2D1_BORDER_MODE_HARD">
    <summary>If the crop rectangle falls on fractional pixel coordinates, the effect clamps which results in a hard edge.</summary>
  </comment>
  <comment id="IWICBitmapDecoder::GetFrameCount">
    <summary>
      <para>Retrieves the total number of frames in the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-getframecount" /></para>
      <param name="count">A pointer that receives the total number of frames in the image.</param>
    </summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE">
    <summary>
      <para>The interpolation mode the 3D perspective transform effect uses on the image. There are 5 scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_3dperspectivetransform_interpolation_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE::D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE::D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode uses more processing time than the nearest neighbor mode, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE::D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE::D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE::D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </comment>
  <comment id="ID2D1ImageBrush::SetExtendModeX">
    <summary>
      <para>Sets how the content inside the source rectangle in the image brush will be extended on the x-axis.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-setextendmodex" /></para>
      <param name="extendModeX">The extend mode on the x-axis of the image.</param>
    </summary>
  </comment>
  <comment id="ID2D1GeometryGroup::GetSourceGeometries">
    <summary>
      <para>Retrieves the geometries in the geometry group.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1geometrygroup-getsourcegeometries" /></para>
      <param name="geometries">When this method returns, contains the address of a pointer to an array of geometries to be filled by this method. The length of the array is specified by the <i>geometryCount</i> parameter. If the array is <b>NULL</b>, then this method performs no operation. You must allocate the memory for this array.</param>
      <param name="geometriesCount">A value indicating the number of geometries to return in the <i>geometries</i> array. If this value is less than the number of geometries in the geometry group, the remaining geometries are omitted. If this value is larger than the number of geometries in the geometry group, the extra geometries are set to <b>NULL</b>. To obtain the number of geometries currently in the geometry group, use the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1geometrygroup-getsourcegeometrycount">GetSourceGeometryCount</a> method.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace2::GetPaletteEntryCount">
    <summary>
      <para>Get the number of entries in each color palette.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefontface2-getpaletteentrycount" /></para>
    </summary>
  </comment>
  <comment id="WICMapShortNameToGuid">
    <summary>
      <para>Obtains the GUID associated with the given short name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-wicmapshortnametoguid" /></para>
      <param name="wzName">A pointer to the short name.</param>
      <param name="pguid">A pointer that receives the GUID associated with the given short name.</param>
    </summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_PROP">
    <summary>
      <para>Identifiers for the properties of the 3D perspective transform effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_3dperspectivetransform_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_INTERPOLATION_MODE">
    <summary>The interpolation mode the effect uses on the image. There are 5 scale modes that range in quality and speed.
            

Type is D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE.

Default value is D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_LINEAR.</summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard. See Border modes for more info.
            

Type is D2D1_BORDER_MODE.

Default value is D2D1_BORDER_MODE_SOFT.</summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_DEPTH">
    <summary>The distance from the PerspectiveOrigin to the projection plane. The value specified in DIPs and must be greater than 0.
            

Type is FLOAT.

Default value is 1000.0f.</summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_PERSPECTIVE_ORIGIN">
    <summary>The X and Y location of the viewer in the 3D scene. This property is a D2D1_VECTOR_2F defined as: (point X, point Y). The units are in DIPs.
            You set the Z value with the Depth property.
            

Type is D2D1_VECTOR_2F.

Default value is {0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_LOCAL_OFFSET">
    <summary>A translation the effect performs before it rotates the projection plane. This property is a D2D1_VECTOR_3F defined as: (X, Y, Z). The units are in DIPs.
            

Type is D2D1_VECTOR_3F.

Default value is {0.0f, 0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_GLOBAL_OFFSET">
    <summary>A translation the effect performs after it rotates the projection plane. This property is a D2D1_VECTOR_3F defined as: (X, Y, Z). The units are in DIPs.
            

Type is D2D1_VECTOR_3F.

Default value is {0.0f, 0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_ROTATION_ORIGIN">
    <summary>The center point of the rotation the effect performs. This property is a D2D1_VECTOR_3F defined as: (X, Y, Z). The units are in DIPs.
            

Type is D2D1_VECTOR_3F.

Default value is {0.0f, 0.0f, 0.0f}.</summary>
  </comment>
  <comment id="D2D1_3DPERSPECTIVETRANSFORM_PROP::D2D1_3DPERSPECTIVETRANSFORM_PROP_ROTATION">
    <summary>The angles of rotation for each axis. This property is a D2D1_VECTOR_3F defined as: (X, Y, Z). The units are in degrees.
            

Type is D2D1_VECTOR_3F.

Default value is {0.0f, 0.0f, 0.0f}.</summary>
  </comment>
  <comment id="IDWriteTextLayout::GetUnderline">
    <summary>
      <para>Gets the underline presence of the text at the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getunderline" /></para>
      <param name="currentPosition">The current text position.</param>
      <param name="hasUnderline">A Boolean  flag that indicates whether underline is present at the position indicated by <i>currentPosition</i>.</param>
      <param name="textRange">The range of text that has the same  formatting as the text at the position specified by <i>currentPosition</i>.  This means the run has the exact  formatting as the position specified, including but not limited to the underline.</param>
    </summary>
  </comment>
  <comment id="D2D1_SVG_PRESERVE_ASPECT_RATIO">
    <summary>
      <para>Represents all SVG preserveAspectRatio settings.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ns-d2d1svg-d2d1_svg_preserve_aspect_ratio" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_PRESERVE_ASPECT_RATIO::defer">
    <summary>Sets the 'defer' portion of the preserveAspectRatio settings. This field only has an effect on an 'image' element that references another SVG document. As
          this is not currently supported, the field has no impact on rendering.</summary>
  </comment>
  <comment id="D2D1_SVG_PRESERVE_ASPECT_RATIO::align">
    <summary>Sets the align portion of the preserveAspectRatio settings.</summary>
  </comment>
  <comment id="D2D1_SVG_PRESERVE_ASPECT_RATIO::meetOrSlice">
    <summary>Sets the meetOrSlice portion of the preserveAspectRatio settings.</summary>
  </comment>
  <comment id="IDWriteGdiInterop1">
    <summary>
      <para>Provides interoperability with GDI, such as methods to convert a font face to a LOGFONT structure, or to convert a GDI font description into a font face. It is also used to create bitmap render target objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritegdiinterop1" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ImageSource">
    <summary>
      <para>Represents a producer of pixels that can fill an arbitrary 2D plane.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1imagesource" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace2::GetRecommendedRenderingMode">
    <summary>
      <para>Determines the recommended text rendering and grid-fit mode to be used based on the font, size, world transform, and measuring mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefontface2-getrecommendedrenderingmode" /></para>
      <param name="fontEmSize">Logical font size in DIPs.</param>
      <param name="dpiX">Number of pixels per logical inch in the horizontal direction.</param>
      <param name="dpiY">Number of pixels per logical inch in the vertical direction.</param>
      <param name="transform">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ns-dwrite-dwrite_matrix">DWRITE_MATRIX</a> structure that describes the world transform.</param>
      <param name="isSideways">Specifies whether the font is sideways. <b>TRUE</b> if the font is sideways; otherwise, <b>FALSE</b>.</param>
      <param name="outlineThreshold">A <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ne-dwrite_1-dwrite_outline_threshold">DWRITE_OUTLINE_THRESHOLD</a>-typed value that specifies the quality of the graphics system's outline rendering, affects the size threshold above which outline rendering is used.</param>
      <param name="measuringMode">A <a href="https://docs.microsoft.com/windows/win32/api/dcommon/ne-dcommon-dwrite_measuring_mode">DWRITE_MEASURING_MODE</a>-typed value that specifies  the method used to measure during text layout. For proper glyph spacing, this method returns a rendering mode that is compatible with the specified measuring mode.</param>
      <param name="renderingParams">A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwriterenderingparams">IDWriteRenderingParams</a> interface for the rendering parameters object. This parameter is necessary in case the rendering parameters object overrides the rendering mode.</param>
      <param name="renderingMode">A pointer to a variable that receives a <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_rendering_mode">DWRITE_RENDERING_MODE</a>-typed value for the recommended rendering mode.</param>
      <param name="gridFitMode">A pointer to a variable that receives a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_2/ne-dwrite_2-dwrite_grid_fit_mode">DWRITE_GRID_FIT_MODE</a>-typed value for the recommended grid-fit mode.</param>
    </summary>
  </comment>
  <comment id="IWICColorContext::InitializeFromFilename">
    <summary>
      <para>Initializes the color context from the given file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolorcontext-initializefromfilename" /></para>
      <param name="wzFilename">The name of the file.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapFrameEncode">
    <summary>
      <para>Represents an encoder's individual image frames.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapframeencode" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::SetFontFamilyName">
    <summary>
      <para>Sets null-terminated font family name for text within a specified text range.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-setfontfamilyname" /></para>
      <param name="fontFamilyName">The font family name that applies to the entire text string within the range specified by <i>textRange</i>.</param>
      <param name="textRange">Text range to which this change applies.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace::GetFiles">
    <summary>
      <para>Obtains the font files representing a font face.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-getfiles" /></para>
      <param name="numberOfFiles">If <i>fontFiles</i> is <b>NULL</b>, receives the number of files representing the font face.  Otherwise, the number of font files being requested should be passed.  See the Remarks section below for more information.</param>
      <param name="fontFiles">When this method returns, contains a pointer to a user-provided array that stores pointers to font files representing the font face.
     This parameter can be <b>NULL</b> if the user wants only the number of files representing the font face.
     This API increments reference count of the font file pointers returned according to COM conventions, and the client
     should release them when finished.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::HitTestPoint">
    <summary>
      <para>The application calls this function passing in a specific pixel location relative to the top-left location of the layout box and obtains the information about the correspondent hit-test metrics of the text string where the hit-test has occurred.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-hittestpoint" /></para>
      <param name="pointX">The pixel location X to hit-test, relative to the top-left location of the layout box.</param>
      <param name="pointY">The pixel location Y to hit-test, relative to the top-left location of the layout box.</param>
      <param name="isTrailingHit">An output flag that indicates whether the hit-test location is at the leading or the trailing
         side of the character. When the output <i>*isInside</i> value is set to <b>FALSE</b>, this value is set according to the output
         <i>hitTestMetrics-&gt;textPosition</i> value to represent the edge closest to the hit-test location.</param>
      <param name="isInside">An output flag that indicates whether the hit-test location is inside the text string.
         When <b>FALSE</b>, the position nearest the text's edge is returned.</param>
      <param name="hitTestMetrics">The output geometry fully enclosing the hit-test location. When the output <i>*isInside</i> value
         is set to <b>FALSE</b>, this structure represents the geometry enclosing the edge closest to the hit-test location.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapFrameDecode::GetColorContexts">
    <summary>
      <para>Retrieves the IWICColorContext associated with the image frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframedecode-getcolorcontexts" /></para>
      <param name="cCount">The number of color contexts to retrieve.

This value must be the size of, or smaller than, the size available to <i>ppIColorContexts</i>.</param>
      <param name="iColorContexts">A pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> objects.</param>
      <param name="pcActualCount">A pointer that receives the number of color contexts contained in the image frame.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext::GetEffectInvalidRectangleCount">
    <summary>
      <para>Gets the number of invalid output rectangles that have accumulated on the effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-geteffectinvalidrectanglecount" /></para>
      <param name="effect">The effect to count the invalid rectangles on.</param>
      <param name="rectangleCount">The returned rectangle count.</param>
    </summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_USAGE">
    <summary>
      <para>Describes how a render target is remoted and whether it should be GDI-compatible. This enumeration allows a bitwise combination of its member values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_render_target_usage" /></para>
    </summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_USAGE::D2D1_RENDER_TARGET_USAGE_NONE">
    <summary>The render target attempts to use Direct3D command-stream remoting and uses bitmap remoting if stream remoting fails. The render target is not GDI-compatible.</summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_USAGE::D2D1_RENDER_TARGET_USAGE_FORCE_BITMAP_REMOTING">
    <summary>The render target renders content locally and sends it to the terminal services client as a bitmap.</summary>
  </comment>
  <comment id="D2D1_RENDER_TARGET_USAGE::D2D1_RENDER_TARGET_USAGE_GDI_COMPATIBLE">
    <summary>The render target can be used efficiently with GDI.</summary>
  </comment>
  <comment id="D2D1_DISCRETETRANSFER_PROP">
    <summary>
      <para>Identifiers for properties of the Discrete transfer effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_discretetransfer_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_RED_TABLE">
    <summary>The list of values used to define the transfer function for the Red channel.
          

The type is FLOAT[].

The default value is {0.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_RED_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Red channel. 
          If you set this to FALSE the effect applies the RedDiscreteTransfer function to the Red channel.
          

The type is BOOL.

The default value if FALSE.</summary>
  </comment>
  <comment id="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_GREEN_TABLE">
    <summary>The list of values used to define the transfer function for the Green channel.
          

The type is FLOAT[].

The default value is {0.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_GREEN_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Green channel. 
          If you set this to FALSE the effect applies the GreenDiscreteTransfer function to the Green channel.
          

The type is BOOL.

The default value if FALSE.</summary>
  </comment>
  <comment id="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_BLUE_TABLE">
    <summary>The list of values used to define the transfer function for the Blue channel.
          

The type is FLOAT[].

The default value is {0.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_BLUE_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Blue channel. 
          If you set this to FALSE the effect applies the BlueDiscreteTransfer function to the Blue channel.
          

The type is BOOL.

The default value if FALSE.</summary>
  </comment>
  <comment id="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_ALPHA_TABLE">
    <summary>The list of values used to define the transfer function for the Alpha channel.
          

The type is FLOAT[].

The default value is {0.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_ALPHA_DISABLE">
    <summary>If you set this to TRUE the effect does not apply the transfer function to the Alpha channel. 
          If you set this to FALSE the effect applies the AlphaDiscreteTransfer function to the Alpha channel.
          

The type is BOOL.

The default value if FALSE.</summary>
  </comment>
  <comment id="D2D1_DISCRETETRANSFER_PROP::D2D1_DISCRETETRANSFER_PROP_CLAMP_OUTPUT">
    <summary>Whether the effect clamps color values to between 0 and 1 before the effect passes the values to the next effect in the graph. 
          The effect clamps the values before it premultiplies the alpha.

          

If you set this to TRUE the effect will clamp the values. If you set this to FALSE, the effect will not clamp the color values, 
          but other effects and the output surface may clamp the values if they are not of high enough precision.

The type is BOOL.

The default value if FALSE.</summary>
  </comment>
  <comment id="IDWriteTextLayout3::GetLineSpacing">
    <summary>
      <para>Gets line spacing information.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritetextlayout3-getlinespacing" /></para>
      <param name="lineSpacingOptions">How to manage space between lines.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFaceReference::GetLocalFileSize">
    <summary>
      <para>Get the local size of the font face in bytes, which will always be less than or equal to GetFullSize. If the locality is remote, this value is zero. If full, this value will equal GetFileSize.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontfacereference-getlocalfilesize" /></para>
    </summary>
  </comment>
  <comment id="ID2D1GeometryRealization">
    <summary>
      <para>Encapsulates a device- and transform-dependent representation of a filled or stroked geometry.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nn-d2d1_2-id2d1geometryrealization" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapDecoder::CopyPalette">
    <summary>
      <para>Copies the decoder's IWICPalette .</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoder-copypalette" /></para>
      <param name="iPalette">An<a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicpalette">IWICPalette</a> to which the decoder's global palette is to be copied. Use <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nf-wincodec-iwicimagingfactory-createpalette">CreatePalette</a> to create the destination palette before calling <b>CopyPalette</b>.</param>
    </summary>
  </comment>
  <comment id="IDWriteRenderingParams">
    <summary>
      <para>Represents text rendering settings such as ClearType level, enhanced contrast, and gamma correction for glyph rasterization and filtering.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwriterenderingparams" /></para>
    </summary>
  </comment>
  <comment id="IWICMetadataQueryWriter::SetMetadataByName">
    <summary>
      <para>Sets a metadata item to a specific location.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicmetadataquerywriter-setmetadatabyname" /></para>
      <param name="wzName">The name of the metadata item.</param>
      <param name="pvarValue">The metadata to set.</param>
    </summary>
  </comment>
  <comment id="ID2D1TransformGraph::SetOutputNode">
    <summary>
      <para>Sets the output node for the transform graph.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1transformgraph-setoutputnode" /></para>
      <param name="node">The node that will be considered the output of the transform node.</param>
    </summary>
  </comment>
  <comment id="D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES">
    <summary>
      <para>Contains the starting point and endpoint of the gradient axis for an ID2D1LinearGradientBrush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_linear_gradient_brush_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES::startPoint">
    <summary>In the brush's coordinate space, the starting point  of the gradient axis.</summary>
  </comment>
  <comment id="D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES::endPoint">
    <summary>In the brush's coordinate space, the endpoint  of the gradient axis.</summary>
  </comment>
  <comment id="ID2D1SpriteBatch::SetSprites">
    <summary>
      <para>Updates the properties of the specified sprites in this sprite batch.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1spritebatch-setsprites" /></para>
      <param name="startIndex">The index of the first sprite in this sprite batch to update.</param>
      <param name="spriteCount">The number of sprites to update with new properties. This determines how many strides into each given array Direct2D will read.</param>
      <param name="destinationRectangles">A pointer to an array containing the destination rectangles specifying where to draw the sprites on the destination device context.</param>
      <param name="sourceRectangles">A pointer to an array containing the source rectangles specifying the regions of the source bitmap to draw as sprites.

          

Direct2D will use the entire source bitmap for sprites that are assigned a null value or the InfiniteRectU. 
          If this parameter is omitted entirely or set to a null value, then Direct2D will use the entire source bitmap for all the updated sprites.</param>
      <param name="colors">A pointer to an array containing the colors to apply to each sprite. The output color is the result of component-wise multiplication of the source bitmap color and the provided color. 
          The output color is not clamped.

          

Direct2D will not change the color of sprites that are assigned a null value. If this parameter is omitted entirely or set to a null value, 
          then Direct2D will not change the color of any of the updated sprites.</param>
      <param name="transforms">A pointer to an array containing the transforms to apply to each sprite’s destination rectangle.

          

Direct2D will not transform the destination rectangle of any sprites that are assigned a null value. 
          If this parameter is omitted entirely or set to a null value, then Direct2D will not transform the destination rectangle of any of the updated sprites.</param>
      <param name="destinationRectanglesStride">Specifies the distance, in bytes, between each rectangle in the destinationRectangles array. 
          If you provide a stride of 0, then the same destination rectangle will be used for each updated sprite.</param>
      <param name="sourceRectanglesStride">Specifies the distance, in bytes, between each rectangle in the sourceRectangles array (if that array is given). 
          If you provide a stride of 0, then the same source rectangle will be used for each updated sprite.</param>
      <param name="colorsStride">Specifies the distance, in bytes, between each color in the colors array (if that array is given). 
          If you provide a stride of 0, then the same color will be used for each updated sprite.</param>
      <param name="transformsStride">Specifies the distance, in bytes, between each transform in the transforms array (if that array is given). 
          If you provide a stride of 0, then the same transform will be used for each updated sprite.</param>
    </summary>
  </comment>
  <comment id="ID2D1PathGeometry::Stream">
    <summary>
      <para>Copies the contents of the path geometry to the specified ID2D1GeometrySink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1pathgeometry-stream" /></para>
      <param name="geometrySink">The sink to which the path geometry's contents are copied. Modifying this sink does not change the contents of this path geometry.</param>
    </summary>
  </comment>
  <comment id="D2D1_PATH_SEGMENT">
    <summary>
      <para>Indicates whether a segment should be stroked and whether the join between this segment and the previous one should be smooth. This enumeration allows a bitwise combination of its member values.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_path_segment" /></para>
    </summary>
  </comment>
  <comment id="D2D1_PATH_SEGMENT::D2D1_PATH_SEGMENT_NONE">
    <summary>The segment is joined  as specified by the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1strokestyle">ID2D1StrokeStyle</a> interface, and it is stroked.</summary>
  </comment>
  <comment id="D2D1_PATH_SEGMENT::D2D1_PATH_SEGMENT_FORCE_UNSTROKED">
    <summary>The segment is not stroked.</summary>
  </comment>
  <comment id="D2D1_PATH_SEGMENT::D2D1_PATH_SEGMENT_FORCE_ROUND_LINE_JOIN">
    <summary>The segment is always joined with the one preceding it using a round line join, regardless of which <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_line_join">D2D1_LINE_JOIN</a>enumeration is specified by the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1strokestyle">ID2D1StrokeStyle</a> interface. If this segment is the first segment and the figure is closed, a round line join is used to connect the closing segment with the first segment. If the figure is not closed, this setting has no effect on the first segment of the figure. If <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1simplifiedgeometrysink-setsegmentflags">ID2D1SimplifiedGeometrySink::SetSegmentFlags</a> is called just before <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1simplifiedgeometrysink-endfigure">ID2D1SimplifiedGeometrySink::EndFigure</a>, the join between the closing segment and the last explicitly specified segment is affected.</summary>
  </comment>
  <comment id="IDWriteFontFace::GetDesignGlyphMetrics">
    <summary>
      <para>Obtains ideal (resolution-independent) glyph metrics in font design units.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-getdesignglyphmetrics" /></para>
      <param name="glyphIndices"> An array of glyph indices for which to compute  metrics. The array must contain at least as many elements as specified by <i>glyphCount</i>.</param>
      <param name="glyphCount">The number of elements in the <i>glyphIndices</i> array.</param>
      <param name="glyphMetrics">When this method returns, contains an array of DWRITE_GLYPH_METRICS structures.  <i>glyphMetrics</i> must be initialized with an empty buffer that contains at least as many elements as <i>glyphCount</i>.
     The metrics returned by this function are in font design units.</param>
      <param name="isSideways">Indicates whether the font is being used in a sideways run. This can affect the glyph metrics if the font has oblique simulation
    because sideways oblique simulation differs from non-sideways oblique simulation</param>
    </summary>
  </comment>
  <comment id="D2D1_PRIMITIVE_BLEND">
    <summary>
      <para>Used to specify the geometric blend mode for all Direct2D primitives.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_primitive_blend" /></para>
    </summary>
  </comment>
  <comment id="D2D1_PRIMITIVE_BLEND::D2D1_PRIMITIVE_BLEND_SOURCE_OVER">
    <summary>The standard source-over-destination blend mode.</summary>
  </comment>
  <comment id="D2D1_PRIMITIVE_BLEND::D2D1_PRIMITIVE_BLEND_COPY">
    <summary>The source is copied to the destination; the destination pixels are ignored.</summary>
  </comment>
  <comment id="D2D1_PRIMITIVE_BLEND::D2D1_PRIMITIVE_BLEND_MIN">
    <summary>The resulting pixel values use the minimum of the source and destination pixel values. Available in Windows 8 and later.</summary>
  </comment>
  <comment id="D2D1_PRIMITIVE_BLEND::D2D1_PRIMITIVE_BLEND_ADD">
    <summary>The resulting pixel values are the sum of the source and destination pixel values. Available in Windows 8 and later.</summary>
  </comment>
  <comment id="D2D1_PRIMITIVE_BLEND::D2D1_PRIMITIVE_BLEND_MAX">
    <summary>The resulting pixel values use the maximum of the source and destination pixel values. 
          Available in Windows 10 and later (set using <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nf-d2d1_3-id2d1commandsink4-setprimitiveblend2">ID21CommandSink4::SetPrimitiveBlend2</a>).</summary>
  </comment>
  <comment id="D2D1_STRAIGHTEN_PROP">
    <summary>
      <para>Identifiers for properties of the Straighten effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_straighten_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_STRAIGHTEN_PROP::D2D1_STRAIGHTEN_PROP_ANGLE">
    <summary>The D2D1_STRAIGHTEN_PROP_ANGLE property is a float value that specifies how much the image should be rotated.  The allowed range is -45.0 to 45.0.  The default value is 0.0.</summary>
  </comment>
  <comment id="D2D1_STRAIGHTEN_PROP::D2D1_STRAIGHTEN_PROP_MAINTAIN_SIZE">
    <summary>The D2D1_STRAIGHTEN_PROP_MAINTAIN_SIZE property is a boolean value that specifies whether the image will be scaled such that the original size is maintained without any invalid regions.
          The default value is True.</summary>
  </comment>
  <comment id="D2D1_STRAIGHTEN_PROP::D2D1_STRAIGHTEN_PROP_SCALE_MODE">
    <summary>The D2D1_STRAIGHTEN_PROP_SCALE_MODE property is a <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_2/ne-d2d1effects_2-d2d1_straighten_scale_mode">D2D1_STRAIGHTEN_SCALE_MODE</a> enumeration value indicating the scaling mode that should be used.</summary>
  </comment>
  <comment id="IDWriteFontFace1::HasVerticalGlyphVariants">
    <summary>
      <para>Determines whether the font has any vertical glyph variants.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefontface1-hasverticalglyphvariants" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFont3::CreateFontFace">
    <summary>
      <para>Creates a font face object for the font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefont3-createfontface" /></para>
      <param name="fontFace">A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_3/nn-dwrite_3-idwritefontface3">IDWriteFontFace3</a> interface for the newly created font face object.</param>
    </summary>
  </comment>
  <comment id="IDWriteInMemoryFontFileLoader">
    <summary>
      <para>Represents a font file loader that can access in-memory fonts.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwriteinmemoryfontfileloader" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetDrawingEffect">
    <summary>
      <para>Gets the application-defined drawing effect at the specified text position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getdrawingeffect" /></para>
      <param name="currentPosition">The position of the text whose drawing effect is to be retrieved.</param>
      <param name="drawingEffect">When this method returns, contains an address of a pointer to  the current application-defined drawing effect. Usually this effect is a foreground brush that  is used in glyph drawing.</param>
      <param name="textRange">Contains the range of text that has the same  formatting as the text at the position specified by <i>currentPosition</i>.  This means the run has the exact  formatting as the position specified, including but not limited to the drawing effect.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::GetToneCurve">
    <summary>
      <para>Gets the tone curve of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-gettonecurve" /></para>
      <param name="cbToneCurveBufferSize">The size of the <i>pToneCurve</i> buffer.</param>
      <param name="toneCurve">A pointer that receives the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ns-wincodec-wicrawtonecurve">WICRawToneCurve</a> of the raw image.</param>
      <param name="pcbActualToneCurveBufferSize">A pointer that receives the size needed to obtain the tone curve structure.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory2::CreateImageEncoder">
    <summary>
      <para>Creates a new image encoder object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory2-createimageencoder" /></para>
      <param name="d2DDevice">The <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nn-d2d1_1-id2d1device">ID2D1Device</a> object on which the corresponding image encoder is created.</param>
      <param name="wICImageEncoder">A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicimageencoder">IWICImageEncoder</a> interface for the encoder object that you can use to encode <a href="https://docs.microsoft.com/windows/desktop/Direct2D/direct2d-portal">Direct2D</a> images.</param>
    </summary>
  </comment>
  <comment id="ID2D1HwndRenderTarget::GetHwnd">
    <summary>
      <para>Returns the HWND associated with this render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1hwndrendertarget-gethwnd" /></para>
    </summary>
  </comment>
  <comment id="D2D1_PRINT_FONT_SUBSET_MODE">
    <summary>
      <para>Defines when font resources should be subset during printing.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_print_font_subset_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_PRINT_FONT_SUBSET_MODE::D2D1_PRINT_FONT_SUBSET_MODE_DEFAULT">
    <summary>Uses a heuristic strategy to decide when to subset fonts. 

> [!NOTE]
> If the print driver has requested archive-optimized content, then Direct2D will subset fonts once, for the entire document.</summary>
  </comment>
  <comment id="D2D1_PRINT_FONT_SUBSET_MODE::D2D1_PRINT_FONT_SUBSET_MODE_EACHPAGE">
    <summary>Subsets and embeds font resources in each page, then discards that font subset after the page is printed out.</summary>
  </comment>
  <comment id="D2D1_PRINT_FONT_SUBSET_MODE::D2D1_PRINT_FONT_SUBSET_MODE_NONE">
    <summary>Sends out the original font resources without subsetting along with the page that first uses the font, and re-uses the font resources for later pages without resending them.</summary>
  </comment>
  <comment id="D2D1_PRINT_FONT_SUBSET_MODE::D2D1_PRINT_FONT_SUBSET_MODE_FORCE_DWORD">
    <summary>A value that's guaranteed to be a DWORD.</summary>
  </comment>
  <comment id="IDWriteTextFormat::GetTrimming">
    <summary>
      <para>Gets the trimming options for text that overflows the layout box.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-gettrimming" /></para>
      <param name="trimmingOptions">When this method returns, it contains a pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ns-dwrite-dwrite_trimming">DWRITE_TRIMMING</a> structure that holds the text trimming options for the overflowing text.</param>
      <param name="trimmingSign">When this method returns, contains an address of a pointer to a trimming omission sign. This parameter may be <b>NULL</b>.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalysisSource1">
    <summary>
      <para>The interface you implement to provide needed information to the text analyzer, like the text and associated text properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nn-dwrite_1-idwritetextanalysissource1" /></para>
    </summary>
  </comment>
  <comment id="IDWriteStringList::GetString">
    <summary>
      <para>Copies the string with the specified index to the specified array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritestringlist-getstring" /></para>
      <param name="listIndex">Zero-based index of the string.</param>
      <param name="stringBuffer">Character array that receives the string.</param>
      <param name="stringBufferSize">Size of the array in characters. The size must include space for the terminating null character.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::DrawTextLayout">
    <summary>
      <para>Draws the formatted text described by the specified IDWriteTextLayout object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-drawtextlayout" /></para>
      <param name="origin">The point, described in device-independent pixels, at which the upper-left corner of the text described by <i>textLayout</i> is drawn.</param>
      <param name="textLayout">The formatted text to draw. Any drawing effects that do not inherit from <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1resource">ID2D1Resource</a> are ignored. If there are drawing effects that inherit from <b>ID2D1Resource</b> that are not brushes, this method fails and the render target is put in an error state.</param>
      <param name="defaultFillBrush">The brush used to paint any text in <i>textLayout</i> that does not already have a brush associated with it as a drawing effect (specified by the <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextlayout-setdrawingeffect">IDWriteTextLayout::SetDrawingEffect</a> method).</param>
      <param name="options">A value that indicates whether the text should be snapped to pixel boundaries and whether the text should be clipped to the layout rectangle. The default value is <a href="https://docs.microsoft.com/windows/win32/api/d2d1/ne-d2d1-d2d1_draw_text_options">D2D1_DRAW_TEXT_OPTIONS_NONE</a>, which indicates that text should be snapped to pixel boundaries and it should not be clipped to the layout rectangle.</param>
    </summary>
  </comment>
  <comment id="ID2D1RectangleGeometry::GetRect">
    <summary>
      <para>Retrieves the rectangle that describes the rectangle geometry's dimensions.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rectanglegeometry-getrect" /></para>
      <param name="rect">Contains a pointer to a rectangle that describes the rectangle geometry's dimensions when this method returns. You must allocate storage for this parameter.</param>
    </summary>
  </comment>
  <comment id="ID2D1BitmapBrush::SetExtendModeX">
    <summary>
      <para>Specifies how the brush horizontally tiles those areas that extend past its bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmapbrush-setextendmodex" /></para>
      <param name="extendModeX">A value that specifies how the brush horizontally tiles those areas that extend past its bitmap.</param>
    </summary>
  </comment>
  <comment id="IDWriteTypography">
    <summary>
      <para>Represents a font typography setting.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritetypography" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RadialGradientBrush">
    <summary>
      <para>Paints an area with a radial gradient.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1radialgradientbrush" /></para>
    </summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS">
    <summary>
      <para>Contains the content bounds, mask information, opacity settings, and other options for a layer resource.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_layer_parameters" /></para>
    </summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS::contentBounds">
    <summary>The content bounds of the layer. Content outside these bounds is not guaranteed to render.</summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS::geometricMask">
    <summary>The geometric mask specifies the area of the layer that is composited into the render target.</summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS::maskAntialiasMode">
    <summary>A value that specifies the antialiasing mode for the geometricMask.</summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS::maskTransform">
    <summary>A value that specifies the transform that is applied to the geometric mask when composing the layer.</summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS::opacity">
    <summary>An opacity value that is applied uniformly to all resources in the layer when compositing to the target.</summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS::opacityBrush">
    <summary>A brush that is used to modify the opacity of the layer. The brush 
is mapped to the layer, and the alpha channel of each mapped brush pixel is multiplied against the corresponding layer pixel.</summary>
  </comment>
  <comment id="D2D1_LAYER_PARAMETERS::layerOptions">
    <summary>A value that specifies whether the layer intends to render text with ClearType antialiasing.</summary>
  </comment>
  <comment id="D2D1_MAP_OPTIONS">
    <summary>
      <para>Specifies how the memory to be mapped from the corresponding ID2D1Bitmap1 should be treated.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_map_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_MAP_OPTIONS::D2D1_MAP_OPTIONS_READ">
    <summary>Allow CPU Read access.</summary>
  </comment>
  <comment id="D2D1_MAP_OPTIONS::D2D1_MAP_OPTIONS_WRITE">
    <summary>Allow CPU Write access.</summary>
  </comment>
  <comment id="D2D1_MAP_OPTIONS::D2D1_MAP_OPTIONS_DISCARD">
    <summary>Discard the previous contents of the resource when it is mapped.</summary>
  </comment>
  <comment id="ID2D1DrawingStateBlock1">
    <summary>
      <para>Implementation of a drawing state block that adds the functionality of primitive blend in addition to already existing antialias mode, transform, tags and text rendering mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1drawingstateblock1" /></para>
    </summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES1">
    <summary>
      <para>Describes the stroke that outlines a shape.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_stroke_style_properties1" /></para>
    </summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES1::startCap">
    <summary>The cap to use at the start of each open figure.</summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES1::endCap">
    <summary>The cap to use at the end of each open figure.</summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES1::dashCap">
    <summary>The cap to use at the start and end of each dash.</summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES1::lineJoin">
    <summary>The line join to use.</summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES1::miterLimit">
    <summary>The limit beyond which miters are either clamped or converted to bevels.</summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES1::dashStyle">
    <summary>The type of dash to use.</summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES1::dashOffset">
    <summary>The location of the first dash, relative to the start of the figure.</summary>
  </comment>
  <comment id="D2D1_STROKE_STYLE_PROPERTIES1::transformType">
    <summary>The rule that determines what render target properties affect the nib of the stroke.</summary>
  </comment>
  <comment id="WICTiffCompressionOption">
    <summary>
      <para>Specifies the Tagged Image File Format (TIFF) compression options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wictiffcompressionoption" /></para>
    </summary>
  </comment>
  <comment id="WICTiffCompressionOption::WICTiffCompressionDontCare">
    <summary>Indicates a suitable compression algorithm based on the image and pixel format.</summary>
  </comment>
  <comment id="WICTiffCompressionOption::WICTiffCompressionNone">
    <summary>Indicates no compression.</summary>
  </comment>
  <comment id="WICTiffCompressionOption::WICTiffCompressionCCITT3">
    <summary>Indicates a CCITT3 compression algorithm. This algorithm is only valid for 1bpp pixel formats.</summary>
  </comment>
  <comment id="WICTiffCompressionOption::WICTiffCompressionCCITT4">
    <summary>Indicates a CCITT4 compression algorithm. This algorithm is only valid for 1bpp pixel formats.</summary>
  </comment>
  <comment id="WICTiffCompressionOption::WICTiffCompressionLZW">
    <summary>Indicates a LZW compression algorithm.</summary>
  </comment>
  <comment id="WICTiffCompressionOption::WICTiffCompressionRLE">
    <summary>Indicates a RLE compression algorithm. This algorithm is only valid for 1bpp pixel formats.</summary>
  </comment>
  <comment id="WICTiffCompressionOption::WICTiffCompressionZIP">
    <summary>Indicates a ZIP compression algorithm.</summary>
  </comment>
  <comment id="WICTiffCompressionOption::WICTiffCompressionLZWHDifferencing">
    <summary>Indicates an LZWH differencing algorithm.</summary>
  </comment>
  <comment id="D2D1_GAUSSIANBLUR_OPTIMIZATION">
    <summary>
      <para>The optimization mode for the Gaussian blur effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_gaussianblur_optimization" /></para>
    </summary>
  </comment>
  <comment id="D2D1_GAUSSIANBLUR_OPTIMIZATION::D2D1_GAUSSIANBLUR_OPTIMIZATION_SPEED">
    <summary>Applies internal optimizations such as pre-scaling at relatively small radii. Uses linear filtering.</summary>
  </comment>
  <comment id="D2D1_GAUSSIANBLUR_OPTIMIZATION::D2D1_GAUSSIANBLUR_OPTIMIZATION_BALANCED">
    <summary>Uses the same optimization thresholds as Speed mode, but uses trilinear filtering.</summary>
  </comment>
  <comment id="D2D1_GAUSSIANBLUR_OPTIMIZATION::D2D1_GAUSSIANBLUR_OPTIMIZATION_QUALITY">
    <summary>Only uses internal optimizations with large blur radii, where approximations are less likely to be visible. Uses trilinear filtering.</summary>
  </comment>
  <comment id="ID2D1ColorContext::GetColorSpace">
    <summary>
      <para>Gets the color space of the color context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1colorcontext-getcolorspace" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COLOR_SPACE">
    <summary>
      <para>Defines options that should be applied to the color space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_color_space" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COLOR_SPACE::D2D1_COLOR_SPACE_CUSTOM">
    <summary>The color space is otherwise described, such as with a color profile.</summary>
  </comment>
  <comment id="D2D1_COLOR_SPACE::D2D1_COLOR_SPACE_SRGB">
    <summary>The color space is sRGB.</summary>
  </comment>
  <comment id="D2D1_COLOR_SPACE::D2D1_COLOR_SPACE_SCRGB">
    <summary>The color space is scRGB.</summary>
  </comment>
  <comment id="ID2D1Bitmap::GetSize">
    <summary>
      <para>Returns the size, in device-independent pixels (DIPs), of the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmap-getsize" /></para>
    </summary>
  </comment>
  <comment id="ID2D1AnalysisTransform">
    <summary>
      <para>Supplies data to an analysis effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1analysistransform" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_LENGTH">
    <summary>
      <para>Represents an SVG length.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ns-d2d1svg-d2d1_svg_length" /></para>
    </summary>
  </comment>
  <comment id="WICGifGraphicControlExtensionProperties">
    <summary>
      <para>Specifies the graphic control extension metadata properties that define the transitions between each frame animation for Graphics Interchange Format (GIF) images.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicgifgraphiccontrolextensionproperties" /></para>
    </summary>
  </comment>
  <comment id="WICGifGraphicControlExtensionProperties::WICGifGraphicControlExtensionDisposal">
    <summary>[VT_UI1] Indicates  the disposal requirements. 0 - no disposal, 1 - do not dispose, 2 - restore to background color, 3 - restore to previous.</summary>
  </comment>
  <comment id="WICGifGraphicControlExtensionProperties::WICGifGraphicControlExtensionUserInputFlag">
    <summary>[VT_BOOL] Indicates the user input flag. <b>TRUE</b> if user input should advance to the next frame; otherwise, <b>FALSE</b>.</summary>
  </comment>
  <comment id="WICGifGraphicControlExtensionProperties::WICGifGraphicControlExtensionTransparencyFlag">
    <summary>[VT_BOOL] Indicates the transparency flag. <b>TRUE</b> if a transparent color in is in the color table for this frame; otherwise, <b>FALSE</b>.</summary>
  </comment>
  <comment id="WICGifGraphicControlExtensionProperties::WICGifGraphicControlExtensionDelay">
    <summary>[VT_UI2] Indicates  how long to display the next frame before advancing to the next frame, in units of 1/100th of a second.</summary>
  </comment>
  <comment id="WICGifGraphicControlExtensionProperties::WICGifGraphicControlExtensionTransparentColorIndex">
    <summary>[VT_UI1] Indicates which color in the palette should be treated as transparent.</summary>
  </comment>
  <comment id="ID2D1Factory1::CreateGdiMetafile">
    <summary>
      <para>Creates a new ID2D1GdiMetafile object that you can use to replay metafile content.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-creategdimetafile" /></para>
      <param name="metafileStream">A stream object that has the metafile data.</param>
      <param name="metafile">The address of the newly created GDI metafile object.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextRenderer::DrawGlyphRun">
    <summary>
      <para>IDWriteTextLayout::Draw calls this function to instruct the client to render a run of glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextrenderer-drawglyphrun" /></para>
      <param name="clientDrawingContext">The application-defined drawing context passed to 
     <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextlayout-draw">IDWriteTextLayout::Draw</a>.</param>
      <param name="baselineOriginX">The pixel location (X-coordinate) at the baseline origin of the glyph run.</param>
      <param name="baselineOriginY">The pixel location (Y-coordinate) at the baseline origin of the glyph run.</param>
      <param name="measuringMode">The measuring method for glyphs in the run, used with the other properties to determine the rendering mode.</param>
      <param name="glyphRun">Pointer to the glyph run instance to render.</param>
      <param name="glyphRunDescription">A pointer to the glyph run description instance which contains properties of the characters 
     associated with this run.</param>
      <param name="clientDrawingEffect">Application-defined drawing effects for the glyphs to render. Usually this argument represents effects such as the foreground brush filling the interior of text.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer1::AnalyzeVerticalGlyphOrientation">
    <summary>
      <para>Analyzes a text range for script orientation, reading text and attributes from the source and reporting results to the sink callback SetGlyphOrientation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextanalyzer1-analyzeverticalglyphorientation" /></para>
      <param name="analysisSource">Source object to analyze.</param>
      <param name="textPosition">Starting position within the source object.</param>
      <param name="textLength">Length to analyze.</param>
      <param name="analysisSink">Length to analyze.</param>
    </summary>
  </comment>
  <comment id="D2D1_GAMMA1">
    <summary>
      <para>Determines what gamma is used for interpolation and blending.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_gamma1" /></para>
    </summary>
  </comment>
  <comment id="D2D1_GAMMA1::D2D1_GAMMA1_G22">
    <summary>Colors are manipulated in 2.2 gamma color space.</summary>
  </comment>
  <comment id="D2D1_GAMMA1::D2D1_GAMMA1_G10">
    <summary>Colors are manipulated in 1.0 gamma color space.</summary>
  </comment>
  <comment id="D2D1_GAMMA1::D2D1_GAMMA1_G2084">
    <summary>Colors are manipulated in ST.2084 PQ gamma color space.</summary>
  </comment>
  <comment id="ID2D1GradientStopCollection">
    <summary>
      <para>Represents an collection of D2D1_GRADIENT_STOP objects for linear and radial gradient brushes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1gradientstopcollection" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapDecoderCapabilities">
    <summary>
      <para>Specifies the capabilities of the decoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicbitmapdecodercapabilities" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapDecoderCapabilities::WICBitmapDecoderCapabilitySameEncoder">
    <summary>Decoder recognizes the image was encoded with an encoder produced by the same vendor.</summary>
  </comment>
  <comment id="WICBitmapDecoderCapabilities::WICBitmapDecoderCapabilityCanDecodeAllImages">
    <summary>Decoder can decode all the images within an image container.</summary>
  </comment>
  <comment id="WICBitmapDecoderCapabilities::WICBitmapDecoderCapabilityCanDecodeSomeImages">
    <summary>Decoder can decode some of the images within an image container.</summary>
  </comment>
  <comment id="WICBitmapDecoderCapabilities::WICBitmapDecoderCapabilityCanEnumerateMetadata">
    <summary>Decoder can enumerate the metadata blocks within a container format.</summary>
  </comment>
  <comment id="WICBitmapDecoderCapabilities::WICBitmapDecoderCapabilityCanDecodeThumbnail">
    <summary>Decoder can find and decode a thumbnail.</summary>
  </comment>
  <comment id="D2D1GetGradientMeshInteriorPointsFromCoonsPatch">
    <summary>
      <para>Returns the interior points for a gradient mesh patch based on the points defining a Coons patch.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-d2d1getgradientmeshinteriorpointsfromcoonspatch" /></para>
      <param name="point0">The coordinate-space location of the control point at position 0.</param>
      <param name="point1">The coordinate-space location of the control point at position 1.</param>
      <param name="point2">The coordinate-space location of the control point at position 2.</param>
      <param name="point3">The coordinate-space location of the control point at position 3.</param>
      <param name="point4">The coordinate-space location of the control point at position 4.</param>
      <param name="point5">The coordinate-space location of the control point at position 5.</param>
      <param name="point6">The coordinate-space location of the control point at position 6.</param>
      <param name="point7">The coordinate-space location of the control point at position 7.</param>
      <param name="point8">The coordinate-space location of the control point at position 8.</param>
      <param name="point9">The coordinate-space location of the control point at position 9.</param>
      <param name="point10">The coordinate-space location of the control point at position 10.</param>
      <param name="point11">The coordinate-space location of the control point at position 11.</param>
      <param name="tensorPoint11">Returns the interior point for the gradient mesh corresponding to point11 in the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/ns-d2d1_3-d2d1_gradient_mesh_patch">D2D1_GRADIENT_MESH_PATCH</a> structure.</param>
      <param name="tensorPoint12">Returns the interior point for the gradient mesh corresponding to point12 in the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/ns-d2d1_3-d2d1_gradient_mesh_patch">D2D1_GRADIENT_MESH_PATCH</a> structure.</param>
      <param name="tensorPoint21">Returns the interior point for the gradient mesh corresponding to point21 in the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/ns-d2d1_3-d2d1_gradient_mesh_patch">D2D1_GRADIENT_MESH_PATCH</a> structure.</param>
      <param name="tensorPoint22">Returns the interior point for the gradient mesh corresponding to point22 in the <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/ns-d2d1_3-d2d1_gradient_mesh_patch">D2D1_GRADIENT_MESH_PATCH</a> structure.</param>
    </summary>
  </comment>
  <comment id="D2D1_HUETORGB_PROP">
    <summary>
      <para>Identifiers for properties of the Hue to RGB effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_huetorgb_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_HUETORGB_PROP::D2D1_HUETORGB_PROP_INPUT_COLOR_SPACE">
    <summary>The D2D1_HUETORGB_PROP_INPUT_COLOR_SPACE property is an enumeration value which indicates which color space to convert from. 
          The default value for the property is D2D1_HUETORGB_INPUT_COLOR_SPACE_HUE_SATURATION_VALUE.
          See <a href="https://docs.microsoft.com/windows/desktop/api/d2d1effects_2/ne-d2d1effects_2-d2d1_huetorgb_input_color_space">D2D1_HUETORGB_INPUT_COLOR_SPACE</a> enumeration for more information.</summary>
  </comment>
  <comment id="ID2D1ImageBrush::GetExtendModeY">
    <summary>
      <para>Gets the extend mode of the image brush on the y-axis of the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1imagebrush-getextendmodey" /></para>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::GetMaximumBitmapSize">
    <summary>
      <para>Gets the maximum size, in device-dependent units (pixels), of any one bitmap dimension supported by the render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-getmaximumbitmapsize" /></para>
    </summary>
  </comment>
  <comment id="D2D1_CREATION_PROPERTIES">
    <summary>
      <para>Specifies the options with which the Direct2D device, factory, and device context are created.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ns-d2d1_1-d2d1_creation_properties" /></para>
    </summary>
  </comment>
  <comment id="D2D1_CREATION_PROPERTIES::threadingMode">
    <summary>The threading mode with which the corresponding root objects will be created.</summary>
  </comment>
  <comment id="D2D1_CREATION_PROPERTIES::debugLevel">
    <summary>The debug level that the root objects should be created with.</summary>
  </comment>
  <comment id="D2D1_CREATION_PROPERTIES::options">
    <summary>The device context options that the root objects should be created with.</summary>
  </comment>
  <comment id="IWICDdsFrameDecode::GetFormatInfo">
    <summary>
      <para>Gets information about the format in which the DDS image is stored.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicddsframedecode-getformatinfo" /></para>
      <param name="formatInfo">Information about the DDS format.</param>
    </summary>
  </comment>
  <comment id="IWICPalette::InitializeFromBitmap">
    <summary>
      <para>Initializes a palette using a computed optimized values based on the reference bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-initializefrombitmap" /></para>
      <param name="iSurface">Pointer to the source bitmap.</param>
      <param name="cCount">The number of colors to initialize the palette with.</param>
      <param name="fAddTransparentColor">A value to indicate whether to add a transparent color.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::GetAntialiasMode">
    <summary>
      <para>Retrieves the current antialiasing mode for nontext drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-getantialiasmode" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ColorContext::GetProfileSize">
    <summary>
      <para>Gets the size of the color profile associated with the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1colorcontext-getprofilesize" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFont3::GetFontFaceReference">
    <summary>
      <para>Gets a font face reference that identifies this font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefont3-getfontfacereference" /></para>
      <param name="fontFaceReference">A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_3/nn-dwrite_3-idwritefontfacereference">IDWriteFontFaceReference</a> interface for the newly created font face reference object.</param>
    </summary>
  </comment>
  <comment id="ID2D1DrawingStateBlock">
    <summary>
      <para>Represents the drawing state of a render target:\_the antialiasing mode, transform, tags, and text-rendering options.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1drawingstateblock" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapPlaneDescription">
    <summary>
      <para>Specifies the pixel format and size of a component plane.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ns-wincodec-wicbitmapplanedescription" /></para>
    </summary>
  </comment>
  <comment id="WICBitmapPlaneDescription::Format">
    <summary>Describes the pixel format of the plane.</summary>
  </comment>
  <comment id="WICBitmapPlaneDescription::Width">
    <summary>Component width of the plane.</summary>
  </comment>
  <comment id="WICBitmapPlaneDescription::Height">
    <summary>Component height of the plane.</summary>
  </comment>
  <comment id="IWICImageEncoder">
    <summary>
      <para>Encodes ID2D1Image interfaces to an IWICBitmapEncoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicimageencoder" /></para>
    </summary>
  </comment>
  <comment id="IWICFastMetadataEncoder::Commit">
    <summary>
      <para>Finalizes metadata changes to the image stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicfastmetadataencoder-commit" /></para>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext4::DrawColorBitmapGlyphRun">
    <summary>
      <para>Draws a color bitmap glyph run using one of the bitmap formats.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext4-drawcolorbitmapglyphrun" /></para>
      <param name="glyphImageFormat">Specifies the format of the glyph image. Supported formats are DWRITE_GLYPH_IMAGE_FORMATS_PNG, DWRITE_GLYPH_IMAGE_FORMATS_JPEG,
          DWRITE_GLYPH_IMAGE_FORMATS_TIFF, or DWRITE_GLYPH_IMAGE_FORMATS_PREMULTIPLIED_B8G8R8A8.  This method will result in an error if the color glyph run does not contain the requested format.
          

Only one format can be specified at a time, combinations of flags are not valid input.</param>
      <param name="baselineOrigin">The origin of the baseline for the glyph run.</param>
      <param name="glyphRun">The glyphs to render.</param>
      <param name="measuringMode">Indicates the measuring method.</param>
      <param name="bitmapSnapOption">Specifies the pixel snapping policy when rendering color bitmap glyphs.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout2::SetFontFallback">
    <summary>
      <para>Apply a custom font fallback onto layout.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextlayout2-setfontfallback" /></para>
      <param name="fontFallback">Custom font fallback created from <a href="https://docs.microsoft.com/windows/win32/api/dwrite_2/nf-dwrite_2-idwritefontfallbackbuilder-createfontfallback">IDWriteFontFallbackBuilder::CreateFontFallback</a> or <a href="https://docs.microsoft.com/windows/win32/DirectWrite/idwritefactory2-getsystemfontfallback">IDWriteFactory2::GetSystemFontFallback</a>.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapCodecInfo">
    <summary>
      <para>Exposes methods that provide information about a particular codec.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nn-wincodec-iwicbitmapcodecinfo" /></para>
    </summary>
  </comment>
  <comment id="WICPngChrmProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) cHRM chunk metadata properties for CIE XYZ chromaticity.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpngchrmproperties" /></para>
    </summary>
  </comment>
  <comment id="WICPngChrmProperties::WICPngChrmWhitePointX">
    <summary>[VT_UI4] Indicates the whitepoint x value ratio.</summary>
  </comment>
  <comment id="WICPngChrmProperties::WICPngChrmWhitePointY">
    <summary>[VT_UI4] Indicates the whitepoint y value ratio.</summary>
  </comment>
  <comment id="WICPngChrmProperties::WICPngChrmRedX">
    <summary>[VT_UI4] Indicates the red x value ratio.</summary>
  </comment>
  <comment id="WICPngChrmProperties::WICPngChrmRedY">
    <summary>[VT_UI4] Indicates the red y value ratio.</summary>
  </comment>
  <comment id="WICPngChrmProperties::WICPngChrmGreenX">
    <summary>[VT_UI4] Indicates the green x value ratio.</summary>
  </comment>
  <comment id="WICPngChrmProperties::WICPngChrmGreenY">
    <summary>[VT_UI4] Indicates the green y value ratio.</summary>
  </comment>
  <comment id="WICPngChrmProperties::WICPngChrmBlueX">
    <summary>[VT_UI4] Indicates the blue x value ratio.</summary>
  </comment>
  <comment id="WICPngChrmProperties::WICPngChrmBlueY">
    <summary>[VT_UI4] Indicates the blue y value ratio.</summary>
  </comment>
  <comment id="IDWriteBitmapRenderTarget::DrawGlyphRun">
    <summary>
      <para>Draws a run of glyphs to a bitmap target at the specified position.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritebitmaprendertarget-drawglyphrun" /></para>
      <param name="baselineOriginX">The horizontal position of the baseline origin, in DIPs, relative to the upper-left corner of the DIB.</param>
      <param name="baselineOriginY">The vertical position of the baseline origin, in DIPs, relative to the upper-left corner of the DIB.</param>
      <param name="measuringMode">The measuring method for glyphs in the run, used with the other properties to determine the rendering mode.</param>
      <param name="glyphRun">The structure containing the properties of the glyph run.</param>
      <param name="renderingParams">The object that controls rendering behavior.</param>
      <param name="textColor">The foreground color of the text.</param>
      <param name="blackBoxRect">The optional rectangle that receives the bounding box (in pixels not DIPs) of all the pixels affected by 
     drawing the glyph run. The black box rectangle may extend beyond the dimensions of the bitmap.</param>
    </summary>
  </comment>
  <comment id="ID2D1GeometryGroup::GetSourceGeometryCount">
    <summary>
      <para>Indicates the number of geometry objects in the geometry group.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1geometrygroup-getsourcegeometrycount" /></para>
    </summary>
  </comment>
  <comment id="WICHeifProperties">
    <summary>
      <para>Specifies the properties of a High Efficiency Image Format (HEIF) image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicheifproperties" /></para>
    </summary>
  </comment>
  <comment id="WICHeifProperties::WICHeifOrientation">
    <summary>[VT_UI2] Indicates the orientation of the image.

The value of this property uses the same numbering scheme as the <a href="https://docs.microsoft.com/windows/desktop/properties/props-system-photo-orientation">System.Photo.Orientation</a> property. For example, a value of 1 (PHOTO_ORIENTATION_NORMAL) indicates a 0 degree rotation.</summary>
  </comment>
  <comment id="ID2D1DeviceContext4::GetSvgGlyphImage">
    <summary>
      <para>Retrieves an image of the SVG glyph from the color glyph cache.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext4-getsvgglyphimage" /></para>
      <param name="glyphOrigin">Origin of the glyph.</param>
      <param name="fontFace">Reference to a font face which contains font face type, appropriate file references, face identification data and various font data such as metrics, names and glyph outlines.</param>
      <param name="fontEmSize">The specified font size affects the output
          glyphTransform, causing it to properly scale the glyph.</param>
      <param name="glyphIndex">Index of the glyph to retrieve.</param>
      <param name="isSideways">If true, specifies that glyphs are rotated 90 degrees to the left and vertical metrics are used. Vertical writing is achieved by specifying isSideways as true and rotating the entire run 90 degrees to the right via a rotate transform.</param>
      <param name="worldTransform">The transform to apply to the image.</param>
      <param name="defaultFillBrush">Describes how the area is painted.</param>
      <param name="svgGlyphStyle">The values for context-fill, context-stroke, and context-value that are used when rendering SVG glyphs.</param>
      <param name="colorPaletteIndex">The index used to select a color palette within a color font. 
          Note that this not the same as the paletteIndex in the DWRITE_COLOR_GLYPH_RUN struct, which is not relevant for SVG glyphs.</param>
      <param name="glyphTransform">Output transform, which transforms from the glyph's space to the same output space as the worldTransform. 
          This includes the input glyphOrigin, the glyph's offset from the glyphOrigin, and any other required transformations.</param>
      <param name="glyphImage">On completion, contains the retrieved glyph image.</param>
    </summary>
  </comment>
  <comment id="ID2D1StrokeStyle1">
    <summary>
      <para>Describes the caps, miter limit, line join, and dash information for a stroke.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1strokestyle1" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::GetDocument">
    <summary>
      <para>Gets the document that contains this element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getdocument" /></para>
      <param name="document">Ouputs the document that contains this element. This argument will be null if the element has been removed from the tree.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout2::GetVerticalGlyphOrientation">
    <summary>
      <para>Get the preferred orientation of glyphs when using a vertical reading direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextlayout2-getverticalglyphorientation" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapFrameDecode::GetMetadataQueryReader">
    <summary>
      <para>Retrieves a metadata query reader for the frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframedecode-getmetadataqueryreader" /></para>
      <param name="iMetadataQueryReader">When this method returns, contains a pointer to the frame's metadata query reader.</param>
    </summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_PROP">
    <summary>
      <para>Identifiers for properties of the Distant-specular lighting effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_distantspecular_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_AZIMUTH">
    <summary>The direction angle of the light source in the XY plane relative to the X-axis in the counter clock wise direction. The units are in degrees and must be between 0 and 360 degrees.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_ELEVATION">
    <summary>The direction angle of the light source in the YZ plane relative to the Y-axis in the counter clock wise direction. The units are in degrees and must be between 0 and 360 degrees.
            

The type is FLOAT.

The default value is 0.0f.</summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_SPECULAR_EXPONENT">
    <summary>The exponent for the specular term in the Phong lighting equation. A larger value corresponds to a more reflective surface. The value is unitless and must be between 1.0 and 128.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_SPECULAR_CONSTANT">
    <summary>The ratio of specular reflection to the incoming light. The value is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_SURFACE_SCALE">
    <summary>The scale factor in the Z direction. The value is unitless and must be between 0 and 10,000.
            

The type is FLOAT.

The default value is 1.0f.</summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_COLOR">
    <summary>The color of the incoming light. This property is exposed as a D2D1_VECTOR_3F – (R, G, B) and used to compute LR, LG, LB.
            

The type is D2D1_VECTOR_3F.

The default value is {1.0f, 1.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_KERNEL_UNIT_LENGTH">
    <summary>The size of an element in the Sobel kernel used to generate the surface normal in the X and Y direction. This property is a D2D1_VECTOR_2F (Kernel Unit Length X, Kernel Unit Length Y) and is defined in (device-independent pixels (DIPs)/Kernel Unit). The effect uses bilinear interpolation to scale the bitmap to match size of kernel elements.
            

The type is D2D1_VECTOR_2F.

The default value is {1.0f, 1.0f}.</summary>
  </comment>
  <comment id="D2D1_DISTANTSPECULAR_PROP::D2D1_DISTANTSPECULAR_PROP_SCALE_MODE">
    <summary>The interpolation mode the effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.
            

The type is D2D1_DISTANTSPECULAR_SCALE_MODE.

The default value is D2D1_DISTANTSPECULAR_SCALE_MODE_LINEAR.</summary>
  </comment>
  <comment id="D2D1_SEPIA_PROP">
    <summary>
      <para>Identifiers for properties of the Sepia effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_sepia_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SEPIA_PROP::D2D1_SEPIA_PROP_INTENSITY">
    <summary>The D2D1_SEPIA_PROP_INTENSITY property is a float value indicating the intesity of the sepia effect. The allowed range is 0.0 to 1.0.  The default value is 0.5.</summary>
  </comment>
  <comment id="D2D1_SEPIA_PROP::D2D1_SEPIA_PROP_ALPHA_MODE">
    <summary>The D2D1_SEPIA_PROP_ALPHA_MODE property is a <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ne-dcommon-d2d1_alpha_mode">D2D1_ALPHA_MODE</a> enumeration value indicating the alpha mode of the input file.
          See the About Alpha Modes section of the <a href="https://docs.microsoft.com/windows/desktop/Direct2D/supported-pixel-formats-and-alpha-modes">Supported Pixel Formats and Alpha Modes</a> topic for additional information..  
          The default value is D2D1_ALPHA_MODE_PREMULTIPLIED.</summary>
  </comment>
  <comment id="ID2D1Factory1::RegisterEffectFromString">
    <summary>
      <para>Registers an effect within the factory instance with the property XML specified as a string.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1factory1-registereffectfromstring" /></para>
      <param name="classId">The identifier of the effect to be registered.</param>
      <param name="propertyXml">A list of the effect properties, types, and metadata.</param>
      <param name="bindings">An array of properties and methods.

This binds a property by name to a particular method implemented by the effect author to handle the property. 
              The name must be found in the corresponding <i>propertyXml</i>.</param>
      <param name="bindingsCount">The number of bindings in the binding array.</param>
      <param name="effectFactory">The static factory that is used to create the corresponding effect.</param>
    </summary>
  </comment>
  <comment id="ID2D1StrokeStyle::GetDashStyle">
    <summary>
      <para>Gets a value that describes the stroke's dash pattern.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getdashstyle" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout2">
    <summary>
      <para>Represents a block of text after it has been fully analyzed and formatted.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nn-dwrite_2-idwritetextlayout2" /></para>
    </summary>
  </comment>
  <comment id="ID2D1BlendTransform::SetDescription">
    <summary>
      <para>Changes the blend description of the corresponding blend transform object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1blendtransform-setdescription" /></para>
      <param name="description">The new blend description specified for the blend transform.</param>
    </summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_SCALE_MODE">
    <summary>
      <para>The interpolation mode the Convolve matrix effect uses to scale the image to the corresponding kernel unit length. There are six scale modes that range in quality and speed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_convolvematrix_scale_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_SCALE_MODE::D2D1_CONVOLVEMATRIX_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that.  This mode uses less processing time, but outputs the lowest quality image.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_SCALE_MODE::D2D1_CONVOLVEMATRIX_SCALE_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode outputs a higher quality image than nearest neighbor mode.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_SCALE_MODE::D2D1_CONVOLVEMATRIX_SCALE_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation.  This mode uses the most processing time, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_SCALE_MODE::D2D1_CONVOLVEMATRIX_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_SCALE_MODE::D2D1_CONVOLVEMATRIX_SCALE_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </comment>
  <comment id="D2D1_CONVOLVEMATRIX_SCALE_MODE::D2D1_CONVOLVEMATRIX_SCALE_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </comment>
  <comment id="IDWriteFont::GetFaceNames">
    <summary>
      <para>Gets a localized strings collection containing the face names for the font (such as Regular or Bold), indexed by locale name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefont-getfacenames" /></para>
      <param name="names">When this method returns, contains an address to a  pointer to the newly created localized strings object.</param>
    </summary>
  </comment>
  <comment id="IDWriteGdiInterop::CreateBitmapRenderTarget">
    <summary>
      <para>Creates an object that encapsulates a bitmap and memory DC (device context) which can be used for rendering glyphs.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritegdiinterop-createbitmaprendertarget" /></para>
      <param name="hdc">A handle to the optional device context used to create a compatible memory DC (device context).</param>
      <param name="width">The width of the bitmap render target.</param>
      <param name="height">The height of the bitmap render target.</param>
      <param name="renderTarget">When this method returns, contains an address of a pointer to the newly created <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritebitmaprendertarget">IDWriteBitmapRenderTarget</a> object.</param>
    </summary>
  </comment>
  <comment id="ID2D1DrawTransform::SetDrawInfo">
    <summary>
      <para>Provides the GPU render info interface to the transform implementation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1drawtransform-setdrawinfo" /></para>
      <param name="drawInfo">The interface supplied back to the calling method to allow it to specify the GPU based transform pass.</param>
    </summary>
  </comment>
  <comment id="D2D1_BRIGHTNESS_PROP">
    <summary>
      <para>Identifiers for the properties of the Brightness effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_brightness_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BRIGHTNESS_PROP::D2D1_BRIGHTNESS_PROP_WHITE_POINT">
    <summary>The upper portion of the brightness transfer curve. The white point adjusts the appearance of the brighter portions of the image. 
          This property is for both the x value and the y value, in that order. Each of the values of this property are between 0 and 1, inclusive.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is (1.0f, 1.0f).</summary>
  </comment>
  <comment id="D2D1_BRIGHTNESS_PROP::D2D1_BRIGHTNESS_PROP_BLACK_POINT">
    <summary>The lower portion of the brightness transfer curve. The black point adjusts the appearance of the darker portions of the image. 
          This property is for both the x value and the y value, in that order. Each of the values of this property are between 0 and 1, inclusive.
          

The type is <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ns-dcommon-d2d_vector_2f">D2D1_VECTOR_2F</a>.

The default value is (0.0f, 0.0f).</summary>
  </comment>
  <comment id="ID2D1BitmapRenderTarget::GetBitmap">
    <summary>
      <para>Retrieves the bitmap for this render target. The returned bitmap can be used for drawing operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmaprendertarget-getbitmap" /></para>
      <param name="bitmap">When this method returns, contains the address of a pointer to the bitmap for this render target. This bitmap can be used for drawing operations.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapFrameEncode::SetResolution">
    <summary>
      <para>Sets the physical resolution of the output image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-setresolution" /></para>
      <param name="dpiX">The horizontal resolution value.</param>
      <param name="dpiY">The vertical resolution value.</param>
    </summary>
  </comment>
  <comment id="ID2D1DrawInfo::SetVertexProcessing">
    <summary>
      <para>Sets a vertex buffer, a corresponding vertex shader, and options to control how the vertices are to be handled by the Direct2D context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1drawinfo-setvertexprocessing" /></para>
      <param name="vertexBuffer">The vertex buffer, if this is cleared, the default vertex shader and mapping to the transform rectangles will be used.</param>
      <param name="vertexOptions">Options that influence how the renderer will interact with the vertex shader.</param>
      <param name="blendDescription">How the vertices will be blended with the output texture.</param>
      <param name="vertexRange">The set of vertices to use from the buffer.</param>
      <param name="vertexShader">The GUID of the vertex shader.</param>
    </summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_ALPHA_MODE">
    <summary>
      <para>Indicates how the Color management effect should interpret alpha data that is contained in the input image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_colormanagement_alpha_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_ALPHA_MODE::D2D1_COLORMANAGEMENT_ALPHA_MODE_PREMULTIPLIED">
    <summary>The effect assumes the alpha mode is premultiplied.</summary>
  </comment>
  <comment id="D2D1_COLORMANAGEMENT_ALPHA_MODE::D2D1_COLORMANAGEMENT_ALPHA_MODE_STRAIGHT">
    <summary>The effect assumes the alpha mode is straight.</summary>
  </comment>
  <comment id="ID2D1SvgElement::ReplaceChild">
    <summary>
      <para>Replaces the oldChild element with the newChild.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-replacechild" /></para>
      <param name="newChild">The element to be inserted.</param>
      <param name="oldChild">The child element to be replaced. The oldChild element must be an immediate child of this element.</param>
    </summary>
  </comment>
  <comment id="D2D1_VIGNETTE_PROP">
    <summary>
      <para>Identifiers for properties of the Vignette effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_vignette_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_VIGNETTE_PROP::D2D1_VIGNETTE_PROP_COLOR">
    <summary>The D2D1_VIGNETTE_PROP_COLOR property is an RGB tripplet that specifies the color to fade the image's edges to. The default color is black.</summary>
  </comment>
  <comment id="D2D1_VIGNETTE_PROP::D2D1_VIGNETTE_PROP_TRANSITION_SIZE">
    <summary>The D2D1_VIGNETTE_PROP_TRANSITION_SIZE property is a float value that specifies the size of the vignette region as a percentage of the full image region.  
          A size of 0 means the unfaded region is the entire image, while a size of 1 means the faded region is the entire source image.
          The allowed range is 0.0 to 1.0.  The default value is 0.1.</summary>
  </comment>
  <comment id="D2D1_VIGNETTE_PROP::D2D1_VIGNETTE_PROP_STRENGTH">
    <summary>The D2D1_VIGNETTE_PROP_STRENGTH property is a float value that specifies how much the vignette color bleeds in for a given transition size. 
          The allowed range is 0.0 to 1.0.  The default value is 0.5.</summary>
  </comment>
  <comment id="IDWriteFontFace::GetGdiCompatibleMetrics">
    <summary>
      <para>Obtains design units and common metrics for the font face. These metrics are applicable to all the glyphs within a fontface and are used by applications for layout calculations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-getgdicompatiblemetrics" /></para>
      <param name="emSize">The logical size of the font in DIP units.</param>
      <param name="pixelsPerDip">The number of physical pixels per DIP.</param>
      <param name="transform">An optional transform applied to the glyphs and their positions. This transform is applied after the scaling specified by the font size and <i>pixelsPerDip</i>.</param>
      <param name="fontFaceMetrics">A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ns-dwrite-dwrite_font_metrics">DWRITE_FONT_METRIC</a>S structure to fill in. The metrics returned by this function are in font design units.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device5">
    <summary>
      <para>Represents a resource domain whose objects and device contexts can be used together. This interface performs all the same functions as the ID2D1Device4 interface. It also enables the creation of ID2D1DeviceContext5 objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1device5" /></para>
    </summary>
  </comment>
  <comment id="IWICPersistStream">
    <summary>
      <para>Exposes methods that provide additional load and save methods that take WICPersistOptions.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicpersiststream" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgPaint::GetId">
    <summary>
      <para>Gets the element id which acts as the paint server. This id is used if the paint type is D2D1_SVG_PAINT_TYPE_URI.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-getid" /></para>
      <param name="id">The element id which acts as the paint server.</param>
      <param name="idCount" />
    </summary>
  </comment>
  <comment id="ID2D1TransformedImageSource::GetProperties">
    <summary>
      <para>Retrieves the properties specified when the transformed image source was created.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1transformedimagesource-getproperties" /></para>
      <param name="properties">the properties specified when the transformed image source was created.</param>
    </summary>
  </comment>
  <comment id="ID2D1StrokeStyle::GetStartCap">
    <summary>
      <para>Retrieves the type of shape used at the beginning of a stroke.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getstartcap" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ResourceTexture::Update">
    <summary>
      <para>Updates the specific resource texture inside the specific range or box using the supplied data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1resourcetexture-update" /></para>
      <param name="minimumExtents">The "left" extent of the updates if specified; if <b>NULL</b>, the entire texture is updated.</param>
      <param name="maximimumExtents">The "right" extent of the updates if specified; if <b>NULL</b>, the entire texture is updated.</param>
      <param name="strides">The stride to advance through the input data, according to dimension.</param>
      <param name="dimensions">The number of dimensions in the resource texture. This must match the number used to load the texture.</param>
      <param name="data">The data to be placed into the resource texture.</param>
      <param name="dataCount">The size of the data buffer to be used to update the resource texture.</param>
    </summary>
  </comment>
  <comment id="IDWriteAsyncResult::GetResult">
    <summary>
      <para>Returns the result of the asynchronous operation. The return value is E_PENDING if the operation has not yet completed.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwriteasyncresult-getresult" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFactory1">
    <summary>
      <para>The root factory interface for all DirectWrite objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nn-dwrite_1-idwritefactory1" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFactory3::CreateFontCollectionFromFontSet">
    <summary>
      <para>Create a weight/width/slope tree from a set of fonts.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefactory3-createfontcollectionfromfontset" /></para>
      <param name="fontSet">A set of fonts to use to build the collection.</param>
      <param name="fontCollection">Holds the newly created font collection object, or NULL in case of failure.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPointCollection::GetPoints">
    <summary>
      <para>Gets points from the points array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpointcollection-getpoints" /></para>
      <param name="points">Buffer to contain the points.</param>
      <param name="pointsCount">The element count of the buffer.</param>
      <param name="startIndex">The index of the first point to retrieve.</param>
    </summary>
  </comment>
  <comment id="ID2D1SimplifiedGeometrySink::SetSegmentFlags">
    <summary>
      <para>Specifies stroke and join options to be applied to new segments added to the geometry sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1simplifiedgeometrysink-setsegmentflags" /></para>
      <param name="vertexFlags">Stroke and join options to be applied to new segments added to the geometry sink.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectImpl::SetGraph">
    <summary>
      <para>The renderer calls this method to provide the effect implementation with a way to specify its transform graph and transform graph changes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectimpl-setgraph" /></para>
      <param name="transformGraph">The graph to which the effect describes its transform topology through the SetDescription call.</param>
    </summary>
  </comment>
  <comment id="D2D1_THREADING_MODE">
    <summary>
      <para>Specifies the threading mode used while simultaneously creating the device, factory, and device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_threading_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_THREADING_MODE::D2D1_THREADING_MODE_SINGLE_THREADED">
    <summary>Resources may only be invoked serially.  Device context state is not protected from multi-threaded access.</summary>
  </comment>
  <comment id="D2D1_THREADING_MODE::D2D1_THREADING_MODE_MULTI_THREADED">
    <summary>Resources may be invoked from multiple threads. Resources use interlocked reference counting and their state is protected.</summary>
  </comment>
  <comment id="IWICMetadataBlockWriter::GetWriterByIndex">
    <summary>
      <para>Retrieves the IWICMetadataWriter that resides at the specified index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockwriter-getwriterbyindex" /></para>
      <param name="nIndex">The index of the metadata writer to be retrieved. This index is zero-based.</param>
      <param name="iMetadataWriter">When this method returns, contains a pointer to the metadata writer that resides at the specified index.</param>
    </summary>
  </comment>
  <comment id="IDWriteFont2">
    <summary>
      <para>Represents a physical font in a font collection.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nn-dwrite_2-idwritefont2" /></para>
    </summary>
  </comment>
  <comment id="D2D1_STRAIGHTEN_SCALE_MODE">
    <summary>
      <para>Values for the D2D1_STRAIGHTEN_PROP_SCALE_MODE property of the Straighten effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_straighten_scale_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_STRAIGHTEN_SCALE_MODE::D2D1_STRAIGHTEN_SCALE_MODE_NEAREST_NEIGHBOR">
    <summary>Indicates nearest neighbor interpolation should be used.</summary>
  </comment>
  <comment id="D2D1_STRAIGHTEN_SCALE_MODE::D2D1_STRAIGHTEN_SCALE_MODE_LINEAR">
    <summary>Indicates linear interpolation should be used.</summary>
  </comment>
  <comment id="D2D1_STRAIGHTEN_SCALE_MODE::D2D1_STRAIGHTEN_SCALE_MODE_CUBIC">
    <summary>Indicates cubic interpolation should be used.</summary>
  </comment>
  <comment id="D2D1_STRAIGHTEN_SCALE_MODE::D2D1_STRAIGHTEN_SCALE_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Indicates multi-sample linear interpolation should be used.</summary>
  </comment>
  <comment id="D2D1_STRAIGHTEN_SCALE_MODE::D2D1_STRAIGHTEN_SCALE_MODE_ANISOTROPIC">
    <summary>Indicates anisotropic filtering should be used.</summary>
  </comment>
  <comment id="D2D1_IMAGE_SOURCE_LOADING_OPTIONS">
    <summary>
      <para>Controls option flags for a new ID2D1ImageSource when it is created.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_image_source_loading_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_IMAGE_SOURCE_LOADING_OPTIONS::D2D1_IMAGE_SOURCE_LOADING_OPTIONS_NONE">
    <summary>No options are used.</summary>
  </comment>
  <comment id="D2D1_IMAGE_SOURCE_LOADING_OPTIONS::D2D1_IMAGE_SOURCE_LOADING_OPTIONS_RELEASE_SOURCE">
    <summary>Indicates the image source should release its reference to the WIC bitmap source after it has initialized. 
        By default, the image source retains a reference to the WIC bitmap source for the lifetime of the object to enable quality and speed optimizations for printing. 
        This option disables that optimization.</summary>
  </comment>
  <comment id="D2D1_IMAGE_SOURCE_LOADING_OPTIONS::D2D1_IMAGE_SOURCE_LOADING_OPTIONS_CACHE_ON_DEMAND">
    <summary>Indicates the image source should only populate subregions of the image cache on-demand. You can control this behavior using 
        the <a href="https://docs.microsoft.com/windows/win32/api/d2d1_3/nf-d2d1_3-id2d1imagesourcefromwic-ensurecached(constd2d1_rect_u)">EnsureCached</a> 
          and <a href="https://docs.microsoft.com/windows/win32/api/d2d1_3/nf-d2d1_3-id2d1imagesourcefromwic-trimcache(constd2d1_rect_u)">TrimCache</a> methods. 
        This options provides the ability to improve memory usage by only keeping needed portions of the image in memory. 
        This option requires that the image source has a reference to the WIC bitmap source, and is incompatible with D2D1_IMAGE_SOURCE_LOADING_OPTIONS_RELEASE_SOURCE.</summary>
  </comment>
  <comment id="IWICBitmapFrameEncode::WritePixels">
    <summary>
      <para>Copies scan-line data from a caller-supplied buffer to the IWICBitmapFrameEncode object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-writepixels" /></para>
      <param name="lineCount">The number of lines to encode.</param>
      <param name="cbStride">The <a href="https://docs.microsoft.com/">stride</a> of the image pixels.</param>
      <param name="cbBufferSize">The size of the pixel buffer.</param>
      <param name="pbPixels">A pointer to the pixel buffer.</param>
    </summary>
  </comment>
  <comment id="IDWriteRemoteFontFileLoader::CreateRemoteStreamFromKey">
    <summary>
      <para>Creates a remote font file stream object that encapsulates an open file resource and can be used to download remote file data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwriteremotefontfileloader-createremotestreamfromkey" /></para>
      <param name="fontFileReferenceKey">Font file reference key that uniquely identifies the font file resource within the scope of the font loader being used.</param>
      <param name="fontFileReferenceKeySize">Size of font file reference key in bytes.</param>
      <param name="fontFileStream">Pointer to the newly created font file stream.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory::RegisterFontCollectionLoader">
    <summary>
      <para>Registers a custom font collection loader with the factory object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-registerfontcollectionloader" /></para>
      <param name="fontCollectionLoader">Pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefontcollectionloader">IDWriteFontCollectionLoader</a> object to be registered.</param>
    </summary>
  </comment>
  <comment id="D2D1_DPICOMPENSATION_INTERPOLATION_MODE">
    <summary>
      <para>The interpolation mode the DPI compensation effect uses to scale the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_dpicompensation_interpolation_mode" /></para>
    </summary>
  </comment>
  <comment id="D2D1_DPICOMPENSATION_INTERPOLATION_MODE::D2D1_DPICOMPENSATION_INTERPOLATION_MODE_NEAREST_NEIGHBOR">
    <summary>Samples the nearest single point and uses that. This mode uses less processing time, but outputs the lowest quality image.</summary>
  </comment>
  <comment id="D2D1_DPICOMPENSATION_INTERPOLATION_MODE::D2D1_DPICOMPENSATION_INTERPOLATION_MODE_LINEAR">
    <summary>Uses a four point sample and linear interpolation. This mode uses more processing time than the nearest neighbor mode, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_DPICOMPENSATION_INTERPOLATION_MODE::D2D1_DPICOMPENSATION_INTERPOLATION_MODE_CUBIC">
    <summary>Uses a 16 sample cubic kernel for interpolation. This mode uses the most processing time, but outputs a higher quality image.</summary>
  </comment>
  <comment id="D2D1_DPICOMPENSATION_INTERPOLATION_MODE::D2D1_DPICOMPENSATION_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR">
    <summary>Uses 4 linear samples within a single pixel for good edge anti-aliasing. This mode is good for scaling down by small amounts on images with few pixels.</summary>
  </comment>
  <comment id="D2D1_DPICOMPENSATION_INTERPOLATION_MODE::D2D1_DPICOMPENSATION_INTERPOLATION_MODE_ANISOTROPIC">
    <summary>Uses anisotropic filtering to sample a pattern according to the transformed shape of the bitmap.</summary>
  </comment>
  <comment id="D2D1_DPICOMPENSATION_INTERPOLATION_MODE::D2D1_DPICOMPENSATION_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC">
    <summary>Uses a variable size high quality cubic kernel to perform a pre-downscale the image if downscaling is involved in the transform matrix. Then uses the cubic interpolation mode for the final output.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_BINDING">
    <summary>
      <para>Defines a property binding to a pair of functions which get and set the corresponding property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_property_binding" /></para>
    </summary>
  </comment>
  <comment id="D2D1_PROPERTY_BINDING::propertyName">
    <summary>The name of the property.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_BINDING::setFunction">
    <summary>The function that will receive the data to set.</summary>
  </comment>
  <comment id="D2D1_PROPERTY_BINDING::getFunction">
    <summary>The function that will be asked to write the output data.</summary>
  </comment>
  <comment id="IDWriteFont::GetMetrics">
    <summary>
      <para>Obtains design units and common metrics for the font face. These metrics are applicable to all the glyphs within a font face and are used by applications for layout calculations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefont-getmetrics" /></para>
      <param name="fontMetrics">When this method returns, contains a structure that has font metrics for the current font face. The metrics returned by this function are in font design units.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory::GetGdiInterop">
    <summary>
      <para>Creates an object that is used for interoperability with GDI.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-getgdiinterop" /></para>
      <param name="gdiInterop">When this method returns, contains an address of a pointer to a GDI interop object if successful, or <b>NULL</b> in case of failure.</param>
    </summary>
  </comment>
  <comment id="D2D1_GEOMETRY_RELATION">
    <summary>
      <para>Describes how one geometry object is spatially related to another geometry object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ne-d2d1-d2d1_geometry_relation" /></para>
    </summary>
  </comment>
  <comment id="D2D1_GEOMETRY_RELATION::D2D1_GEOMETRY_RELATION_UNKNOWN">
    <summary>The relationship between the two geometries cannot be determined. This value is never returned by any D2D method.</summary>
  </comment>
  <comment id="D2D1_GEOMETRY_RELATION::D2D1_GEOMETRY_RELATION_DISJOINT">
    <summary>The two geometries  do not intersect at all.</summary>
  </comment>
  <comment id="D2D1_GEOMETRY_RELATION::D2D1_GEOMETRY_RELATION_IS_CONTAINED">
    <summary>The instance geometry is entirely contained by  the passed-in geometry.</summary>
  </comment>
  <comment id="D2D1_GEOMETRY_RELATION::D2D1_GEOMETRY_RELATION_CONTAINS">
    <summary>The instance geometry entirely contains the passed-in geometry.</summary>
  </comment>
  <comment id="D2D1_GEOMETRY_RELATION::D2D1_GEOMETRY_RELATION_OVERLAP">
    <summary>The two geometries overlap but neither completely contains the other.</summary>
  </comment>
  <comment id="IDWriteTextLayout::SetMaxHeight">
    <summary>
      <para>Sets the layout maximum height.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-setmaxheight" /></para>
      <param name="maxHeight">A value that indicates the maximum height of the layout box.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::PopLayer">
    <summary>
      <para>Removes a layer from the layer and clip stack.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-poplayer" /></para>
    </summary>
  </comment>
  <comment id="IWICEnumMetadataItem::Clone">
    <summary>
      <para>Creates a copy of the current IWICEnumMetadataItem.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicenummetadataitem-clone" /></para>
      <param name="iEnumMetadataItem">A pointer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicenummetadataitem">IWICEnumMetadataItem</a> copy.</param>
    </summary>
  </comment>
  <comment id="IWICImagingFactory::CreateFastMetadataEncoderFromDecoder">
    <summary>
      <para>Creates a new instance of the fast metadata encoder based on the given IWICBitmapDecoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicimagingfactory-createfastmetadataencoderfromdecoder" /></para>
      <param name="iDecoder">The decoder to create the fast metadata encoder from.</param>
      <param name="iFastEncoder">When this method returns, contains a pointer to the new <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwicfastmetadataencoder">IWICFastMetadataEncoder</a>.</param>
    </summary>
  </comment>
  <comment id="D2D1_YCBCR_CHROMA_SUBSAMPLING">
    <summary>
      <para>Specifies the chroma subsampling of the input chroma image used by the YCbCr effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_1/ne-d2d1effects_1-d2d1_ycbcr_chroma_subsampling" /></para>
    </summary>
  </comment>
  <comment id="D2D1_YCBCR_CHROMA_SUBSAMPLING::D2D1_YCBCR_CHROMA_SUBSAMPLING_AUTO">
    <summary>This mode attempts to infer the chroma subsampling from the bounds of the input images. When this option is selected, 
          the smaller plane is upsampled to the size of the larger plane and this effect’s output rectangle is the intersection of the two planes. 
          When using this mode, care should be taken when applying effects to the input planes that change the image bounds, such as the border transform, 
          so that the desired size ratio between the planes is maintained.</summary>
  </comment>
  <comment id="D2D1_YCBCR_CHROMA_SUBSAMPLING::D2D1_YCBCR_CHROMA_SUBSAMPLING_420">
    <summary>The chroma plane is horizontally subsampled by 1/2 and vertically subsampled by 1/2. 
          When this option is selected, the chroma plane is horizontally and vertically upsampled by 2x and this effect's output rectangle is the intersection of the two planes.</summary>
  </comment>
  <comment id="D2D1_YCBCR_CHROMA_SUBSAMPLING::D2D1_YCBCR_CHROMA_SUBSAMPLING_422">
    <summary>The chroma plane is horizontally subsampled by 1/2. When this option is selected, 
          the chroma plane is horizontally upsampled by 2x and this effect's output rectangle is the intersection of the two planes.</summary>
  </comment>
  <comment id="D2D1_YCBCR_CHROMA_SUBSAMPLING::D2D1_YCBCR_CHROMA_SUBSAMPLING_444">
    <summary>The chroma plane is not subsampled. When this option is selected this effect’s output rectangle is the intersection of the two planes.</summary>
  </comment>
  <comment id="D2D1_YCBCR_CHROMA_SUBSAMPLING::D2D1_YCBCR_CHROMA_SUBSAMPLING_440">
    <summary>The chroma plane is vertically subsampled by 1/2. When this option is selected, the chroma plane is vertically upsampled by 2x and this effect's 
          output rectangle is the intersection of the two planes.</summary>
  </comment>
  <comment id="ID2D1DeviceContext::CreateCommandList">
    <summary>
      <para>Creates a ID2D1CommandList object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1devicecontext-createcommandlist" /></para>
      <param name="commandList">When this method returns, contains the address of a pointer to a command list.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataReaderInfo::MatchesPattern">
    <summary>
      <para>Determines if a stream contains a metadata item pattern.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatareaderinfo-matchespattern" /></para>
      <param name="guidContainerFormat">The container format of the metadata item.</param>
      <param name="iStream">The stream to search for the metadata pattern.</param>
      <param name="pfMatches">Pointer that receives <b>TRUE</b> if the stream contains the pattern; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="ID2D1Ink::GetSegments">
    <summary>
      <para>Retrieves the specified subset of segments stored in this ink object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1ink-getsegments" /></para>
      <param name="startSegment">The index of the first segment in this ink object to retrieve.</param>
      <param name="segments">When this method returns, contains a pointer to an array of retrieved segments.</param>
      <param name="segmentsCount">The number of segments to retrieve. Note that segmentsCount must be less than or equal to the number of segments in the ink object minus startSegment.</param>
    </summary>
  </comment>
  <comment id="IWICBitmap::Lock">
    <summary>
      <para>Provides access to a rectangular area of the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmap-lock" /></para>
      <param name="prcLock">The rectangle to be accessed.</param>
      <param name="flags">The access mode you wish to obtain for the lock. This is a bitwise combination of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/ne-wincodec-wicbitmaplockflags">WICBitmapLockFlags</a> for read, write, or read and write access.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id="WICBitmapLockRead"></a><a id="wicbitmaplockread"></a><a id="WICBITMAPLOCKREAD"></a><dl>
<dt><b>WICBitmapLockRead</b></dt>
</dl>
</td>
<td width="60%">
The read access lock.

</td>
</tr>
<tr>
<td width="40%"><a id="WICBitmapLockWrite"></a><a id="wicbitmaplockwrite"></a><a id="WICBITMAPLOCKWRITE"></a><dl>
<dt><b>WICBitmapLockWrite</b></dt>
</dl>
</td>
<td width="60%">
The write access lock.

</td>
</tr>
</table></param>
      <param name="iLock">A pointer that receives the locked memory location.</param>
    </summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_ORIENTATION">
    <summary>
      <para>Speficies whether a flip and/or rotation operation should be performed by the Bitmap source effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_bitmapsource_orientation" /></para>
    </summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_DEFAULT">
    <summary>The effect doesn't change the orientation of the input.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_FLIP_HORIZONTAL">
    <summary>Flips the image horizontally.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE180">
    <summary>Rotates the image clockwise 180 degrees.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE180_FLIP_HORIZONTAL">
    <summary>Rotates the image clockwise 180 degrees and flips it horizontally.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE270_FLIP_HORIZONTAL">
    <summary>Rotates the image clockwise 270 degrees and flips it horizontally.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE90">
    <summary>Rotates the image clockwise 90 degrees.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE90_FLIP_HORIZONTAL">
    <summary>Rotates the image clockwise 90 degrees and flips it horizontally.</summary>
  </comment>
  <comment id="D2D1_BITMAPSOURCE_ORIENTATION::D2D1_BITMAPSOURCE_ORIENTATION_ROTATE_CLOCKWISE270">
    <summary>Rotates the image clockwise 270 degrees.</summary>
  </comment>
  <comment id="IDWriteTextFormat::SetLineSpacing">
    <summary>
      <para>Sets the line spacing.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-setlinespacing" /></para>
      <param name="lineSpacingMethod">Specifies how line height is being determined; see <a href="https://docs.microsoft.com/windows/win32/api/dwrite/ne-dwrite-dwrite_line_spacing_method">DWRITE_LINE_SPACING_METHOD</a> for more information.</param>
      <param name="lineSpacing">The line height, or distance between one baseline to another.</param>
      <param name="baseline">The distance from top of line to baseline. A reasonable ratio to <i>lineSpacing</i> is 80 percent.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace1::GetVerticalGlyphVariants">
    <summary>
      <para>Retrieves the vertical forms of the nominal glyphs retrieved from GetGlyphIndices.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefontface1-getverticalglyphvariants" /></para>
      <param name="glyphCount">The number of glyphs to retrieve.</param>
      <param name="nominalGlyphIndices">Original glyph indices from cmap.</param>
      <param name="verticalGlyphIndices">The vertical form of glyph indices.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::DrawLine">
    <summary>
      <para>Draws a line drawn between two points.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-drawline" /></para>
      <param name="point0">The start point of the line.</param>
      <param name="point1">The end point of the line.</param>
      <param name="brush">The brush used to fill the line.</param>
      <param name="strokeWidth">The width of the stroke to fill the line.</param>
      <param name="strokeStyle">The style of the stroke. If not specified, the stroke is solid.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderInfo">
    <summary>
      <para>Describes the render information common to all of the various transform implementations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1renderinfo" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::GetFontStretch">
    <summary>
      <para>Gets the font stretch of the text.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getfontstretch" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Effect::SetInputEffect">
    <summary>
      <para>Sets the given input effect by index.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1effect-setinputeffect" /></para>
      <param name="index">The index of the input to set.</param>
      <param name="inputEffect">The input effect to set.</param>
      <param name="invalidate">Whether to invalidate the graph at the location of the effect input</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::SetExposureCompensation">
    <summary>
      <para>Sets the exposure compensation stop value.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-setexposurecompensation" /></para>
      <param name="ev">The exposure compensation value. The value range for exposure compensation is -5.0 through +5.0, which equates to 10 full stops.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::GetTransform">
    <summary>
      <para>Gets the current transform of the render target.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-gettransform" /></para>
      <param name="transform">When this returns, contains the current transform of the render target. This parameter is passed uninitialized.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::Draw">
    <summary>
      <para>Draws text using the specified client drawing context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-draw" /></para>
      <param name="clientDrawingContext">An application-defined drawing context.</param>
      <param name="renderer">Pointer to the set of callback functions used to draw parts of a text string.</param>
      <param name="originX">The x-coordinate of the layout's left side.</param>
      <param name="originY">The y-coordinate of the layout's top side.</param>
    </summary>
  </comment>
  <comment id="IDWriteLocalizedStrings::GetString">
    <summary>
      <para>Copies the string with the specified index to the specified array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritelocalizedstrings-getstring" /></para>
      <param name="index">The zero-based index of the language/string pair to be examined.</param>
      <param name="stringBuffer">The null terminated array of characters that receives the string from the language/string pair.  The buffer allocated for this array should be at least the size of <i>size</i>. <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritelocalizedstrings-getstringlength">GetStringLength</a> can be used to get the size of the array before using this method.</param>
      <param name="size">The size of the array in characters. The size must include space for the terminating
     null character. <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritelocalizedstrings-getstringlength">GetStringLength</a> can be used to get the size of the array before using this method.</param>
    </summary>
  </comment>
  <comment id="D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS">
    <summary>
      <para>Option flags controlling primary conversion performed by CreateImageSourceFromDxgi, if any.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_image_source_from_dxgi_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS::D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS_NONE">
    <summary>No primary conversion is performed.</summary>
  </comment>
  <comment id="D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS::D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS_LOW_QUALITY_PRIMARY_CONVERSION">
    <summary>Low quality primary conversion is performed.</summary>
  </comment>
  <comment id="IWICPalette::GetColors">
    <summary>
      <para>Fills out the supplied color array with the colors from the internal color table. The color array should be sized according to the return results from GetColorCount.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-getcolors" /></para>
      <param name="cCount">The size of the <i>pColors</i> array.</param>
      <param name="colors">Pointer that receives the colors of the palette.</param>
      <param name="pcActualColors">The actual size needed to obtain the palette colors.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory::CreateGdiCompatibleTextLayout">
    <summary>
      <para>Takes a string, format, and associated constraints, and produces an object representing the result, formatted for a particular display resolution and measuring mode.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-creategdicompatibletextlayout" /></para>
      <param name="string">An array of characters that contains the string to create a new <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritetextlayout">IDWriteTextLayout</a> object from. This array must be of length <i>stringLength</i> and can contain embedded <b>NULL</b> characters.</param>
      <param name="stringLength">The length of the string, in character count.</param>
      <param name="textFormat">The text formatting object to apply to the string.</param>
      <param name="layoutWidth">The width of the layout box.</param>
      <param name="layoutHeight">The height of the layout box.</param>
      <param name="pixelsPerDip">The number of physical pixels per DIP (device independent pixel). For example, if rendering onto a 96 DPI device <i>pixelsPerDip</i>is 1. If rendering onto a 120 DPI device <i>pixelsPerDip</i> is 1.25 (120/96).</param>
      <param name="transform">An optional transform applied to the glyphs and their positions. This transform is applied after the
     scaling specifies the font size and pixels per DIP.</param>
      <param name="useGdiNatural"> Instructs the text layout to use the same metrics as GDI bi-level text when set to <b>FALSE</b>.
     When set to <b>TRUE</b>, instructs the text layout to use the same metrics as text measured by GDI using a font
     created with <b>CLEARTYPE_NATURAL_QUALITY</b>.</param>
      <param name="textLayout">When this method returns, contains an address to the pointer of the resultant text layout object.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapFrameEncode::Commit">
    <summary>
      <para>Commits the frame to the image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-commit" /></para>
    </summary>
  </comment>
  <comment id="ID2D1StrokeStyle1::GetStrokeTransformType">
    <summary>
      <para>Gets the stroke transform type.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1strokestyle1-getstroketransformtype" /></para>
    </summary>
  </comment>
  <comment id="ID2D1DCRenderTarget">
    <summary>
      <para>Issues drawing commands to a GDI device context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1dcrendertarget" /></para>
    </summary>
  </comment>
  <comment id="IWICJpegFrameEncode::GetDcHuffmanTable">
    <summary>
      <para>Retrieves a copy of the DC Huffman table for the specified scan and table.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicjpegframeencode-getdchuffmantable" /></para>
      <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
      <param name="tableIndex">The index of the DC Huffman table to retrieve.</param>
      <param name="dcHuffmanTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    </summary>
  </comment>
  <comment id="ID2D1Multithread::Leave">
    <summary>
      <para>Leaves the Direct2D API critical section, if it exists.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1multithread-leave" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Multithread">
    <summary>
      <para>A locking mechanism from a Direct2D factory that Direct2D uses to control exclusive resource access in an app that is uses multiple threads.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1multithread" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapSource::GetSize">
    <summary>
      <para>Retrieves the pixel width and height of the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapsource-getsize" /></para>
      <param name="puiWidth">A pointer that receives the pixel width of the bitmap.</param>
      <param name="puiHeight">A pointer that receives the pixel height of the bitmap</param>
    </summary>
  </comment>
  <comment id="IDWriteLocalizedStrings">
    <summary>
      <para>Represents a collection of strings indexed by locale name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritelocalizedstrings" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Bitmap::GetDpi">
    <summary>
      <para>Return the dots per inch (DPI) of the bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1bitmap-getdpi" /></para>
      <param name="dpiX">The horizontal DPI of the image. You must allocate storage for this parameter.</param>
      <param name="dpiY">The vertical DPI of the image.  You must allocate storage for this parameter.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontCollectionLoader">
    <summary>
      <para>Used to construct a collection of fonts given a particular type of key.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritefontcollectionloader" /></para>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::GetNoiseReduction">
    <summary>
      <para>Gets the noise reduction value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getnoisereduction" /></para>
      <param name="noiseReduction">A pointer that receives the noise reduction value of the raw image.  The default value is the "as-shot" setting if it exists or 0.0. The value range for noise reduction is 0.0 through 1.0. The 0.0 lower limit represents no noise reduction applied to the image, while the 1.0 upper limit represents full highest noise reduction amount that can be applied.</param>
    </summary>
  </comment>
  <comment id="IDWriteFont1::GetUnicodeRanges">
    <summary>
      <para>Retrieves the list of character ranges supported by a font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefont1-getunicoderanges" /></para>
      <param name="maxRangeCount">The maximum number of character ranges passed
    in from the client.</param>
      <param name="unicodeRanges">An array of <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ns-dwrite_1-dwrite_unicode_range">DWRITE_UNICODE_RANGE</a> structures that are filled with the character ranges.</param>
      <param name="actualRangeCount">A pointer to the actual number of character ranges,
    regardless of the maximum count.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataBlockReader::GetReaderByIndex">
    <summary>
      <para>Retrieves an IWICMetadataReader for a specified top level metadata block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatablockreader-getreaderbyindex" /></para>
      <param name="nIndex">The index of the desired top level metadata block to retrieve.</param>
      <param name="iMetadataReader">When this method returns, contains a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/nn-wincodecsdk-iwicmetadatareader">IWICMetadataReader</a> specified by <i>nIndex</i>.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapDecoderInfo::MatchesPattern">
    <summary>
      <para>Retrieves a value that indicates whether the codec recognizes the pattern within a specified stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapdecoderinfo-matchespattern" /></para>
      <param name="iStream">The stream to pattern match within.</param>
      <param name="pfMatches">A pointer that receives <b>TRUE</b> if the patterns match; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="D2D1_CHANNEL_SELECTOR">
    <summary>
      <para>Specifies the color channel the Displacement map effectextracts the intensity from and uses it to spatially displace the image in the X or Y direction.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_channel_selector" /></para>
    </summary>
  </comment>
  <comment id="D2D1_CHANNEL_SELECTOR::D2D1_CHANNEL_SELECTOR_R">
    <summary>The effect extracts the intensity output from the red channel.</summary>
  </comment>
  <comment id="D2D1_CHANNEL_SELECTOR::D2D1_CHANNEL_SELECTOR_G">
    <summary>The effect extracts the intensity output from the green channel.</summary>
  </comment>
  <comment id="D2D1_CHANNEL_SELECTOR::D2D1_CHANNEL_SELECTOR_B">
    <summary>The effect extracts the intensity output from the blue channel.</summary>
  </comment>
  <comment id="D2D1_CHANNEL_SELECTOR::D2D1_CHANNEL_SELECTOR_A">
    <summary>The effect extracts the intensity output from the alpha channel.</summary>
  </comment>
  <comment id="ID2D1Bitmap1::GetSurface">
    <summary>
      <para>Gets either the surface that was specified when the bitmap was created, or the default surface created when the bitmap was created.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1bitmap1-getsurface" /></para>
      <param name="dxgiSurface">The underlying DXGI surface for the bitmap.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory3::CreateFontSetBuilder">
    <summary>
      <para>Creates an empty font set builder to add font face references and create a custom font set.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefactory3-createfontsetbuilder" /></para>
      <param name="fontSetBuilder">Holds the newly created font set builder object, or NULL in case of failure.</param>
    </summary>
  </comment>
  <comment id="ID2D1InkStyle::GetNibShape">
    <summary>
      <para>Retrieves the pre-transform nib shape for this style.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1inkstyle-getnibshape" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ColorContext">
    <summary>
      <para>Represents a color context that can be used with an ID2D1Bitmap1 object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nn-d2d1_1-id2d1colorcontext" /></para>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::SetTags">
    <summary>
      <para>Sets the tags that correspond to the tags in the command sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-settags" /></para>
      <param name="tag1">The first tag to associate with the primitive.</param>
      <param name="tag2">The second tag to associate with the primitive.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace::ReleaseFontTable">
    <summary>
      <para>Releases the table obtained earlier from TryGetFontTable.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontface-releasefonttable" /></para>
      <param name="tableContext">A pointer to the opaque context from <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritefontface-trygetfonttable">TryGetFontTable</a>.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapFrameEncode::SetColorContexts">
    <summary>
      <para>Sets a given number IWICColorContext profiles to the frame.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapframeencode-setcolorcontexts" /></para>
      <param name="cCount">The number of <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> profiles to set.</param>
      <param name="iColorContext">A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/wincodec/nn-wincodec-iwiccolorcontext">IWICColorContext</a> pointer containing the color contexts profiles to set to the frame.</param>
    </summary>
  </comment>
  <comment id="WICPngItxtProperties">
    <summary>
      <para>Specifies the Portable Network Graphics (PNG) iTXT chunk metadata properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicpngitxtproperties" /></para>
    </summary>
  </comment>
  <comment id="WICPngItxtProperties::WICPngItxtKeyword">
    <summary>[VT_LPSTR] Indicates the keywords in the iTXT metadata chunk.</summary>
  </comment>
  <comment id="WICPngItxtProperties::WICPngItxtCompressionFlag">
    <summary>[VT_UI1] Indicates whether the text in the iTXT chunk is compressed. 1 if the text is compressed; otherwise, 0.</summary>
  </comment>
  <comment id="WICPngItxtProperties::WICPngItxtLanguageTag">
    <summary>[VT_LPSTR] Indicates the human language used by the translated keyword and the text.</summary>
  </comment>
  <comment id="WICPngItxtProperties::WICPngItxtTranslatedKeyword">
    <summary>[VT_LPWSTR] Indicates a translation of the keyword into the language indicated by the language tag.</summary>
  </comment>
  <comment id="WICPngItxtProperties::WICPngItxtText">
    <summary>[VT_LPWSTR] Indicates additional text in the iTXT metadata chunk.</summary>
  </comment>
  <comment id="D2D1_ROUNDED_RECT">
    <summary>
      <para>Contains the dimensions and corner radii of a rounded rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_rounded_rect" /></para>
    </summary>
  </comment>
  <comment id="D2D1_ROUNDED_RECT::rect">
    <summary>The coordinates of the rectangle.</summary>
  </comment>
  <comment id="D2D1_ROUNDED_RECT::radiusX">
    <summary>The x-radius for the quarter ellipse that is drawn to replace every corner of the rectangle.</summary>
  </comment>
  <comment id="D2D1_ROUNDED_RECT::radiusY">
    <summary>The y-radius for the quarter ellipse that is drawn to replace every corner of the rectangle.</summary>
  </comment>
  <comment id="IDWriteLocalizedStrings::GetLocaleName">
    <summary>
      <para>Copies the locale name with the specified index to the specified array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritelocalizedstrings-getlocalename" /></para>
      <param name="index">Zero-based index of the locale name to be retrieved.</param>
      <param name="localeName">When this method returns, contains a character array, which is null-terminated, that receives the locale name from the language/string pair.  The buffer allocated for this array must be at least the size of <i>size</i>, in element count.</param>
      <param name="size">The size of the array in characters. The size must include space for the terminating
     null character.</param>
    </summary>
  </comment>
  <comment id="D2D1_SHADOW_OPTIMIZATION">
    <summary>
      <para>The level of performance optimization for the Shadow effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_shadow_optimization" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SHADOW_OPTIMIZATION::D2D1_SHADOW_OPTIMIZATION_SPEED">
    <summary>Applies internal optimizations such as pre-scaling at relatively small radii. Uses linear filtering.</summary>
  </comment>
  <comment id="D2D1_SHADOW_OPTIMIZATION::D2D1_SHADOW_OPTIMIZATION_BALANCED">
    <summary>Uses the same optimization thresholds as Speed mode, but uses trilinear filtering.</summary>
  </comment>
  <comment id="D2D1_SHADOW_OPTIMIZATION::D2D1_SHADOW_OPTIMIZATION_QUALITY">
    <summary>Only uses internal optimizations with large blur radii, where approximations are less likely to be visible. Uses trilinear filtering.</summary>
  </comment>
  <comment id="D2D1_VERTEX_USAGE">
    <summary>
      <para>Indicates whether the vertex buffer changes infrequently or frequently.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ne-d2d1effectauthor-d2d1_vertex_usage" /></para>
    </summary>
  </comment>
  <comment id="D2D1_VERTEX_USAGE::D2D1_VERTEX_USAGE_STATIC">
    <summary>The created vertex buffer is updated infrequently.</summary>
  </comment>
  <comment id="D2D1_VERTEX_USAGE::D2D1_VERTEX_USAGE_DYNAMIC">
    <summary>The created vertex buffer is changed frequently.</summary>
  </comment>
  <comment id="ID2D1SvgElement::GetSpecifiedAttributeCount">
    <summary>
      <para>Returns the number of specified attributes on this element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-getspecifiedattributecount" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::InsertChildBefore">
    <summary>
      <para>Inserts newChild as a child of this element, before the referenceChild element.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-insertchildbefore" /></para>
      <param name="newChild">The element to be inserted.</param>
      <param name="referenceChild">The element that the child should be inserted before.
            If referenceChild is null, the newChild is placed as the last child.
            If referenceChild is non-null, it must be an immediate child of this element.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::SetUnderline">
    <summary>
      <para>Sets underlining for text within a specified text range.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-setunderline" /></para>
      <param name="hasUnderline">A Boolean flag that indicates whether underline takes place within a specified text range.</param>
      <param name="textRange">Text range to which this change applies.</param>
    </summary>
  </comment>
  <comment id="IDWriteBitmapRenderTarget::GetSize">
    <summary>
      <para>Gets the dimensions of the target bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritebitmaprendertarget-getsize" /></para>
      <param name="size">Returns  the width and height of the bitmap in pixels.</param>
    </summary>
  </comment>
  <comment id="IWICPixelFormatInfo::GetChannelMask">
    <summary>
      <para>Gets the pixel format's channel mask.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpixelformatinfo-getchannelmask" /></para>
      <param name="uiChannelIndex">The index to the channel mask to retrieve.</param>
      <param name="cbMaskBuffer">The size of the <i>pbMaskBuffer</i> buffer.</param>
      <param name="pbMaskBuffer">Pointer to the mask buffer.</param>
      <param name="pcbActual">The actual buffer size needed to obtain the channel mask.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout1::GetCharacterSpacing">
    <summary>
      <para>Gets the spacing between characters.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritetextlayout1-getcharacterspacing" /></para>
      <param name="currentPosition">The current text position.</param>
      <param name="leadingSpacing">The spacing before each character, in reading order.</param>
      <param name="trailingSpacing">The spacing after each character, in reading order.</param>
      <param name="minimumAdvanceWidth">The minimum advance of each character, to prevent characters from becoming too thin or zero-width. This must be zero or greater.</param>
      <param name="textRange">The position range of the current format.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgDocument::GetViewportSize">
    <summary>
      <para>Returns the size of the initial viewport.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-getviewportsize" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace3::GetFontFaceReference">
    <summary>
      <para>Gets a font face reference that identifies this font.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface3-getfontfacereference" /></para>
      <param name="fontFaceReference">A pointer to a memory block that receives a pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_3/nn-dwrite_3-idwritefontfacereference">IDWriteFontFaceReference</a> interface for the newly created font face reference object.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgElement::RemoveChild">
    <summary>
      <para>Removes the oldChild from the tree. Children of oldChild remain children of oldChild.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-removechild" /></para>
      <param name="oldChild">The child element to be removed. The oldChild element must be an immediate child of this element.</param>
    </summary>
  </comment>
  <comment id="IWICPixelFormatInfo::GetChannelCount">
    <summary>
      <para>Gets the number of channels the pixel format contains.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpixelformatinfo-getchannelcount" /></para>
      <param name="puiChannelCount">Pointer that receives the channel count.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextRenderer">
    <summary>
      <para>Represents a set of application-defined callbacks that perform rendering of text, inline objects, and decorations such as underlines.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritetextrenderer" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace2::GetPaletteEntries">
    <summary>
      <para>Gets color values from the font's color palette.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefontface2-getpaletteentries" /></para>
      <param name="colorPaletteIndex">Zero-based index of the color palette. If the font does not have a palette with the specified index, the method returns <b>DWRITE_E_NOCOLOR</b>.</param>
      <param name="firstEntryIndex">Zero-based index of the first palette entry to read.</param>
      <param name="entryCount">Number of palette entries to read.</param>
      <param name="paletteEntries">Array that receives the color values.</param>
    </summary>
  </comment>
  <comment id="D2D1_3DTRANSFORM_PROP">
    <summary>
      <para>Identifiers for properties of the 3D transform effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects/ne-d2d1effects-d2d1_3dtransform_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_3DTRANSFORM_PROP::D2D1_3DTRANSFORM_PROP_INTERPOLATION_MODE">
    <summary>The interpolation mode the effect uses on the image. There are 5 scale modes that range in quality and speed.
            

Type is D2D1_3DTRANSFORM_INTERPOLATION_MODE.

Default value is D2D1_3DTRANSFORM_INTERPOLATION_MODE_LINEAR.</summary>
  </comment>
  <comment id="D2D1_3DTRANSFORM_PROP::D2D1_3DTRANSFORM_PROP_BORDER_MODE">
    <summary>The mode used to calculate the border of the image, soft or hard. See Border modes for more info.
            

Type is D2D1_BORDER_MODE.

Default value is D2D1_BORDER_MODE_SOFT.</summary>
  </comment>
  <comment id="D2D1_3DTRANSFORM_PROP::D2D1_3DTRANSFORM_PROP_TRANSFORM_MATRIX">
    <summary>A 4x4 transform matrix applied to the projection plane. The following matrix calculation is used to map points from one 3D coordinate system
              to the transformed 2D coordinate system.
            

<img alt="3D Depth Matrix" src="./images/3d_transform_matrix1.png"/>
Where:<dl>
<dd>X, Y, Z = Input projection plane coordinates</dd>
<dd>M<sub>x,y</sub> = Transform Matrix elements
                </dd>
<dd>X’, Y’, Z’ =Output projection plane coordinates</dd>
</dl>


The individual matrix elements are not bounded and are unitless. 

Type is D2D1_MATRIX_4X4_F.

Default value is Matrix4x4F(1, 0, 0, 0,
              0, 1, 0, 0,
              0, 0, 1, 0,
              0, 0, 0, 1).</summary>
  </comment>
  <comment id="IWICFastMetadataEncoder::GetMetadataQueryWriter">
    <summary>
      <para>Retrieves a metadata query writer for fast metadata encoding.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicfastmetadataencoder-getmetadataquerywriter" /></para>
      <param name="iMetadataQueryWriter">When this method returns, contains a pointer to the fast metadata encoder's metadata query writer.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat1::SetLastLineWrapping">
    <summary>
      <para>Sets the wrapping mode of the last line.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritetextformat1-setlastlinewrapping" /></para>
      <param name="isLastLineWrappingEnabled">If set to FALSE, the last line is not wrapped. If set to TRUE, the last line is wrapped.

The last line is wrapped by default.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink::DrawGlyphRun">
    <summary>
      <para>Indicates the glyphs to be drawn.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-drawglyphrun" /></para>
      <param name="baselineOrigin">The upper left corner of the baseline.</param>
      <param name="glyphRun">The glyphs to render.</param>
      <param name="glyphRunDescription">Additional non-rendering information about the glyphs.</param>
      <param name="foregroundBrush">The brush used to fill the glyphs.</param>
      <param name="measuringMode">The measuring mode to apply to the glyphs.</param>
    </summary>
  </comment>
  <comment id="D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS">
    <summary>
      <para>Option flags for transformed image sources.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/ne-d2d1_3-d2d1_transformed_image_source_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS::D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS_NONE">
    <summary>No option flags.</summary>
  </comment>
  <comment id="D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS::D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS_DISABLE_DPI_SCALE">
    <summary>Prevents the image source from being automatically scaled (by a ratio of the context DPI divided by 96) while drawn.</summary>
  </comment>
  <comment id="IWICStreamProvider::GetPersistOptions">
    <summary>
      <para>Gets the persist options used when initializing the component with a stream.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicstreamprovider-getpersistoptions" /></para>
      <param name="pdwPersistOptions">Pointer that receives the persist options used when initializing the component with a stream. If none were provided, <b>WICPersistOptionDefault</b> is returned.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFallbackBuilder::AddMapping">
    <summary>
      <para>Appends a single mapping to the list. Call this once for each additional mapping.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nf-dwrite_2-idwritefontfallbackbuilder-addmapping" /></para>
      <param name="ranges">Unicode ranges that apply to this mapping.</param>
      <param name="rangesCount">Number of Unicode ranges.</param>
      <param name="targetFamilyNames">List of target family name strings.</param>
      <param name="targetFamilyNamesCount">Number of target family names.</param>
      <param name="fontCollection">Optional explicit font collection for this mapping.</param>
      <param name="localeName">Locale of the context.</param>
      <param name="baseFamilyName">Base family name to match against, if applicable.</param>
      <param name="scale">Scale factor to multiply the result target font by.</param>
    </summary>
  </comment>
  <comment id="IDWriteGdiInterop::CreateFontFromLOGFONT">
    <summary>
      <para>Creates a font object that matches the properties specified by the LOGFONT structure.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritegdiinterop-createfontfromlogfont" /></para>
      <param name="logFont">A structure containing a GDI-compatible font description.</param>
      <param name="font">When this method returns, contains an address of a  pointer to a newly created <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nn-dwrite-idwritefont">IDWriteFont</a>  object if successful; otherwise, <b>NULL</b>.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalysisSource">
    <summary>
      <para>Implemented by the text analyzer's client to provide text to the analyzer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritetextanalysissource" /></para>
    </summary>
  </comment>
  <comment id="WICProgressNotification">
    <summary>
      <para>Specifies when the progress notification callback should be called.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicprogressnotification" /></para>
    </summary>
  </comment>
  <comment id="WICProgressNotification::WICProgressNotificationBegin">
    <summary>The callback should be called when codec operations begin.</summary>
  </comment>
  <comment id="WICProgressNotification::WICProgressNotificationEnd">
    <summary>The callback should be called when codec operations end.</summary>
  </comment>
  <comment id="WICProgressNotification::WICProgressNotificationFrequent">
    <summary>The callback should be called frequently to report status.</summary>
  </comment>
  <comment id="WICProgressNotification::WICProgressNotificationAll">
    <summary>The callback should be called on all available progress notifications.</summary>
  </comment>
  <comment id="ID2D1ComputeTransform">
    <summary>
      <para>Defines a transform that uses a compute shader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1computetransform" /></para>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::CreateEffect">
    <summary>
      <para>Creates a Direct2D effect for the specified class ID.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createeffect" /></para>
      <param name="effectId">The built-in or registered effect ID to create the effect. See <a href="https://docs.microsoft.com/windows/desktop/Direct2D/built-in-effects">Built-in Effects</a> for a list of effect IDs.</param>
      <param name="effect">When this method returns, contains the address of a pointer to the effect.</param>
    </summary>
  </comment>
  <comment id="WICMetadataPattern">
    <summary>
      <para>Represents a metadata pattern.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/ns-wincodecsdk-wicmetadatapattern" /></para>
    </summary>
  </comment>
  <comment id="WICMetadataPattern::Position">
    <summary>The position of the pattern.</summary>
  </comment>
  <comment id="WICMetadataPattern::Length">
    <summary>The length of the pattern.</summary>
  </comment>
  <comment id="WICMetadataPattern::Pattern">
    <summary>Pointer to the pattern.</summary>
  </comment>
  <comment id="WICMetadataPattern::Mask">
    <summary>Pointer to the pattern mask.</summary>
  </comment>
  <comment id="WICMetadataPattern::DataOffset">
    <summary>The offset location of the pattern.</summary>
  </comment>
  <comment id="IWICPalette::HasAlpha">
    <summary>
      <para>Indicates whether the palette contains an entry that is non-opaque (that is, an entry with an alpha that is less than 1).</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicpalette-hasalpha" /></para>
      <param name="pfHasAlpha">Pointer that receives <b>TRUE</b> if the palette contains a transparent color; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPathData::CreatePathGeometry">
    <summary>
      <para>Creates a path geometry object representing the path data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpathdata-createpathgeometry" /></para>
      <param name="fillMode">Fill mode for the path geometry object.</param>
      <param name="pathGeometry">On completion, pathGeometry will contain a point to the created <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_1/nn-d2d1_1-id2d1pathgeometry1">ID2D1PathGeometry1</a> object.</param>
    </summary>
  </comment>
  <comment id="WICDdsDimension">
    <summary>
      <para>Specifies the dimension type of the data contained in DDS image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicddsdimension" /></para>
    </summary>
  </comment>
  <comment id="WICDdsDimension::WICDdsTexture1D">
    <summary>DDS image contains a 1-dimensional texture .</summary>
  </comment>
  <comment id="WICDdsDimension::WICDdsTexture2D">
    <summary>DDS image contains a 2-dimensional texture .</summary>
  </comment>
  <comment id="WICDdsDimension::WICDdsTexture3D">
    <summary>DDS image contains a 3-dimensional texture .</summary>
  </comment>
  <comment id="WICDdsDimension::WICDdsTextureCube">
    <summary>The DDS image contains a cube texture represented as an array of 6 faces.</summary>
  </comment>
  <comment id="IDWriteFontCollection1">
    <summary>
      <para>An object that encapsulates a set of fonts, such as the set of fonts installed on the system, or the set of fonts in a particular directory.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontcollection1" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmap::SetPalette">
    <summary>
      <para>Provides access for palette modifications.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmap-setpalette" /></para>
      <param name="iPalette">The palette to use for conversion.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::GetLocaleName">
    <summary>
      <para>Gets a copy of the locale name.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-getlocalename" /></para>
      <param name="localeName">Contains a character array that receives the current locale name.</param>
      <param name="nameSize">The size of the character array, in character count, including the terminated <b>NULL</b> character. Use <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritetextformat-getlocalenamelength">GetLocaleNameLength</a> to get the size of the locale name character array.</param>
    </summary>
  </comment>
  <comment id="ID2D1Brush">
    <summary>
      <para>Defines an object that paints an area. Interfaces that derive from ID2D1Brush describe how the area is painted.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1brush" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalyzer::AnalyzeLineBreakpoints">
    <summary>
      <para>Analyzes a text range for potential breakpoint opportunities, reading attributes from the source and reporting breakpoint opportunities to the sink callback SetLineBreakpoints.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalyzer-analyzelinebreakpoints" /></para>
      <param name="analysisSource">A pointer to the source object to analyze.</param>
      <param name="textPosition">The starting text position within the source object.</param>
      <param name="textLength">The text length to analyze.</param>
      <param name="analysisSink">A pointer to the  sink callback object that receives the text analysis.</param>
    </summary>
  </comment>
  <comment id="IWICColorContext::GetExifColorSpace">
    <summary>
      <para>Retrieves the Exchangeable Image File (EXIF) color space color context.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwiccolorcontext-getexifcolorspace" /></para>
      <param name="value">A pointer that receives the EXIF color space color context.

<table>
<tr>
<th>Value</th>
<th>Meaning</th>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>1</dt>
</dl>
</td>
<td width="60%">
A sRGB color space.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>2</dt>
</dl>
</td>
<td width="60%">
An Adobe RGB color space.

</td>
</tr>
<tr>
<td width="40%"><a id=""></a><dl>
<dt><b></b></dt>
<dt>3 through 65534</dt>
</dl>
</td>
<td width="60%">
Unused.

</td>
</tr>
</table></param>
    </summary>
  </comment>
  <comment id="ID2D1RadialGradientBrush::SetCenter">
    <summary>
      <para>Specifies the center of the gradient ellipse in the brush's coordinate space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1radialgradientbrush-setcenter" /></para>
      <param name="center">The center of the gradient ellipse, in the brush's coordinate space.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapLock::GetSize">
    <summary>
      <para>Retrieves the width and height, in pixels, of the locked rectangle.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmaplock-getsize" /></para>
      <param name="puiWidth">A pointer that receives the width of the locked rectangle.</param>
      <param name="puiHeight">A pointer that receives the height of the locked rectangle.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataWriterInfo::GetHeader">
    <summary>
      <para>Gets the metadata header for the metadata writer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nf-wincodecsdk-iwicmetadatawriterinfo-getheader" /></para>
      <param name="guidContainerFormat">The format container GUID to obtain the header for.</param>
      <param name="cbSize">The size of the <i>pHeader</i> buffer.</param>
      <param name="header">Pointer that receives the <a href="https://docs.microsoft.com/windows/desktop/api/wincodecsdk/ns-wincodecsdk-wicmetadataheader">WICMetadataHeader</a>.</param>
      <param name="pcbActual">The actual size of the header.</param>
    </summary>
  </comment>
  <comment id="D2D1_FACTORY_OPTIONS">
    <summary>
      <para>Contains the debugging level of an ID2D1Factory object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/ns-d2d1-d2d1_factory_options" /></para>
    </summary>
  </comment>
  <comment id="D2D1_FACTORY_OPTIONS::debugLevel">
    <summary>The debugging level of the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nn-d2d1-id2d1factory">ID2D1Factory</a> object.</summary>
  </comment>
  <comment id="ID2D1EffectContext::CheckFeatureSupport">
    <summary>
      <para>This indicates whether an optional capability is supported by the D3D device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-checkfeaturesupport" /></para>
      <param name="feature">The feature to query support for.</param>
      <param name="featureSupportData">A structure indicating information about how or if the feature is supported.</param>
      <param name="featureSupportDataSize">The size of the <i>featureSupportData</i> parameter.</param>
    </summary>
  </comment>
  <comment id="D2D1_FEATURE_DATA_DOUBLES">
    <summary>
      <para>Describes the support for doubles in shaders.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/ns-d2d1effectauthor-d2d1_feature_data_doubles" /></para>
    </summary>
  </comment>
  <comment id="D2D1_FEATURE_DATA_DOUBLES::doublePrecisionFloatShaderOps">
    <summary>TRUE is doubles are supported within the shaders.</summary>
  </comment>
  <comment id="ID2D1SvgElement::IsTextContent">
    <summary>
      <para>Returns a boolean indicating wether this element represents text content.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgelement-istextcontent" /></para>
    </summary>
  </comment>
  <comment id="DWriteEngine2Events">
    <summary>
      <para>Implement this interface to receive notifications of the current write operation.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//imapi2/nn-imapi2-dwriteengine2events" /></para>
    </summary>
  </comment>
  <comment id="IWICBitmapEncoder::GetMetadataQueryWriter">
    <summary>
      <para>Retrieves a metadata query writer for the encoder.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapencoder-getmetadataquerywriter" /></para>
      <param name="iMetadataQueryWriter">When this method returns, contains a pointer to the encoder's metadata query writer.</param>
    </summary>
  </comment>
  <comment id="ID2D1Properties::GetPropertyCount">
    <summary>
      <para>Gets the number of top-level properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1properties-getpropertycount" /></para>
    </summary>
  </comment>
  <comment id="ID2D1LinearGradientBrush::SetStartPoint">
    <summary>
      <para>Sets the starting coordinates of the linear gradient in the brush's coordinate space.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1lineargradientbrush-setstartpoint" /></para>
      <param name="startPoint">The starting two-dimensional coordinates of the linear gradient, in the brush's coordinate space.</param>
    </summary>
  </comment>
  <comment id="IWICBitmapCodecInfo::DoesSupportLossless">
    <summary>
      <para>Retrieves a value indicating whether the codec supports lossless formats.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicbitmapcodecinfo-doessupportlossless" /></para>
      <param name="pfSupportLossless">Receives <b>TRUE</b> if the codec supports lossless formats; otherwise, <b>FALSE</b>.</param>
    </summary>
  </comment>
  <comment id="ID2D1Ink">
    <summary>
      <para>Represents a single continuous stroke of variable-width ink, as defined by a series of Bezier segments and widths.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1ink" /></para>
    </summary>
  </comment>
  <comment id="ID2D1Bitmap">
    <summary>
      <para>Represents a bitmap that has been bound to an ID2D1RenderTarget.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nn-d2d1-id2d1bitmap" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFactory1::GetEudcFontCollection">
    <summary>
      <para>Gets a font collection representing the set of EUDC (end-user defined characters) fonts.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefactory1-geteudcfontcollection" /></para>
      <param name="fontCollection">The font collection to fill.</param>
      <param name="checkForUpdates">Whether to check for updates.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::CreateVertexBuffer">
    <summary>
      <para>Creates a vertex buffer or finds a standard vertex buffer and optionally initializes it with vertices.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-createvertexbuffer" /></para>
      <param name="vertexBufferProperties">The properties used to describe the vertex buffer and vertex shader.</param>
      <param name="resourceId">The unique id that identifies the vertex buffer.</param>
      <param name="customVertexBufferProperties">The properties used to define a custom vertex buffer. If you use a built-in vertex shader, you don't have to specify this property.</param>
      <param name="buffer">The returned vertex buffer.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectContext::GetMaximumSupportedFeatureLevel">
    <summary>
      <para>This indicates the maximum feature level from the provided list which is supported by the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectcontext-getmaximumsupportedfeaturelevel" /></para>
      <param name="featureLevels">The feature levels provided by the application.</param>
      <param name="featureLevelsCount">The count of feature levels provided by the application</param>
      <param name="maximumSupportedFeatureLevel">The maximum feature level from the <i>featureLevels</i> list which is supported by the D2D device.</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgDocument::Serialize">
    <summary>
      <para>Serializes an element and its subtree to XML. The output XML is encoded as UTF-8.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgdocument-serialize" /></para>
      <param name="outputXmlStream">An output stream to contain the SVG XML subtree.</param>
      <param name="subtree">The root of the subtree. If null, the entire document is serialized.</param>
    </summary>
  </comment>
  <comment id="IWICMetadataWriter">
    <summary>
      <para>Exposes methods that provide access to writing metadata content. This is implemented by independent software vendors (ISVs) to create new metadata writers.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodecsdk/nn-wincodecsdk-iwicmetadatawriter" /></para>
    </summary>
  </comment>
  <comment id="ID2D1StrokeStyle::GetDashes">
    <summary>
      <para>Copies the dash pattern to the specified array.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1strokestyle-getdashes" /></para>
      <param name="dashes">A pointer to an array that will receive the dash pattern. The array must be able to contain at least as many elements as specified by <i>dashesCount</i>. You must allocate storage for this array.</param>
      <param name="dashesCount">The number of dashes to copy. If this value is less than the number of dashes in the stroke style's dashes array, the returned dashes are truncated to <i>dashesCount</i>. If this value is greater than the number of dashes in the stroke style's dashes array, the extra dashes are set to 0.0f. To obtain the actual number of dashes in the stroke style's dashes array, use the <a href="https://docs.microsoft.com/windows/win32/api/d2d1/nf-d2d1-id2d1strokestyle-getdashescount">GetDashesCount</a> method.</param>
    </summary>
  </comment>
  <comment id="ID2D1CommandSink4">
    <summary>
      <para>This interface performs all the same functions as the existing ID2D1CommandSink3 interface. It also enables access to the new primitive blend mode, MAX, through the SetPrimitiveBlend2 method.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1commandsink4" /></para>
    </summary>
  </comment>
  <comment id="ID2D1SolidColorBrush::GetColor">
    <summary>
      <para>Retrieves the color of the solid color brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1solidcolorbrush-getcolor" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ComputeInfo::SetComputeShaderConstantBuffer">
    <summary>
      <para>Establishes or changes the constant buffer data for this transform.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1computeinfo-setcomputeshaderconstantbuffer" /></para>
      <param name="buffer">The data applied to the constant buffer.</param>
      <param name="bufferCount">The number of bytes of data in the constant buffer.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextFormat::GetTextAlignment">
    <summary>
      <para>Gets the alignment option of text relative to the layout box's leading and trailing edge.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextformat-gettextalignment" /></para>
    </summary>
  </comment>
  <comment id="ID2D1BoundsAdjustmentTransform">
    <summary>
      <para>A support transform for effects to modify the output rectangle of the previous effect or bitmap.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1boundsadjustmenttransform" /></para>
    </summary>
  </comment>
  <comment id="IDWriteTextAnalysisSink::SetNumberSubstitution">
    <summary>
      <para>Sets the number substitution on the text range affected by the text analysis.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextanalysissink-setnumbersubstitution" /></para>
      <param name="textPosition">The starting position from which to report.</param>
      <param name="textLength">The number of UTF16 units of the reported range.</param>
      <param name="numberSubstitution">An object that holds the appropriate digits and numeric punctuation for a given locale. Use <a href="https://docs.microsoft.com/windows/win32/api/dwrite/nf-dwrite-idwritefactory-createnumbersubstitution">IDWriteFactory::CreateNumberSubstitution</a> to create this object.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontDownloadQueue::CancelDownload">
    <summary>
      <para>Removes all download requests from the queue and cancels any active download operations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontdownloadqueue-canceldownload" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace3">
    <summary>
      <para>Contains font face type, appropriate file references, and face identification data.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nn-dwrite_3-idwritefontface3" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontCollection::GetFontFromFontFace">
    <summary>
      <para>Gets the font object that corresponds to the same physical font as the specified font face object. The specified physical font must belong to the font collection.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontcollection-getfontfromfontface" /></para>
      <param name="fontFace">A font face object that specifies the physical font.</param>
      <param name="font">When this method returns, contains the address of a pointer to the newly created font object if successful; otherwise, <b>NULL</b>.</param>
    </summary>
  </comment>
  <comment id="ID2D1RenderTarget::GetPixelSize">
    <summary>
      <para>Returns the size of the render target in device pixels.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1/nf-d2d1-id2d1rendertarget-getpixelsize" /></para>
    </summary>
  </comment>
  <comment id="WICWebpAnimProperties">
    <summary>
      <para>Specifies the animation properties of a WebP image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wicwebpanimproperties" /></para>
    </summary>
  </comment>
  <comment id="WICWebpAnimProperties::WICWebpAnimLoopCount">
    <summary>The number of times the animation loops. A value of 0 indicates that the animation will loop infinitely.</summary>
  </comment>
  <comment id="ID2D1CommandSink::FillMesh">
    <summary>
      <para>Indicates a mesh to be filled by the command sink.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/nf-d2d1_1-id2d1commandsink-fillmesh" /></para>
      <param name="mesh">The mesh object to be filled.</param>
      <param name="brush">The brush with which to fill the mesh.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout::GetOverhangMetrics">
    <summary>
      <para>Returns the overhangs (in DIPs) of the layout and all objects contained in it, including text glyphs and inline objects.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-getoverhangmetrics" /></para>
      <param name="overhangs">Overshoots of visible extents (in DIPs) outside the layout.</param>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext1::CreateStrokedGeometryRealization">
    <summary>
      <para>Creates a device-dependent representation of the stroke of a geometry that can be subsequently rendered.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1devicecontext1-createstrokedgeometryrealization" /></para>
      <param name="geometry">The geometry to realize.</param>
      <param name="flatteningTolerance">The flattening tolerance to use when converting Beziers to line segments. This parameter shares the same units as the coordinates of the geometry.</param>
      <param name="strokeWidth">The width of the stroke. This parameter shares the same units as the coordinates of the geometry.</param>
      <param name="strokeStyle">The stroke style (optional).</param>
      <param name="geometryRealization">When this method returns, contains the address of a pointer to a new geometry realization object.</param>
    </summary>
  </comment>
  <comment id="ID2D1Device1::GetRenderingPriority">
    <summary>
      <para>Retrieves the current rendering priority of the device.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1device1-getrenderingpriority" /></para>
    </summary>
  </comment>
  <comment id="IWICProgressCallback::Notify">
    <summary>
      <para>Notify method is documented only for compliance; its use is not recommended and may be altered or unavailable in the future. Instead, and use RegisterProgressNotification.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicprogresscallback-notify" /></para>
      <param name="frameNum">The current frame number.</param>
      <param name="operation">The operation on which progress is being reported.</param>
      <param name="dblProgress">The progress value ranging from is 0.0 to 1.0. 0.0 indicates the beginning of the operation. 1.0 indicates the end of the operation.</param>
    </summary>
  </comment>
  <comment id="D2D1_SUBPROPERTY">
    <summary>
      <para>Specifies the indices of the system sub-properties that may be present in any property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_subproperty" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SUBPROPERTY::D2D1_SUBPROPERTY_DISPLAYNAME">
    <summary>The name for the parent property.</summary>
  </comment>
  <comment id="D2D1_SUBPROPERTY::D2D1_SUBPROPERTY_ISREADONLY">
    <summary>A Boolean indicating whether the parent property is writeable.</summary>
  </comment>
  <comment id="D2D1_SUBPROPERTY::D2D1_SUBPROPERTY_MIN">
    <summary>The minimum value that can be set to the parent property.</summary>
  </comment>
  <comment id="D2D1_SUBPROPERTY::D2D1_SUBPROPERTY_MAX">
    <summary>The maximum value that can be set to the parent property.</summary>
  </comment>
  <comment id="D2D1_SUBPROPERTY::D2D1_SUBPROPERTY_DEFAULT">
    <summary>The default value of the parent property.</summary>
  </comment>
  <comment id="D2D1_SUBPROPERTY::D2D1_SUBPROPERTY_FIELDS">
    <summary>An array of name/index pairs that indicate the possible values that can be set to the parent property.</summary>
  </comment>
  <comment id="D2D1_SUBPROPERTY::D2D1_SUBPROPERTY_INDEX">
    <summary>An index sub-property used by the elements of the <b>D2D1_SUBPROPERTY_FIELDS</b> array.</summary>
  </comment>
  <comment id="IDWriteTextLayout::SetFontSize">
    <summary>
      <para>Sets the font size in DIP units for text within a specified text range.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritetextlayout-setfontsize" /></para>
      <param name="fontSize">The  font size in DIP units to be set for   text in the range specified by <i>textRange</i>.</param>
      <param name="textRange">Text range to which this change applies.</param>
    </summary>
  </comment>
  <comment id="IDWriteTextLayout3::InvalidateLayout">
    <summary>
      <para>Invalidates the layout, forcing layout to remeasure before calling the metrics or drawing functions. This is useful if the locality of a font changes, and layout should be redrawn, or if the size of a client implemented IDWriteInlineObject changes.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritetextlayout3-invalidatelayout" /></para>
    </summary>
  </comment>
  <comment id="ID2D1ImageSource::OfferResources">
    <summary>
      <para>Allows the operating system to free the video memory of resources by discarding their content.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1imagesource-offerresources" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFactory::CreateCustomRenderingParams">
    <summary>
      <para>Creates a rendering parameters object with the specified properties.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-createcustomrenderingparams" /></para>
      <param name="gamma">The gamma level to be set for the new rendering parameters object.</param>
      <param name="enhancedContrast">The enhanced contrast level to be set for the new rendering parameters object.</param>
      <param name="clearTypeLevel">The ClearType level to be set for the new rendering parameters object.</param>
      <param name="pixelGeometry">Represents the internal structure of a device pixel (that is, the physical arrangement of red, green, and blue color components) that is assumed for purposes of rendering text.</param>
      <param name="renderingMode">A value that represents the method (for example, ClearType natural quality) for rendering glyphs.</param>
      <param name="renderingParams">When this method returns, contains an address of a pointer to the newly created rendering parameters object.</param>
    </summary>
  </comment>
  <comment id="ID2D1ImageSourceFromWic">
    <summary>
      <para>Produces 2D pixel data that has been sourced from WIC.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nn-d2d1_3-id2d1imagesourcefromwic" /></para>
    </summary>
  </comment>
  <comment id="D2D1_LAYER_OPTIONS1">
    <summary>
      <para>Specifies how the layer contents should be prepared.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_1/ne-d2d1_1-d2d1_layer_options1" /></para>
    </summary>
  </comment>
  <comment id="D2D1_LAYER_OPTIONS1::D2D1_LAYER_OPTIONS1_NONE">
    <summary>Default layer behavior. A premultiplied layer target is pushed and its contents are cleared to transparent black.</summary>
  </comment>
  <comment id="D2D1_LAYER_OPTIONS1::D2D1_LAYER_OPTIONS1_INITIALIZE_FROM_BACKGROUND">
    <summary>The layer is not cleared to transparent black.</summary>
  </comment>
  <comment id="D2D1_LAYER_OPTIONS1::D2D1_LAYER_OPTIONS1_IGNORE_ALPHA">
    <summary>The layer is always created as ignore alpha. All content rendered into the layer will be treated as opaque.</summary>
  </comment>
  <comment id="IDWriteTextRenderer1">
    <summary>
      <para>Represents a set of application-defined callbacks that perform rendering of text, inline objects, and decorations such as underlines.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_2/nn-dwrite_2-idwritetextrenderer1" /></para>
    </summary>
  </comment>
  <comment id="ID2D1DeviceContext1::DrawGeometryRealization">
    <summary>
      <para>Renders a given geometry realization to the target with the specified brush.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_2/nf-d2d1_2-id2d1devicecontext1-drawgeometryrealization" /></para>
      <param name="geometryRealization">The geometry realization to be rendered.</param>
      <param name="brush">The brush to render the realization with.</param>
    </summary>
  </comment>
  <comment id="IDWriteFactory::CreateMonitorRenderingParams">
    <summary>
      <para>Creates a rendering parameters object with default settings for the specified monitor. In most cases, this is the preferred way to create a rendering parameters object.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefactory-createmonitorrenderingparams" /></para>
      <param name="monitor">A handle for the specified monitor.</param>
      <param name="renderingParams">When this method returns, contains an address of a pointer to the rendering parameters object created by this method.</param>
    </summary>
  </comment>
  <comment id="ID2D1VertexBuffer">
    <summary>
      <para>Defines a mappable single-dimensional vertex buffer.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nn-d2d1effectauthor-id2d1vertexbuffer" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_OVERFLOW">
    <summary>
      <para>Specifies a value for the SVG overflow property.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/ne-d2d1svg-d2d1_svg_overflow" /></para>
    </summary>
  </comment>
  <comment id="D2D1_SVG_OVERFLOW::D2D1_SVG_OVERFLOW_VISIBLE">
    <summary>The element is not clipped to its viewport.</summary>
  </comment>
  <comment id="D2D1_SVG_OVERFLOW::D2D1_SVG_OVERFLOW_HIDDEN">
    <summary>The element is clipped to its viewport.</summary>
  </comment>
  <comment id="WIC8BIMResolutionInfoProperties">
    <summary>
      <para>Specifies the identifiers of the metadata items in an 8BIMResolutionInfo block.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/ne-wincodec-wic8bimresolutioninfoproperties" /></para>
    </summary>
  </comment>
  <comment id="WIC8BIMResolutionInfoProperties::WIC8BIMResolutionInfoPString">
    <summary>[VT_LPSTR] A name that identifies the 8BIM block.</summary>
  </comment>
  <comment id="WIC8BIMResolutionInfoProperties::WIC8BIMResolutionInfoHResolution">
    <summary>[VT_UI4] The horizontal resolution of the image.</summary>
  </comment>
  <comment id="WIC8BIMResolutionInfoProperties::WIC8BIMResolutionInfoHResolutionUnit">
    <summary>[VT_UI2] The units that the horizontal resolution is specified in; a 1 indicates pixels per inch and a 2 indicates pixels per centimeter.</summary>
  </comment>
  <comment id="WIC8BIMResolutionInfoProperties::WIC8BIMResolutionInfoWidthUnit">
    <summary>[VT_UI2] The units that the image width is specified in; a 1 indicates inches, a 2 indicates centimeters, a 3 indicates points, a 4 specifies picas, and a 5 specifies columns.</summary>
  </comment>
  <comment id="WIC8BIMResolutionInfoProperties::WIC8BIMResolutionInfoVResolution">
    <summary>[VT_UI4] The vertical resolution of the image.</summary>
  </comment>
  <comment id="WIC8BIMResolutionInfoProperties::WIC8BIMResolutionInfoVResolutionUnit">
    <summary>[VT_UI2] The units that the vertical resolution is specified in; a 1 indicates pixels per inch and a 2 indicates pixels per centimeter.</summary>
  </comment>
  <comment id="WIC8BIMResolutionInfoProperties::WIC8BIMResolutionInfoHeightUnit">
    <summary>[VT_UI2] The units that the image height is specified in; a 1 indicates inches, a 2 indicates centimeters, a 3 indicates points, a 4 specifies picas, and a 5 specifies columns.</summary>
  </comment>
  <comment id="D2D1_WHITELEVELADJUSTMENT_PROP">
    <summary>
      <para>Defines constants that identify the top level properties of the White Level Adjustment effect.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effects_2/ne-d2d1effects_2-d2d1_whiteleveladjustment_prop" /></para>
    </summary>
  </comment>
  <comment id="D2D1_WHITELEVELADJUSTMENT_PROP::D2D1_WHITELEVELADJUSTMENT_PROP_INPUT_WHITE_LEVEL">
    <summary>Identifies the `InputWhiteLevel` property of the effect. The property is of type FLOAT, and is specified in nits.</summary>
  </comment>
  <comment id="D2D1_WHITELEVELADJUSTMENT_PROP::D2D1_WHITELEVELADJUSTMENT_PROP_OUTPUT_WHITE_LEVEL">
    <summary>Identifies the `OutputWhiteLevel` property of the effect. The property is of type FLOAT, and is specified in nits.</summary>
  </comment>
  <comment id="ID2D1DeviceContext5::DrawSvgDocument">
    <summary>
      <para>Draws an SVG document.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1_3/nf-d2d1_3-id2d1devicecontext5-drawsvgdocument" /></para>
      <param name="svgDocument">The SVG document to draw.</param>
    </summary>
  </comment>
  <comment id="IWICDevelopRaw::GetExposureCompensation">
    <summary>
      <para>Gets the exposure compensation stop value of the raw image.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//wincodec/nf-wincodec-iwicdevelopraw-getexposurecompensation" /></para>
      <param name="eV">A pointer that receives the exposure compensation stop value. The default is the "as-shot" setting.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFileStream::GetLastWriteTime">
    <summary>
      <para>Obtains the last modified time of the file.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nf-dwrite-idwritefontfilestream-getlastwritetime" /></para>
      <param name="lastWriteTime">When this method returns, contains  the last modified time of the file in the format that represents
     the number of 100-nanosecond intervals since January 1, 1601 (UTC).</param>
    </summary>
  </comment>
  <comment id="ID2D1SvgPaint::SetId">
    <summary>
      <para>Sets the element id which acts as the paint server. This id is used if the paint type is D2D1_SVG_PAINT_TYPE_URI.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1svg/nf-d2d1svg-id2d1svgpaint-setid" /></para>
      <param name="id">The element id which acts as the paint server. This id is used if the paint type is D2D1_SVG_PAINT_TYPE_URI.</param>
    </summary>
  </comment>
  <comment id="ID2D1EffectImpl::Initialize">
    <summary>
      <para>The effect can use this method to do one time initialization tasks.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//d2d1effectauthor/nf-d2d1effectauthor-id2d1effectimpl-initialize" /></para>
      <param name="effectContext">An internal context interface that creates and returns effect author–centric types.</param>
      <param name="transformGraph">The effect can
    populate the transform graph with a topology and can update it later.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFileStream">
    <summary>
      <para>Loads font file data from a custom font file loader.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite/nn-dwrite-idwritefontfilestream" /></para>
    </summary>
  </comment>
  <comment id="IDWriteFontFace1::GetGdiCompatibleMetrics">
    <summary>
      <para>Obtains design units and common metrics for the font face. These metrics are applicable to all the glyphs within a fontface and are used by applications for layout calculations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_1/nf-dwrite_1-idwritefontface1-getgdicompatiblemetrics" /></para>
      <param name="emSize">The logical size of the font in DIP units.</param>
      <param name="pixelsPerDip">The number of physical pixels per DIP.</param>
      <param name="transform">An optional transform applied to the glyphs and their positions. This transform is applied after the scaling specified by the font size and <i>pixelsPerDip</i>.</param>
      <param name="fontMetrics">A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/dwrite_1/ns-dwrite_1-dwrite_font_metrics1">DWRITE_FONT_METRICS1</a> structure to fill in. The metrics returned by this function are in font design units.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontSet::FindFontFaceReference">
    <summary>
      <para>Gets the index of the matching font face reference in the font set, with the same file, face index, and simulations.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontset-findfontfacereference" /></para>
      <param name="fontFaceReference">Font face object that specifies the physical font.</param>
      <param name="listIndex">Receives the zero-based index of the matching font if the font was found, or UINT_MAX otherwise.</param>
      <param name="exists">Receives TRUE if the font exists or FALSE otherwise.</param>
    </summary>
  </comment>
  <comment id="IDWriteFontFace3::HasCharacter">
    <summary>
      <para>Determines whether the font supports the specified character.</para>
      <para>Microsoft Docs: <see href="https://docs.microsoft.com/windows/win32/api//dwrite_3/nf-dwrite_3-idwritefontface3-hascharacter" /></para>
      <param name="unicodeValue">A Unicode (UCS-4) character value.</param>
    </summary>
  </comment>
</comments>
